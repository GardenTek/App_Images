<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="210mm"
   height="297mm"
   viewBox="0 0 210 297"
   version="1.1"
   id="svg5"
   xml:space="preserve"
   inkscape:version="1.3.2 (091e20e, 2023-11-25, custom)"
   sodipodi:docname="gardenTEK Graphic Design workspace.svg"
   inkscape:export-filename="Wifi Gradient.svg"
   inkscape:export-xdpi="96"
   inkscape:export-ydpi="96"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><sodipodi:namedview
     id="namedview7"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     inkscape:document-units="mm"
     showgrid="false"
     inkscape:zoom="1.4770342"
     inkscape:cx="389.63214"
     inkscape:cy="1143.8462"
     inkscape:window-width="1366"
     inkscape:window-height="705"
     inkscape:window-x="-8"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer1" /><defs
     id="defs2"><inkscape:path-effect
       effect="bspline"
       id="path-effect3818"
       is_visible="true"
       lpeversion="1"
       weight="33.333333"
       steps="2"
       helper_size="0"
       apply_no_weight="true"
       apply_with_weight="true"
       only_selected="false" /><inkscape:path-effect
       effect="bspline"
       id="path-effect3613"
       is_visible="true"
       lpeversion="1"
       weight="33.333333"
       steps="2"
       helper_size="0"
       apply_no_weight="true"
       apply_with_weight="true"
       only_selected="false" /><inkscape:path-effect
       effect="bspline"
       id="path-effect3609"
       is_visible="true"
       lpeversion="1"
       weight="33.333333"
       steps="2"
       helper_size="0"
       apply_no_weight="true"
       apply_with_weight="true"
       only_selected="false" /><rect
       x="185.16836"
       y="680.41756"
       width="174.33584"
       height="17.264326"
       id="rect3499" /><rect
       x="179.41358"
       y="672.63168"
       width="124.57396"
       height="26.404263"
       id="rect3493" /><rect
       x="191.26165"
       y="674.66278"
       width="96.477116"
       height="34.190136"
       id="rect3487" /><linearGradient
       inkscape:collect="always"
       id="linearGradient6131"><stop
         style="stop-color:#18b400;stop-opacity:1;"
         offset="0"
         id="stop6129" /><stop
         style="stop-color:#0753eb;stop-opacity:1;"
         offset="1"
         id="stop6127" /></linearGradient><linearGradient
       id="linearGradient3208"
       inkscape:swatch="gradient"><stop
         style="stop-color:#18b400;stop-opacity:1;"
         offset="0"
         id="stop3204" /><stop
         style="stop-color:#0753eb;stop-opacity:1;"
         offset="1"
         id="stop3206" /></linearGradient><filter
       x="0"
       y="0"
       width="1"
       height="1"
       id="e550b67002"><feColorMatrix
         values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0"
         color-interpolation-filters="sRGB"
         id="feColorMatrix70" /></filter><mask
       id="570d9ece6f"><g
         filter="url(#e550b67002)"
         id="g75"><rect
           x="-81"
           width="972"
           fill="#000000"
           y="-80.999999"
           height="971.999992"
           fill-opacity="0.9"
           id="rect73" /></g></mask><clipPath
       id="d0a04f0855"><rect
         x="0"
         width="810"
         y="0"
         height="810"
         id="rect78" /></clipPath><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3214"
       x1="0"
       y1="405"
       x2="810"
       y2="405"
       gradientUnits="userSpaceOnUse" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3973"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3975"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3977"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3979"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3981"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3983"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3985"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3987"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3989"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3991"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3993"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3995"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3997"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient3999"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient3208"
       id="linearGradient4001"
       gradientUnits="userSpaceOnUse"
       x1="0"
       y1="405"
       x2="810"
       y2="405" /><filter
       x="0"
       y="0"
       width="1"
       height="1"
       id="7cb66e47f4"><feColorMatrix
         values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0"
         color-interpolation-filters="sRGB"
         id="feColorMatrix4375" /></filter><mask
       id="701e8a10cc"><g
         filter="url(#7cb66e47f4)"
         id="g4380"><rect
           x="-81"
           width="972"
           fill="#000000"
           y="-80.999999"
           height="971.999992"
           fill-opacity="0.89"
           id="rect4378" /></g></mask><clipPath
       id="aaae165ecf"><path
         d="M 0.316406 0.335938 L 758.601562 0.335938 L 758.601562 545.558594 L 0.316406 545.558594 Z M 0.316406 0.335938 "
         clip-rule="nonzero"
         id="path4383" /></clipPath><clipPath
       id="719ad17ff1"><rect
         x="0"
         width="759"
         y="0"
         height="546"
         id="rect4386" /></clipPath><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient6131"
       id="linearGradient4483"
       x1="0.31640601"
       y1="272.91602"
       x2="758.49414"
       y2="272.91602"
       gradientUnits="userSpaceOnUse" /><filter
       x="0"
       y="0"
       width="1"
       height="1"
       id="171b44ac8b"><feColorMatrix
         values="0 0 0 0 1 0 0 0 0 1 0 0 0 0 1 0 0 0 1 0"
         color-interpolation-filters="sRGB"
         id="feColorMatrix5612" /></filter><mask
       id="1ae7acb2a0"><g
         filter="url(#171b44ac8b)"
         id="g5617"><rect
           x="-81"
           width="972"
           fill="#000000"
           y="-80.999999"
           height="971.999992"
           fill-opacity="0.9"
           id="rect5615" /></g></mask><clipPath
       id="74da1dbea3"><path
         d="M 0.078125 0.25 L 574.398438 0.25 L 574.398438 450.25 L 0.078125 450.25 Z M 0.078125 0.25 "
         clip-rule="nonzero"
         id="path5620" /></clipPath><clipPath
       id="5c58867d71"><rect
         x="0"
         width="575"
         y="0"
         height="452"
         id="rect5623" /></clipPath><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient6131"
       id="linearGradient6125"
       x1="63.959648"
       y1="121.27112"
       x2="121.94161"
       y2="121.27112"
       gradientUnits="userSpaceOnUse" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient6131"
       id="linearGradient2595"
       x1="70.066513"
       y1="164.53246"
       x2="96.262085"
       y2="164.53246"
       gradientUnits="userSpaceOnUse"
       gradientTransform="translate(-33.408022,20.42099)" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient6131"
       id="linearGradient992"
       x1="177.84325"
       y1="109.5653"
       x2="203.92532"
       y2="109.5653"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1.9889903,0,0,1.9889903,-339.66798,-49.981234)" /><linearGradient
       id="linearGradient15010"><stop
         style="stop-color:#999999;stop-opacity:1;"
         offset="0"
         id="stop15008" /></linearGradient><linearGradient
       id="linearGradient11800"><stop
         style="stop-color:#000000;stop-opacity:1;"
         offset="0"
         id="stop11796" /><stop
         style="stop-color:#000000;stop-opacity:0;"
         offset="1"
         id="stop11798" /></linearGradient><linearGradient
       id="linearGradient11774"><stop
         style="stop-color:#a6c36a;stop-opacity:1;"
         offset="0"
         id="stop11772" /></linearGradient><linearGradient
       id="linearGradient9937"><stop
         style="stop-color:#c55b5b;stop-opacity:1;"
         offset="0"
         id="stop9935" /></linearGradient><linearGradient
       id="linearGradient9933"><stop
         style="stop-color:#157dc4;stop-opacity:1;"
         offset="0.00000015"
         id="stop9929" /><stop
         style="stop-color:#10a800;stop-opacity:0;"
         offset="0.99999982"
         id="stop9931" /></linearGradient><linearGradient
       id="swatch5"><stop
         style="stop-color:#4f6dbd;stop-opacity:1;"
         offset="0"
         id="stop5" /></linearGradient><filter
       style="color-interpolation-filters:sRGB"
       id="filter275-9"
       x="-0.44638037"
       y="-0.45284966"
       width="1.8927607"
       height="1.9056993"><feGaussianBlur
         stdDeviation="13.377246"
         in="SourceAlpha"
         result="result0"
         id="feGaussianBlur272-0" /><feMorphology
         in="SourceAlpha"
         radius="6.6"
         result="result1"
         id="feMorphology272-8" /><feGaussianBlur
         stdDeviation="8.9"
         in="result1"
         id="feGaussianBlur273-6" /><feColorMatrix
         values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.3 0"
         result="result91"
         id="feColorMatrix273-2" /><feComposite
         in="result0"
         operator="out"
         result="result2"
         in2="result91"
         id="feComposite273-7" /><feGaussianBlur
         stdDeviation="1.7"
         result="result4"
         id="feGaussianBlur274-9" /><feDiffuseLighting
         surfaceScale="10"
         id="feDiffuseLighting274-4"><feDistantLight
           azimuth="225"
           elevation="45"
           id="feDistantLight274-7" /></feDiffuseLighting><feBlend
         in2="SourceGraphic"
         mode="multiply"
         id="feBlend274-8" /><feComposite
         in2="SourceAlpha"
         operator="in"
         result="result3"
         id="feComposite274-7" /><feSpecularLighting
         in="result4"
         surfaceScale="5"
         specularExponent="17.89999962"
         id="feSpecularLighting275-3"><feDistantLight
           azimuth="225"
           elevation="45"
           id="feDistantLight275-7" /></feSpecularLighting><feComposite
         in2="result3"
         operator="atop"
         id="feComposite275-4"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix315" /><feMorphology
         id="feMorphology315"
         radius="4"
         in="fbSourceGraphic"
         result="result0" /><feGaussianBlur
         id="feGaussianBlur315"
         in="result0"
         stdDeviation="8"
         result="result91" /><feComposite
         id="feComposite315"
         operator="in"
         in="fbSourceGraphic"
         in2="result91"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix317" /><feGaussianBlur
         id="feGaussianBlur317"
         stdDeviation="100 100"
         result="blur"
         in="fbSourceGraphic" /></filter><clipPath
       id="12a6f414f8-3-71"><path
         d="M 101.80078,0 H 708.25391 V 810 H 101.80078 Z m 0,0"
         clip-rule="nonzero"
         id="path1-7-9-8" /></clipPath><clipPath
       id="313c1bc123"><path
         d="M 101.800781 0 L 708.253906 0 L 708.253906 810 L 101.800781 810 Z M 101.800781 0 "
         clip-rule="nonzero"
         id="path10705" /></clipPath><clipPath
       id="12a6f414f8-3-71-8"><path
         d="M 101.80078,0 H 708.25391 V 810 H 101.80078 Z m 0,0"
         clip-rule="nonzero"
         id="path1-7-9-8-9" /></clipPath><filter
       style="color-interpolation-filters:sRGB"
       id="filter275-9-9"
       x="-0.44638037"
       y="-0.45284966"
       width="1.8927607"
       height="1.9056993"><feGaussianBlur
         stdDeviation="13.377246"
         in="SourceAlpha"
         result="result0"
         id="feGaussianBlur272-0-5" /><feMorphology
         in="SourceAlpha"
         radius="6.6"
         result="result1"
         id="feMorphology272-8-6" /><feGaussianBlur
         stdDeviation="8.9"
         in="result1"
         id="feGaussianBlur273-6-7" /><feColorMatrix
         values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.3 0"
         result="result91"
         id="feColorMatrix273-2-9" /><feComposite
         in="result0"
         operator="out"
         result="result2"
         in2="result91"
         id="feComposite273-7-7" /><feGaussianBlur
         stdDeviation="1.7"
         result="result4"
         id="feGaussianBlur274-9-5" /><feDiffuseLighting
         surfaceScale="10"
         id="feDiffuseLighting274-4-2"><feDistantLight
           azimuth="225"
           elevation="45"
           id="feDistantLight274-7-4" /></feDiffuseLighting><feBlend
         in2="SourceGraphic"
         mode="multiply"
         id="feBlend274-8-2" /><feComposite
         in2="SourceAlpha"
         operator="in"
         result="result3"
         id="feComposite274-7-5" /><feSpecularLighting
         in="result4"
         surfaceScale="5"
         specularExponent="17.89999962"
         id="feSpecularLighting275-3-3"><feDistantLight
           azimuth="225"
           elevation="45"
           id="feDistantLight275-7-5" /></feSpecularLighting><feComposite
         in2="result3"
         operator="atop"
         id="feComposite275-4-8"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix315-5" /><feMorphology
         id="feMorphology315-1"
         radius="4"
         in="fbSourceGraphic"
         result="result0" /><feGaussianBlur
         id="feGaussianBlur315-8"
         in="result0"
         stdDeviation="8"
         result="result91" /><feComposite
         id="feComposite315-5"
         operator="in"
         in="fbSourceGraphic"
         in2="result91"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix317-6" /><feGaussianBlur
         id="feGaussianBlur317-9"
         stdDeviation="100 100"
         result="blur"
         in="fbSourceGraphic" /></filter><clipPath
       id="12a6f414f8-3-71-3"><path
         d="M 101.80078,0 H 708.25391 V 810 H 101.80078 Z m 0,0"
         clip-rule="nonzero"
         id="path1-7-9-8-6" /></clipPath><clipPath
       id="484e6af075"><path
         d="M 364 0 L 806 0 L 806 793.5 L 364 793.5 Z M 364 0 "
         clip-rule="nonzero"
         id="path11365" /></clipPath><clipPath
       id="72fe526092"><path
         d="M 3 48 L 338 48 L 338 650 L 3 650 Z M 3 48 "
         clip-rule="nonzero"
         id="path11368" /></clipPath><clipPath
       id="f0aa310c86"><path
         d="M 82.160156 48.28125 C 74.5625 86.429688 93.636719 125.765625 121.097656 153.230469 C 148.5625 180.691406 183.703125 198.976562 217.261719 218.605469 C 250.820312 238.234375 284.300781 260.550781 305.433594 293.238281 C 323.796875 321.652344 331.234375 355.6875 335.113281 389.324219 C 339.78125 430.007812 339.148438 472.824219 326.167969 511.210938 C 316.75 488.101562 304.484375 465.9375 290.472656 445.28125 C 263.011719 404.601562 229.214844 368.667969 195.578125 332.972656 C 156.242188 291.261719 116.984375 249.550781 77.648438 207.839844 C 118.328125 284.136719 181.410156 345.554688 234.753906 413.703125 C 288.101562 481.769531 333.53125 563.054688 328.542969 649.402344 C 324.585938 605.238281 288.734375 570.175781 249.871094 548.804688 C 211.011719 527.4375 167.398438 515.566406 129.015625 493.246094 C 56.515625 450.820312 7.761719 370.410156 3.960938 286.59375 C 0.164062 201.824219 38.867188 121.253906 82.160156 48.28125 Z M 82.160156 48.28125 "
         clip-rule="nonzero"
         id="path11371" /></clipPath><filter
       style="color-interpolation-filters:sRGB"
       id="filter275-9-6"
       x="-0.44638037"
       y="-0.45284966"
       width="1.8927607"
       height="1.9056993"><feGaussianBlur
         stdDeviation="13.377246"
         in="SourceAlpha"
         result="result0"
         id="feGaussianBlur272-0-6" /><feMorphology
         in="SourceAlpha"
         radius="6.6"
         result="result1"
         id="feMorphology272-8-1" /><feGaussianBlur
         stdDeviation="8.9"
         in="result1"
         id="feGaussianBlur273-6-0" /><feColorMatrix
         values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.3 0"
         result="result91"
         id="feColorMatrix273-2-7" /><feComposite
         in="result0"
         operator="out"
         result="result2"
         in2="result91"
         id="feComposite273-7-4" /><feGaussianBlur
         stdDeviation="1.7"
         result="result4"
         id="feGaussianBlur274-9-3" /><feDiffuseLighting
         surfaceScale="10"
         id="feDiffuseLighting274-4-4"><feDistantLight
           azimuth="225"
           elevation="45"
           id="feDistantLight274-7-3" /></feDiffuseLighting><feBlend
         in2="SourceGraphic"
         mode="multiply"
         id="feBlend274-8-8" /><feComposite
         in2="SourceAlpha"
         operator="in"
         result="result3"
         id="feComposite274-7-8" /><feSpecularLighting
         in="result4"
         surfaceScale="5"
         specularExponent="17.89999962"
         id="feSpecularLighting275-3-6"><feDistantLight
           azimuth="225"
           elevation="45"
           id="feDistantLight275-7-1" /></feSpecularLighting><feComposite
         in2="result3"
         operator="atop"
         id="feComposite275-4-9"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix315-9" /><feMorphology
         id="feMorphology315-4"
         radius="4"
         in="fbSourceGraphic"
         result="result0" /><feGaussianBlur
         id="feGaussianBlur315-4"
         in="result0"
         stdDeviation="8"
         result="result91" /><feComposite
         id="feComposite315-2"
         operator="in"
         in="fbSourceGraphic"
         in2="result91"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix317-4" /><feGaussianBlur
         id="feGaussianBlur317-8"
         stdDeviation="100 100"
         result="blur"
         in="fbSourceGraphic" /></filter><clipPath
       id="12a6f414f8-3-71-7"><path
         d="M 101.80078,0 H 708.25391 V 810 H 101.80078 Z m 0,0"
         clip-rule="nonzero"
         id="path1-7-9-8-63" /></clipPath><filter
       style="color-interpolation-filters:sRGB"
       id="filter275-9-6-5"
       x="-0.44638037"
       y="-0.45284966"
       width="1.8927607"
       height="1.9056993"><feGaussianBlur
         stdDeviation="13.377246"
         in="SourceAlpha"
         result="result0"
         id="feGaussianBlur272-0-6-7" /><feMorphology
         in="SourceAlpha"
         radius="6.6"
         result="result1"
         id="feMorphology272-8-1-5" /><feGaussianBlur
         stdDeviation="8.9"
         in="result1"
         id="feGaussianBlur273-6-0-3" /><feColorMatrix
         values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.3 0"
         result="result91"
         id="feColorMatrix273-2-7-3" /><feComposite
         in="result0"
         operator="out"
         result="result2"
         in2="result91"
         id="feComposite273-7-4-0" /><feGaussianBlur
         stdDeviation="1.7"
         result="result4"
         id="feGaussianBlur274-9-3-3" /><feDiffuseLighting
         surfaceScale="10"
         id="feDiffuseLighting274-4-4-0"><feDistantLight
           azimuth="225"
           elevation="45"
           id="feDistantLight274-7-3-1" /></feDiffuseLighting><feBlend
         in2="SourceGraphic"
         mode="multiply"
         id="feBlend274-8-8-7" /><feComposite
         in2="SourceAlpha"
         operator="in"
         result="result3"
         id="feComposite274-7-8-3" /><feSpecularLighting
         in="result4"
         surfaceScale="5"
         specularExponent="17.89999962"
         id="feSpecularLighting275-3-6-3"><feDistantLight
           azimuth="225"
           elevation="45"
           id="feDistantLight275-7-1-8" /></feSpecularLighting><feComposite
         in2="result3"
         operator="atop"
         id="feComposite275-4-9-9"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix315-9-2" /><feMorphology
         id="feMorphology315-4-1"
         radius="4"
         in="fbSourceGraphic"
         result="result0" /><feGaussianBlur
         id="feGaussianBlur315-4-7"
         in="result0"
         stdDeviation="8"
         result="result91" /><feComposite
         id="feComposite315-2-4"
         operator="in"
         in="fbSourceGraphic"
         in2="result91"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix317-4-7" /><feGaussianBlur
         id="feGaussianBlur317-8-6"
         stdDeviation="100 100"
         result="blur"
         in="fbSourceGraphic" /></filter><filter
       style="color-interpolation-filters:sRGB"
       id="filter275-9-9-8"
       x="-0.50249484"
       y="-0.50977739"
       width="2.0049897"
       height="2.0195548"><feGaussianBlur
         stdDeviation="29.412884"
         in="SourceAlpha"
         result="result0"
         id="feGaussianBlur272-0-5-1" /><feMorphology
         in="SourceAlpha"
         radius="6.6"
         result="result1"
         id="feMorphology272-8-6-5" /><feGaussianBlur
         stdDeviation="8.9"
         in="result1"
         id="feGaussianBlur273-6-7-6" /><feColorMatrix
         values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.3 0"
         result="result91"
         id="feColorMatrix273-2-9-0" /><feComposite
         in="result0"
         operator="out"
         result="result2"
         in2="result91"
         id="feComposite273-7-7-0" /><feGaussianBlur
         stdDeviation="1.7"
         result="result4"
         id="feGaussianBlur274-9-5-1" /><feDiffuseLighting
         surfaceScale="10"
         id="feDiffuseLighting274-4-2-6"><feDistantLight
           azimuth="225"
           elevation="45"
           id="feDistantLight274-7-4-8" /></feDiffuseLighting><feBlend
         in2="SourceGraphic"
         mode="multiply"
         id="feBlend274-8-2-4" /><feComposite
         in2="SourceAlpha"
         operator="in"
         result="result3"
         id="feComposite274-7-5-4" /><feSpecularLighting
         in="result4"
         surfaceScale="5"
         specularExponent="17.89999962"
         id="feSpecularLighting275-3-3-9"><feDistantLight
           azimuth="225"
           elevation="45"
           id="feDistantLight275-7-5-3" /></feSpecularLighting><feComposite
         in2="result3"
         operator="atop"
         id="feComposite275-4-8-5"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix315-5-7" /><feMorphology
         id="feMorphology315-1-4"
         radius="4"
         in="fbSourceGraphic"
         result="result0" /><feGaussianBlur
         id="feGaussianBlur315-8-2"
         in="result0"
         stdDeviation="8"
         result="result91" /><feComposite
         id="feComposite315-5-0"
         operator="in"
         in="fbSourceGraphic"
         in2="result91"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix317-6-2" /><feGaussianBlur
         id="feGaussianBlur317-9-2"
         stdDeviation="100 100"
         result="blur"
         in="fbSourceGraphic" /></filter><clipPath
       id="484e6af075-2"><path
         d="M 364,0 H 806 V 793.5 H 364 Z m 0,0"
         clip-rule="nonzero"
         id="path11365-9" /></clipPath><clipPath
       id="72fe526092-5"><path
         d="M 3,48 H 338 V 650 H 3 Z m 0,0"
         clip-rule="nonzero"
         id="path11368-2" /></clipPath><clipPath
       id="f0aa310c86-6"><path
         d="m 82.160156,48.28125 c -7.597656,38.148438 11.476563,77.48438 38.937504,104.94922 27.46484,27.46094 62.60546,45.74609 96.16406,65.375 33.55859,19.6289 67.03906,41.94531 88.17187,74.63281 18.36328,28.41406 25.80078,62.44922 29.67969,96.08594 4.66797,40.68359 4.03516,83.5 -8.94531,121.88672 C 316.75,488.10156 304.48437,465.9375 290.47266,445.28125 263.01172,404.60156 229.21484,368.66797 195.57812,332.97266 156.24219,291.26172 116.98438,249.55078 77.648438,207.83984 118.32813,284.13672 181.41016,345.55469 234.75391,413.70312 c 53.34765,68.06641 98.77734,149.35157 93.78906,235.69922 -3.95703,-44.16406 -39.8086,-79.22656 -78.67188,-100.59765 C 211.01172,527.4375 167.39844,515.56641 129.01562,493.24609 56.515625,450.82031 7.761719,370.41016 3.960938,286.59375 0.164062,201.82422 38.867188,121.25391 82.160156,48.28125 Z m 0,0"
         clip-rule="nonzero"
         id="path11371-9" /></clipPath><script
       id="mesh_polyfill-9-1-7"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
       id="mesh_polyfill-4-4-2"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
       id="mesh_polyfill-8-9-0"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
       id="mesh_polyfill-2-2"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><clipPath
       id="590628b2da"><path
         d="M 159.804688 1 L 492.804688 1 L 492.804688 809 L 159.804688 809 Z M 159.804688 1 "
         clip-rule="nonzero"
         id="path721" /></clipPath><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient6131"
       id="linearGradient1304"
       x1="101.80078"
       y1="405"
       x2="708.25391"
       y2="405"
       gradientUnits="userSpaceOnUse" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient6131"
       id="linearGradient1312"
       x1="87.433792"
       y1="225.53932"
       x2="127.88225"
       y2="225.53932"
       gradientUnits="userSpaceOnUse"
       gradientTransform="translate(22.039725,-59.785921)" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient6131"
       id="linearGradient2439"
       gradientUnits="userSpaceOnUse"
       x1="101.80078"
       y1="405"
       x2="708.25391"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient6131"
       id="linearGradient2441"
       gradientUnits="userSpaceOnUse"
       x1="101.80078"
       y1="405"
       x2="708.25391"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient6131"
       id="linearGradient2443"
       gradientUnits="userSpaceOnUse"
       x1="101.80078"
       y1="405"
       x2="708.25391"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient6131"
       id="linearGradient2445"
       gradientUnits="userSpaceOnUse"
       x1="101.80078"
       y1="405"
       x2="708.25391"
       y2="405" /><linearGradient
       inkscape:collect="always"
       xlink:href="#linearGradient6131"
       id="linearGradient2447"
       gradientUnits="userSpaceOnUse"
       x1="101.80078"
       y1="405"
       x2="708.25391"
       y2="405" /><g
       id="g3205" /><clipPath
       id="dc5422e632"><path
         d="M 438.558594 52.5 L 483.558594 52.5 L 483.558594 97.5 L 438.558594 97.5 Z M 438.558594 52.5 "
         clip-rule="nonzero"
         id="path3207" /></clipPath><clipPath
       id="ffe67c633b"><path
         d="M 445.503906 52.5 L 476.613281 52.5 C 480.449219 52.5 483.558594 55.609375 483.558594 59.445312 L 483.558594 90.554688 C 483.558594 94.390625 480.449219 97.5 476.613281 97.5 L 445.503906 97.5 C 441.667969 97.5 438.558594 94.390625 438.558594 90.554688 L 438.558594 59.445312 C 438.558594 55.609375 441.667969 52.5 445.503906 52.5 Z M 445.503906 52.5 "
         clip-rule="nonzero"
         id="path3210" /></clipPath><clipPath
       id="3739309a17"><path
         d="M 459.390625 59.074219 L 477.167969 59.074219 L 477.167969 90.878906 L 459.390625 90.878906 Z M 459.390625 59.074219 "
         clip-rule="nonzero"
         id="path3213" /></clipPath><clipPath
       id="9e95465242"><path
         d="M 444.796875 61 L 458.464844 61 L 458.464844 85.183594 L 444.796875 85.183594 Z M 444.796875 61 "
         clip-rule="nonzero"
         id="path3216" /></clipPath><clipPath
       id="5d0a9b7621"><path
         d="M 448.097656 61.011719 C 447.789062 62.542969 448.558594 64.121094 449.660156 65.222656 C 450.761719 66.328125 452.171875 67.0625 453.519531 67.847656 C 454.867188 68.636719 456.210938 69.535156 457.058594 70.84375 C 457.796875 71.988281 458.097656 73.351562 458.25 74.703125 C 458.441406 76.335938 458.414062 78.054688 457.894531 79.597656 C 457.515625 78.667969 457.023438 77.777344 456.460938 76.949219 C 455.355469 75.316406 454 73.875 452.648438 72.441406 C 451.070312 70.765625 449.496094 69.089844 447.914062 67.417969 C 449.546875 70.480469 452.082031 72.945312 454.222656 75.683594 C 456.363281 78.414062 458.1875 81.679688 457.988281 85.144531 C 457.828125 83.371094 456.390625 81.964844 454.828125 81.105469 C 453.269531 80.25 451.519531 79.773438 449.976562 78.875 C 447.066406 77.171875 445.109375 73.945312 444.957031 70.578125 C 444.804688 67.175781 446.359375 63.941406 448.097656 61.011719 Z M 448.097656 61.011719 "
         clip-rule="nonzero"
         id="path3219" /></clipPath><filter
       style="color-interpolation-filters:sRGB"
       id="filter275-9-9-8-8"
       x="-0.50249484"
       y="-0.50977739"
       width="2.0049897"
       height="2.0195548"><feGaussianBlur
         stdDeviation="29.412884"
         in="SourceAlpha"
         result="result0"
         id="feGaussianBlur272-0-5-1-2" /><feMorphology
         in="SourceAlpha"
         radius="6.6"
         result="result1"
         id="feMorphology272-8-6-5-8" /><feGaussianBlur
         stdDeviation="8.9"
         in="result1"
         id="feGaussianBlur273-6-7-6-3" /><feColorMatrix
         values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.3 0"
         result="result91"
         id="feColorMatrix273-2-9-0-3" /><feComposite
         in="result0"
         operator="out"
         result="result2"
         in2="result91"
         id="feComposite273-7-7-0-2" /><feGaussianBlur
         stdDeviation="1.7"
         result="result4"
         id="feGaussianBlur274-9-5-1-0" /><feDiffuseLighting
         surfaceScale="10"
         id="feDiffuseLighting274-4-2-6-0"><feDistantLight
           azimuth="225"
           elevation="45"
           id="feDistantLight274-7-4-8-8" /></feDiffuseLighting><feBlend
         in2="SourceGraphic"
         mode="multiply"
         id="feBlend274-8-2-4-6" /><feComposite
         in2="SourceAlpha"
         operator="in"
         result="result3"
         id="feComposite274-7-5-4-7" /><feSpecularLighting
         in="result4"
         surfaceScale="5"
         specularExponent="17.89999962"
         id="feSpecularLighting275-3-3-9-7"><feDistantLight
           azimuth="225"
           elevation="45"
           id="feDistantLight275-7-5-3-9" /></feSpecularLighting><feComposite
         in2="result3"
         operator="atop"
         id="feComposite275-4-8-5-0"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix315-5-7-2" /><feMorphology
         id="feMorphology315-1-4-1"
         radius="4"
         in="fbSourceGraphic"
         result="result0" /><feGaussianBlur
         id="feGaussianBlur315-8-2-7"
         in="result0"
         stdDeviation="8"
         result="result91" /><feComposite
         id="feComposite315-5-0-4"
         operator="in"
         in="fbSourceGraphic"
         in2="result91"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix317-6-2-8" /><feGaussianBlur
         id="feGaussianBlur317-9-2-2"
         stdDeviation="100 100"
         result="blur"
         in="fbSourceGraphic" /></filter><clipPath
       id="484e6af075-2-4"><path
         d="M 364,0 H 806 V 793.5 H 364 Z m 0,0"
         clip-rule="nonzero"
         id="path11365-9-8" /></clipPath><clipPath
       id="72fe526092-5-8"><path
         d="M 3,48 H 338 V 650 H 3 Z m 0,0"
         clip-rule="nonzero"
         id="path11368-2-0" /></clipPath><clipPath
       id="f0aa310c86-6-5"><path
         d="m 82.160156,48.28125 c -7.597656,38.148438 11.476563,77.48438 38.937504,104.94922 27.46484,27.46094 62.60546,45.74609 96.16406,65.375 33.55859,19.6289 67.03906,41.94531 88.17187,74.63281 18.36328,28.41406 25.80078,62.44922 29.67969,96.08594 4.66797,40.68359 4.03516,83.5 -8.94531,121.88672 C 316.75,488.10156 304.48437,465.9375 290.47266,445.28125 263.01172,404.60156 229.21484,368.66797 195.57812,332.97266 156.24219,291.26172 116.98438,249.55078 77.648438,207.83984 118.32813,284.13672 181.41016,345.55469 234.75391,413.70312 c 53.34765,68.06641 98.77734,149.35157 93.78906,235.69922 -3.95703,-44.16406 -39.8086,-79.22656 -78.67188,-100.59765 C 211.01172,527.4375 167.39844,515.56641 129.01562,493.24609 56.515625,450.82031 7.761719,370.41016 3.960938,286.59375 0.164062,201.82422 38.867188,121.25391 82.160156,48.28125 Z m 0,0"
         clip-rule="nonzero"
         id="path11371-9-1" /></clipPath><filter
       style="color-interpolation-filters:sRGB"
       id="filter275-9-9-8-8-7"
       x="-0.50249484"
       y="-0.50977739"
       width="2.0049897"
       height="2.0195548"><feGaussianBlur
         stdDeviation="29.412884"
         in="SourceAlpha"
         result="result0"
         id="feGaussianBlur272-0-5-1-2-5" /><feMorphology
         in="SourceAlpha"
         radius="6.6"
         result="result1"
         id="feMorphology272-8-6-5-8-6" /><feGaussianBlur
         stdDeviation="8.9"
         in="result1"
         id="feGaussianBlur273-6-7-6-3-7" /><feColorMatrix
         values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.3 0"
         result="result91"
         id="feColorMatrix273-2-9-0-3-3" /><feComposite
         in="result0"
         operator="out"
         result="result2"
         in2="result91"
         id="feComposite273-7-7-0-2-0" /><feGaussianBlur
         stdDeviation="1.7"
         result="result4"
         id="feGaussianBlur274-9-5-1-0-6" /><feDiffuseLighting
         surfaceScale="10"
         id="feDiffuseLighting274-4-2-6-0-2"><feDistantLight
           azimuth="225"
           elevation="45"
           id="feDistantLight274-7-4-8-8-7" /></feDiffuseLighting><feBlend
         in2="SourceGraphic"
         mode="multiply"
         id="feBlend274-8-2-4-6-9" /><feComposite
         in2="SourceAlpha"
         operator="in"
         result="result3"
         id="feComposite274-7-5-4-7-2" /><feSpecularLighting
         in="result4"
         surfaceScale="5"
         specularExponent="17.89999962"
         id="feSpecularLighting275-3-3-9-7-6"><feDistantLight
           azimuth="225"
           elevation="45"
           id="feDistantLight275-7-5-3-9-9" /></feSpecularLighting><feComposite
         in2="result3"
         operator="atop"
         id="feComposite275-4-8-5-0-1"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix315-5-7-2-4" /><feMorphology
         id="feMorphology315-1-4-1-4"
         radius="4"
         in="fbSourceGraphic"
         result="result0" /><feGaussianBlur
         id="feGaussianBlur315-8-2-7-6"
         in="result0"
         stdDeviation="8"
         result="result91" /><feComposite
         id="feComposite315-5-0-4-0"
         operator="in"
         in="fbSourceGraphic"
         in2="result91"
         result="fbSourceGraphic" /><feColorMatrix
         result="fbSourceGraphicAlpha"
         in="fbSourceGraphic"
         values="0 0 0 -1 0 0 0 0 -1 0 0 0 0 -1 0 0 0 0 1 0"
         id="feColorMatrix317-6-2-8-5" /><feGaussianBlur
         id="feGaussianBlur317-9-2-2-0"
         stdDeviation="100 100"
         result="blur"
         in="fbSourceGraphic" /></filter><clipPath
       id="484e6af075-2-4-4"><path
         d="M 364,0 H 806 V 793.5 H 364 Z m 0,0"
         clip-rule="nonzero"
         id="path11365-9-8-2" /></clipPath><clipPath
       id="72fe526092-5-8-4"><path
         d="M 3,48 H 338 V 650 H 3 Z m 0,0"
         clip-rule="nonzero"
         id="path11368-2-0-3" /></clipPath><clipPath
       id="f0aa310c86-6-5-0"><path
         d="m 82.160156,48.28125 c -7.597656,38.148438 11.476563,77.48438 38.937504,104.94922 27.46484,27.46094 62.60546,45.74609 96.16406,65.375 33.55859,19.6289 67.03906,41.94531 88.17187,74.63281 18.36328,28.41406 25.80078,62.44922 29.67969,96.08594 4.66797,40.68359 4.03516,83.5 -8.94531,121.88672 C 316.75,488.10156 304.48437,465.9375 290.47266,445.28125 263.01172,404.60156 229.21484,368.66797 195.57812,332.97266 156.24219,291.26172 116.98438,249.55078 77.648438,207.83984 118.32813,284.13672 181.41016,345.55469 234.75391,413.70312 c 53.34765,68.06641 98.77734,149.35157 93.78906,235.69922 -3.95703,-44.16406 -39.8086,-79.22656 -78.67188,-100.59765 C 211.01172,527.4375 167.39844,515.56641 129.01562,493.24609 56.515625,450.82031 7.761719,370.41016 3.960938,286.59375 0.164062,201.82422 38.867188,121.25391 82.160156,48.28125 Z m 0,0"
         clip-rule="nonzero"
         id="path11371-9-1-6" /></clipPath></defs><g
     inkscape:label="Layer 1"
     inkscape:groupmode="layer"
     id="layer1"><g
       clip-path="url(#d0a04f0855)"
       id="g121"
       mask="url(#mask189)"
       transform="matrix(0.07402431,0,0,0.07402431,17.753476,20.890269)"
       style="opacity:1;fill:url(#linearGradient3214);fill-opacity:1"><path
         fill="#0753eb"
         d="m 65.324219,52.257812 c -7.199219,0 -13.066407,5.867188 -13.066407,13.066407 0,7.195312 5.867188,13.0625 13.066407,13.0625 7.195312,0 13.0625,-5.867188 13.0625,-13.0625 0,-7.199219 -5.867188,-13.066407 -13.0625,-13.066407"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path83"
         style="fill:url(#linearGradient3973);fill-opacity:1" /><path
         fill="#0753eb"
         d="m 117.58203,52.257812 c -7.19531,0 -13.0664,5.867188 -13.0664,13.066407 0,7.195312 5.87109,13.0625 13.0664,13.0625 7.19531,0 13.0625,-5.867188 13.0625,-13.0625 0,-7.199219 -5.86719,-13.066407 -13.0625,-13.066407"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path85"
         style="fill:url(#linearGradient3975);fill-opacity:1" /><path
         fill="#0753eb"
         d="M 378.87109,757.74219 H 405 c 7.19531,0 13.06641,-5.86719 13.06641,-13.06641 0,-7.19531 -5.8711,-13.0625 -13.06641,-13.0625 h -26.12891 c -7.19531,0 -13.0664,5.86719 -13.0664,13.0625 0,7.19922 5.87109,13.06641 13.0664,13.06641"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path87"
         style="fill:url(#linearGradient3977);fill-opacity:1" /><path
         fill="#0753eb"
         d="m 65.324219,757.74219 h 26.128906 c 7.195313,0 13.062505,-5.86719 13.062505,-13.06641 0,-7.19531 -5.867192,-13.0625 -13.062505,-13.0625 H 65.324219 c -7.199219,0 -13.066407,5.86719 -13.066407,13.0625 0,7.19922 5.867188,13.06641 13.066407,13.06641"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path89"
         style="fill:url(#linearGradient3979);fill-opacity:1" /><path
         fill="#0753eb"
         d="m 195.96875,757.74219 h 78.38672 c 7.19531,0 13.0625,-5.86719 13.0625,-13.06641 0,-7.19531 -5.86719,-13.0625 -13.0625,-13.0625 h -78.38672 c -7.19531,0 -13.06641,5.86719 -13.06641,13.0625 0,7.19922 5.8711,13.06641 13.06641,13.06641"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path91"
         style="fill:url(#linearGradient3981);fill-opacity:1" /><path
         fill="#0753eb"
         d="M 313.54687,78.386719 H 418.06641 V 52.257812 H 313.54687 v 26.128907"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path93"
         style="fill:url(#linearGradient3983);fill-opacity:1" /><path
         fill="#0753eb"
         d="M 755.64844,444.19531 H 420.15625 c -15.56641,0 -28.22266,-12.65625 -28.22266,-28.22265 0,-4.89844 1.27735,-9.7461 3.72657,-14.03516 l 36.48828,-63.84375 c 7.85937,-13.77734 12.04687,-29.49609 12.04687,-45.36719 v -70.6289 c 0,-79.25391 64.45313,-143.710941 143.70703,-143.710941 79.25391,0 143.71094,64.457031 143.71094,143.710941 v 70.6289 c 0,15.8711 4.18359,31.58985 12.04297,45.36719 l 36.48828,63.84375 c 2.44922,4.28906 3.72656,9.13672 3.72656,14.03516 0,15.5664 -12.65625,28.22265 -28.22265,28.22265 z m -167.7461,78.38672 c -31.53906,0 -57.92187,-22.45703 -63.99609,-52.25781 h 127.99219 c -6.07422,29.80078 -32.45703,52.25781 -63.9961,52.25781 z m 26.12891,91.04297 -137.42969,-105.74219 23.47266,-25.3125 c 11.02344,38.1211 46.1875,66.14063 87.82812,66.14063 9.08594,0 17.86328,-1.37891 26.12891,-3.82813 z M 221.33203,627.09766 357.18359,522.58203 h 95.63282 L 588.66797,627.09766 Z M 333.39844,507.88281 195.96875,613.625 V 359.88672 Z m 86.75781,-37.55859 h 55.67969 l -24.29297,26.1289 H 358.45703 L 212.85937,339.67578 h 188.3125 l -28.22265,49.30078 c -4.64063,8.21485 -7.14453,17.55469 -7.14453,26.9961 0,29.95703 24.39453,54.35156 54.35156,54.35156 z m 24.03906,209.03125 H 26.128906 V 130.64453 H 444.19531 v 1.32813 c -16.48437,26.17968 -26.1289,57.0039 -26.1289,90.125 v 70.6289 c 0,7.09375 -1.27735,14.13672 -3.57422,20.82031 H 169.83984 v 339.67969 h 274.35547 z m 0,65.32031 c 0,21.64063 -17.55859,39.19531 -39.19531,39.19531 H 65.324219 c -21.640625,0 -39.195313,-17.55468 -39.195313,-39.19531 V 705.48437 H 444.19531 Z M 26.128906,65.324219 c 0,-21.640625 17.554688,-39.195313 39.195313,-39.195313 H 405 c 21.63672,0 39.19531,17.554688 39.19531,39.195313 V 104.51563 H 26.128906 Z M 561.77344,52.257812 c 0,-14.390624 11.73828,-26.128906 26.1289,-26.128906 14.39063,0 26.12891,11.738282 26.12891,26.128906 v 2.246094 c -8.52344,-1.328125 -17.25,-2.246094 -26.12891,-2.246094 -8.8789,0 -17.60547,0.917969 -26.1289,2.246094 z M 810,415.97266 c 0,-9.44141 -2.5,-18.78125 -7.14453,-26.9961 l -36.48828,-63.84375 c -5.66407,-9.84765 -8.625,-21.02734 -8.625,-32.40625 v -70.6289 c 0,-75.42969 -49.45313,-139.421879 -117.58203,-161.519535 V 52.257812 C 640.16016,23.425781 616.73828,0 587.90234,0 559.07031,0 535.64453,23.425781 535.64453,52.257812 v 8.320313 c -24.75,8.011719 -47,21.585937 -65.32031,39.242187 V 65.324219 C 470.32422,29.292969 441.03125,0 405,0 H 65.324219 C 29.292969,0 0,29.292969 0,65.324219 V 744.67578 C 0,780.70703 29.292969,810 65.324219,810 H 405 c 36.03125,0 65.32422,-29.29297 65.32422,-65.32422 V 653.22656 H 640.16016 V 532.17578 c 20.26171,-14.13672 34.5,-36.28516 38.12109,-61.85156 h 77.36719 C 785.60547,470.32422 810,445.92969 810,415.97266"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path95"
         style="fill:url(#linearGradient3985);fill-opacity:1" /><path
         fill="#0753eb"
         d="m 587.90234,104.51563 v 26.1289 c 50.42188,0 91.45313,41.03125 91.45313,91.45313 h 26.1289 c 0,-64.8125 -52.76953,-117.58203 -117.58203,-117.58203"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path97"
         style="fill:url(#linearGradient3987);fill-opacity:1" /><path
         fill="#0753eb"
         d="m 62.402667,295.99069 c -5.70173,0 -10.35413,4.6493 -10.35413,10.35103 0,5.70173 4.6524,10.35412 10.35413,10.35412 5.70172,0 10.35102,-4.65239 10.35102,-10.35412 0,-5.70173 -4.6493,-10.35103 -10.35102,-10.35103"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path107"
         style="fill:url(#linearGradient3989);fill-opacity:1;stroke-width:0.792423" /><path
         fill="#0753eb"
         d="m 52.048537,275.28555 h 20.70515 v -124.2309 h -20.70515 v 124.2309"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path109"
         style="fill:url(#linearGradient3991);fill-opacity:1;stroke-width:0.792423" /><path
         fill="#0753eb"
         d="m 103.81296,295.99069 c -5.701733,0 -10.354123,4.6493 -10.354123,10.35103 0,5.70173 4.65239,10.35412 10.354123,10.35412 5.70173,0 10.35103,-4.65239 10.35103,-10.35412 0,-5.70173 -4.6493,-10.35103 -10.35103,-10.35103"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path111"
         style="fill:url(#linearGradient3993);fill-opacity:1;stroke-width:0.792423" /><path
         fill="#0753eb"
         d="M 93.458837,275.28555 H 114.16399 V 151.05465 H 93.458837 v 124.2309"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path113"
         style="fill:url(#linearGradient3995);fill-opacity:1;stroke-width:0.792423" /><path
         fill="#0753eb"
         d="m 145.22326,295.99069 c -5.70173,0 -10.35412,4.6493 -10.35412,10.35103 0,5.70173 4.65239,10.35412 10.35412,10.35412 5.70173,0 10.35102,-4.65239 10.35102,-10.35412 0,-5.70173 -4.64929,-10.35103 -10.35102,-10.35103"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path115"
         style="fill:url(#linearGradient3997);fill-opacity:1;stroke-width:0.792423" /><path
         fill="#0753eb"
         d="m 134.86914,275.28555 h 20.70514 v -124.2309 h -20.70514 v 124.2309"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path117"
         style="fill:url(#linearGradient3999);fill-opacity:1;stroke-width:0.792423" /><path
         fill="#0753eb"
         d="m 679.35547,274.35547 h 26.1289 v -26.12891 h -26.1289 v 26.12891"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path119"
         style="fill:url(#linearGradient4001);fill-opacity:1" /></g><g
       clip-path="url(#719ad17ff1)"
       id="g4409"
       transform="matrix(0.07953468,0,0,0.07953468,98.544479,33.453328)"
       mask="url(#mask4459)"
       style="fill-opacity:1.0;fill:url(#linearGradient4483)"
       inkscape:export-filename="Real Time Data Gradient.svg"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><path
         fill="#0753eb"
         d="m 166.16797,314.08203 v 29.91406 c 0,6.54297 5.30078,11.84375 11.84765,11.84375 6.54297,0 11.84375,-5.30078 11.84375,-11.84375 v -29.91406 c 14.82422,-12.57422 59.23438,-54.58203 59.23438,-106.32422 0,-60.78515 -61.29297,-108.128904 -63.89844,-110.128904 -4.23437,-3.226562 -10.11328,-3.226562 -14.34765,0 -2.60547,1.984375 -63.89844,49.343754 -63.89844,110.128904 0,51.74219 44.41015,93.75 59.23437,106.32422 z m 11.84765,-191.48437 c 14.82032,13.38671 47.38282,47.13281 47.38282,85.16015 0,29.64844 -19.79688,56.6875 -35.53907,73.50781 v -91.27734 c 0,-6.54297 -5.30078,-11.84375 -11.84375,-11.84375 -6.54687,0 -11.84765,5.30078 -11.84765,11.84375 v 91.27734 c -15.74219,-16.82031 -35.53906,-43.875 -35.53906,-73.50781 0,-38.02734 32.57812,-71.77344 47.38671,-85.16015 z m 0,0"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path4391"
         style="fill-opacity:1.0;fill:url(#linearGradient4483)" /><path
         fill="#0753eb"
         d="m 533.41016,225.52734 c -52.25782,0 -94.77344,42.51563 -94.77344,94.77344 0,52.25781 42.51562,94.77344 94.77344,94.77344 52.25781,0 94.77343,-42.51563 94.77343,-94.77344 0,-52.25781 -42.51562,-94.77344 -94.77343,-94.77344 z m 0,165.85157 c -39.19532,0 -71.07813,-31.87891 -71.07813,-71.07813 0,-39.19531 31.88281,-71.07812 71.07813,-71.07812 39.19921,0 71.07812,31.88281 71.07812,71.07812 0,39.19922 -31.87891,71.07813 -71.07812,71.07813 z m 0,0"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path4393"
         style="fill-opacity:1.0;fill:url(#linearGradient4483)" /><path
         fill="#0753eb"
         d="m 308.32422,142.60156 h 130.3125 c 6.54687,0 11.84765,-5.30078 11.84765,-11.84375 0,-6.54687 -5.30078,-11.84765 -11.84765,-11.84765 h -130.3125 c -6.54297,0 -11.84375,5.30078 -11.84375,11.84765 0,6.54297 5.30078,11.84375 11.84375,11.84375 z m 0,0"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path4395"
         style="fill-opacity:1.0;fill:url(#linearGradient4483)" /><path
         fill="#0753eb"
         d="m 308.32422,189.98828 h 130.3125 c 6.54687,0 11.84765,-5.30078 11.84765,-11.84375 0,-6.54687 -5.30078,-11.84766 -11.84765,-11.84766 h -130.3125 c -6.54297,0 -11.84375,5.30079 -11.84375,11.84766 0,6.54297 5.30078,11.84375 11.84375,11.84375 z m 0,0"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path4397"
         style="fill-opacity:1.0;fill:url(#linearGradient4483)" /><path
         fill="#0753eb"
         d="M 308.32422,237.375 H 391.25 c 6.54687,0 11.84766,-5.30078 11.84766,-11.84766 0,-6.54297 -5.30079,-11.84375 -11.84766,-11.84375 h -82.92578 c -6.54297,0 -11.84375,5.30078 -11.84375,11.84375 0,6.54688 5.30078,11.84766 11.84375,11.84766 z m 0,0"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path4399"
         style="fill-opacity:1.0;fill:url(#linearGradient4483)" /><path
         fill="#0753eb"
         d="m 308.32422,284.76172 h 47.38672 c 6.54687,0 11.84765,-5.30078 11.84765,-11.84766 0,-6.54297 -5.30078,-11.84375 -11.84765,-11.84375 h -47.38672 c -6.54297,0 -11.84375,5.30078 -11.84375,11.84375 0,6.54688 5.30078,11.84766 11.84375,11.84766 z m 0,0"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path4401"
         style="fill-opacity:1.0;fill:url(#linearGradient4483)" /><path
         fill="#0753eb"
         d="m 308.32422,332.14844 h 47.38672 c 6.54687,0 11.84765,-5.30078 11.84765,-11.84766 0,-6.54297 -5.30078,-11.84766 -11.84765,-11.84766 h -47.38672 c -6.54297,0 -11.84375,5.30469 -11.84375,11.84766 0,6.54688 5.30078,11.84766 11.84375,11.84766 z m 0,0"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path4403"
         style="fill-opacity:1.0;fill:url(#linearGradient4483)" /><g
         clip-path="url(#aaae165ecf)"
         id="g4407"
         style="fill-opacity:1.0;fill:url(#linearGradient4483)"><path
           fill="#0753eb"
           d="M 755.03125,489.61719 656.59766,391.1875 c 12.07031,-20.87891 18.97265,-45.08984 18.97265,-70.88672 0,-66.11719 -45.375,-121.83984 -106.62109,-137.65625 V 35.984375 C 568.94922,16.394531 553,0.445312 533.41016,0.445312 H 35.855469 c -19.589844,0 -35.539063,15.949219 -35.539063,35.539063 V 415.07422 c 0,19.58984 15.949219,35.53906 35.539063,35.53906 H 237.24609 v 71.07813 h -23.6914 c -6.54688,0 -11.84766,5.30078 -11.84766,11.84765 0,6.54688 5.30078,11.84766 11.84766,11.84766 h 142.15625 c 6.54687,0 11.84765,-5.30078 11.84765,-11.84766 0,-6.54687 -5.30078,-11.84765 -11.84765,-11.84765 h -23.69141 v -71.07813 h 144.61719 c 17.39844,7.60938 36.60547,11.84766 56.77344,11.84766 25.79687,0 50.00781,-6.91797 70.88671,-18.96875 l 98.42969,98.42968 c 2.3086,2.3086 5.34766,3.46485 8.38281,3.46485 3.03516,0 6.05469,-1.15625 8.37891,-3.46485 l 35.54297,-35.54296 c 4.61719,-4.61719 4.61719,-12.125 0,-16.7461 z m -446.70703,32.07422 h -47.38281 v -71.07813 h 47.38281 z M 35.855469,426.92187 c -6.53125,0 -11.847657,-5.3164 -11.847657,-11.84765 V 35.984375 c 0,-6.53125 5.316407,-11.847656 11.847657,-11.847656 H 533.41016 c 6.53125,0 11.84765,5.316406 11.84765,11.847656 V 178.64453 c -3.91015,-0.32422 -7.86328,-0.5 -11.84765,-0.5 -3.98438,0 -7.9375,0.17578 -11.84766,0.5 V 59.675781 c 0,-6.542969 -5.30078,-11.84375 -11.84375,-11.84375 H 59.546875 c -6.542969,0 -11.84375,5.300781 -11.84375,11.84375 V 391.37891 c 0,6.54687 5.300781,11.84765 11.84375,11.84765 H 418.01172 c 6.24609,8.67969 13.46094,16.62891 21.46875,23.69531 z M 497.87109,182.64453 C 436.625,198.46094 391.25,254.18359 391.25,320.30078 c 0,21.13281 4.63672,41.19531 12.94531,59.23438 H 71.394531 V 71.523438 H 497.87109 Z m -82.92578,137.65625 c 0,-65.32031 53.14453,-118.46484 118.46485,-118.46484 65.32031,0 118.46484,53.14453 118.46484,118.46484 0,65.32031 -53.14453,118.46484 -118.46484,118.46484 -65.32032,0 -118.46485,-53.14453 -118.46485,-118.46484 z m 296.16406,196.48828 -87.05859,-87.05469 c 6.82813,-5.67187 13.12109,-11.94921 18.79297,-18.79296 L 729.89844,498 Z m 0,0"
           fill-opacity="1"
           fill-rule="nonzero"
           id="path4405"
           style="fill-opacity:1.0;fill:url(#linearGradient4483)" /></g></g><path
       fill="#0753eb"
       d="m 119.09657,115.02699 c -0.18671,2.8e-4 -0.37144,-0.0177 -0.55499,-0.0541 -0.18315,-0.0363 -0.36117,-0.09 -0.53367,-0.16144 -0.17249,-0.0714 -0.3363,-0.15908 -0.49182,-0.26328 -0.15513,-0.10383 -0.29881,-0.22184 -0.43065,-0.35408 -13.31056,-13.31174 -34.970362,-13.31174 -48.280917,0 -0.06632,0.0651 -0.135392,0.12711 -0.207231,0.18552 -0.07223,0.0584 -0.146839,0.11329 -0.224205,0.1646 -0.07776,0.0509 -0.157496,0.0983 -0.239599,0.14171 -0.0821,0.0434 -0.165784,0.0825 -0.251835,0.11763 -0.08605,0.0351 -0.173285,0.0659 -0.262098,0.0924 -0.08921,0.0268 -0.179205,0.049 -0.270387,0.0667 -0.09079,0.0177 -0.182759,0.0308 -0.275125,0.0398 -0.09236,0.009 -0.185126,0.0131 -0.277887,0.0126 -0.09276,-2.9e-4 -0.185521,-0.005 -0.277493,-0.0146 -0.09236,-0.009 -0.184337,-0.0229 -0.275122,-0.0415 -0.09119,-0.0181 -0.180786,-0.041 -0.269599,-0.0679 -0.08881,-0.0273 -0.176048,-0.0588 -0.261703,-0.0943 -0.08565,-0.0355 -0.169733,-0.0754 -0.251441,-0.11921 -0.08172,-0.0438 -0.161048,-0.0916 -0.238415,-0.14328 -0.07696,-0.0517 -0.151573,-0.10698 -0.223415,-0.16579 -0.07144,-0.0588 -0.140127,-0.12118 -0.206046,-0.18671 -0.06553,-0.0656 -0.127892,-0.1342 -0.186706,-0.20604 -0.05881,-0.0718 -0.114076,-0.14605 -0.165784,-0.22342 -0.05171,-0.077 -0.09947,-0.15671 -0.143287,-0.23841 -0.04381,-0.0817 -0.08329,-0.16539 -0.119206,-0.25105 -0.03552,-0.0857 -0.06711,-0.17289 -0.09395,-0.2617 -0.02724,-0.0888 -0.05012,-0.17881 -0.06828,-0.2696 -0.01816,-0.0912 -0.03198,-0.18276 -0.04145,-0.27512 -0.0095,-0.0924 -0.01421,-0.18513 -0.01461,-0.27789 0,-0.0928 0.004,-0.18552 0.01302,-0.27789 0.0087,-0.0924 0.02171,-0.18394 0.03948,-0.27512 0.01776,-0.0912 0.04026,-0.18118 0.06671,-0.26999 0.02644,-0.0892 0.05724,-0.17645 0.09236,-0.2625 0.03513,-0.0857 0.0746,-0.16973 0.118023,-0.25183 0.04302,-0.0821 0.09039,-0.16184 0.141707,-0.23921 0.05092,-0.0774 0.105782,-0.15236 0.164205,-0.22459 0.05842,-0.0718 0.120392,-0.14093 0.185523,-0.20685 7.518346,-7.51163 17.514389,-11.648751 28.164098,-11.648751 10.650105,0 20.651675,4.137121 28.164495,11.648751 0.0987,0.0987 0.18986,0.20447 0.27315,0.31697 0.0833,0.11211 0.15789,0.23013 0.22381,0.35368 0.0659,0.12315 0.12236,0.25065 0.16973,0.38249 0.047,0.13184 0.0841,0.26644 0.11131,0.40341 0.0273,0.13736 0.0442,0.27591 0.0514,0.41564 0.006,0.13974 0.003,0.27907 -0.0107,0.41842 -0.0134,0.13893 -0.0375,0.27669 -0.0714,0.41209 -0.034,0.13579 -0.0778,0.26841 -0.13144,0.39749 -0.0533,0.12947 -0.11605,0.2538 -0.18829,0.3738 -0.0718,0.12 -0.15197,0.23407 -0.24078,0.34223 -0.0888,0.10816 -0.18513,0.2092 -0.28894,0.30315 -0.10341,0.094 -0.21355,0.1796 -0.32959,0.25736 -0.11645,0.0778 -0.23802,0.14645 -0.36434,0.20644 -0.1267,0.0596 -0.25657,0.11013 -0.39038,0.15078 -0.13421,0.0403 -0.26999,0.0711 -0.40854,0.0916 -0.13855,0.0206 -0.27749,0.0308 -0.41762,0.0308 z m -6.03102,7.21322 c 0.0659,-0.0659 0.12829,-0.135 0.1875,-0.20684 0.0588,-0.0722 0.11447,-0.14684 0.16617,-0.2242 0.0517,-0.0778 0.0995,-0.1575 0.14369,-0.2396 0.0438,-0.0821 0.0837,-0.16618 0.1192,-0.25224 0.0355,-0.0861 0.0671,-0.17367 0.094,-0.26288 0.0272,-0.0892 0.0497,-0.1796 0.0679,-0.27117 0.0182,-0.0912 0.032,-0.18316 0.041,-0.27592 0.009,-0.0928 0.0138,-0.18592 0.0138,-0.27908 0,-0.0931 -0.005,-0.1859 -0.0138,-0.27866 -0.009,-0.0928 -0.0229,-0.18474 -0.041,-0.27631 -0.0182,-0.0912 -0.0407,-0.18158 -0.0679,-0.27079 -0.0268,-0.0892 -0.0584,-0.17683 -0.094,-0.26288 -0.0355,-0.0861 -0.0754,-0.17013 -0.1192,-0.25223 -0.0442,-0.0825 -0.092,-0.16224 -0.14369,-0.23961 -0.0517,-0.0774 -0.10736,-0.15235 -0.16617,-0.22419 -0.0592,-0.0722 -0.12158,-0.14132 -0.1875,-0.20685 -11.09338,-11.09219 -29.141046,-11.09219 -40.234032,0 -0.06513,0.0659 -0.127102,0.135 -0.185522,0.20685 -0.05842,0.0722 -0.113287,0.14683 -0.164601,0.22459 -0.05092,0.0774 -0.09828,0.1571 -0.141706,0.23921 -0.04341,0.0821 -0.0825,0.16617 -0.117629,0.25183 -0.03513,0.0861 -0.06592,0.17329 -0.09236,0.26249 -0.02684,0.0888 -0.04895,0.17882 -0.06671,0.26999 -0.01776,0.0912 -0.03079,0.18276 -0.03986,0.27513 -0.0087,0.0924 -0.01302,0.18512 -0.01263,0.27789 4.01e-4,0.0928 0.0051,0.18552 0.01461,0.27788 0.0091,0.0924 0.0229,0.18395 0.04145,0.27473 0.01816,0.0912 0.04105,0.18118 0.0679,0.27 0.02724,0.0884 0.05881,0.17565 0.09434,0.2617 0.03552,0.0857 0.07539,0.16934 0.119208,0.25104 0.04381,0.0817 0.09157,0.16145 0.143285,0.23842 0.05171,0.0774 0.106971,0.15158 0.165785,0.22341 0.05881,0.0718 0.121181,0.14053 0.186705,0.20605 0.06553,0.0656 0.134208,0.12789 0.206048,0.18671 0.07184,0.0588 0.146048,0.11407 0.223415,0.16578 0.07696,0.0517 0.156706,0.0995 0.238415,0.14329 0.08172,0.0438 0.16539,0.0837 0.251045,0.11921 0.08605,0.0355 0.173285,0.0671 0.261704,0.0943 0.08881,0.0268 0.17881,0.0497 0.269992,0.0679 0.09079,0.0186 0.182365,0.0323 0.274729,0.0415 0.09236,0.009 0.185127,0.0142 0.277888,0.0146 0.09276,2.8e-4 0.185521,-0.004 0.277887,-0.0126 0.09236,-0.009 0.183942,-0.0221 0.275123,-0.0398 0.09119,-0.0177 0.18118,-0.0398 0.269994,-0.0667 0.08921,-0.0264 0.176442,-0.0572 0.262492,-0.0924 0.08565,-0.0351 0.169734,-0.0742 0.251836,-0.11763 0.0821,-0.0434 0.161838,-0.0908 0.239203,-0.14171 0.07776,-0.0513 0.152365,-0.10618 0.2246,-0.1646 0.07184,-0.0584 0.140917,-0.12039 0.206836,-0.18552 8.874231,-8.87423 23.31371,-8.87423 32.18675,0 0.0659,0.0659 0.135,0.12829 0.20684,0.18749 0.0722,0.0592 0.14684,0.11487 0.2242,0.16658 0.0774,0.0517 0.1575,0.0995 0.2396,0.14368 0.0821,0.0438 0.16618,0.0837 0.25223,0.11921 0.0861,0.0359 0.17368,0.0671 0.26289,0.0943 0.0892,0.0268 0.1796,0.0497 0.27118,0.0679 0.0912,0.0182 0.18315,0.0316 0.27591,0.041 0.0928,0.009 0.18592,0.0134 0.27907,0.0134 0.0932,0 0.18592,-0.004 0.27868,-0.0134 0.0928,-0.009 0.18512,-0.0229 0.27631,-0.041 0.0916,-0.0181 0.18157,-0.041 0.27078,-0.0679 0.0892,-0.0273 0.17684,-0.0584 0.26288,-0.0943 0.0864,-0.0355 0.17053,-0.0754 0.25263,-0.11921 0.0821,-0.0442 0.16184,-0.092 0.2396,-0.14368 0.0774,-0.0517 0.15197,-0.10737 0.2242,-0.16658 0.0718,-0.0592 0.14092,-0.12157 0.20684,-0.18749 z m -8.04728,8.04728 c 0.0659,-0.0659 0.12829,-0.135 0.1875,-0.20684 0.0588,-0.0722 0.11447,-0.14684 0.16617,-0.2242 0.0517,-0.0778 0.0995,-0.1575 0.14368,-0.23961 0.0438,-0.0821 0.0837,-0.16617 0.11921,-0.25261 0.0355,-0.0861 0.0671,-0.17369 0.094,-0.26289 0.0272,-0.0888 0.0497,-0.17921 0.0679,-0.27078 0.0182,-0.0912 0.032,-0.18316 0.041,-0.27592 0.009,-0.0928 0.0138,-0.18591 0.0138,-0.27907 0,-0.0931 -0.005,-0.18592 -0.0138,-0.27867 -0.009,-0.0928 -0.0229,-0.18474 -0.041,-0.27632 -0.0182,-0.0916 -0.0407,-0.18157 -0.0679,-0.27077 -0.0268,-0.0892 -0.0584,-0.17684 -0.094,-0.26289 -0.0355,-0.0861 -0.0754,-0.17013 -0.11921,-0.25263 -0.0442,-0.0821 -0.092,-0.16184 -0.14368,-0.2392 -0.0517,-0.0778 -0.10736,-0.15237 -0.16617,-0.22421 -0.0592,-0.0722 -0.12158,-0.14132 -0.1875,-0.20723 -6.655477,-6.65508 -17.483996,-6.65508 -24.139471,0 -0.06395,0.0663 -0.124734,0.13578 -0.18197,0.20802 -0.05723,0.0718 -0.110524,0.14683 -0.160654,0.2242 -0.05012,0.0774 -0.09592,0.15711 -0.138154,0.23881 -0.04224,0.0817 -0.08053,0.16539 -0.11447,0.25105 -0.03434,0.0856 -0.06435,0.17249 -0.0896,0.26131 -0.02566,0.0884 -0.04697,0.17763 -0.06394,0.26841 -0.01697,0.0904 -0.0296,0.18158 -0.03789,0.27355 -0.0079,0.0916 -0.01145,0.18355 -0.0107,0.27552 7.77e-4,0.0924 0.0059,0.18393 0.01578,0.27551 0.0094,0.0916 0.02368,0.18276 0.04224,0.27276 0.01856,0.0904 0.04145,0.17921 0.06868,0.26723 0.02724,0.088 0.05882,0.17446 0.09434,0.25973 0.03552,0.0849 0.07539,0.16776 0.118813,0.24907 0.04381,0.0809 0.09157,0.15986 0.14289,0.23605 0.05131,0.0766 0.106179,0.15039 0.164602,0.22144 0.05842,0.071 0.120393,0.13933 0.185522,0.20446 0.06513,0.0651 0.133023,0.12711 0.20447,0.18553 0.07105,0.0584 0.144861,0.11368 0.221046,0.165 0.07658,0.0514 0.15552,0.0987 0.23644,0.14249 0.08092,0.0438 0.164204,0.0833 0.249072,0.11881 0.08486,0.0359 0.17131,0.0671 0.259334,0.0943 0.08802,0.0273 0.177232,0.0505 0.267232,0.0691 0.09039,0.0186 0.18118,0.0328 0.272755,0.0422 0.09157,0.01 0.183547,0.0154 0.275519,0.0162 0.09197,7.1e-4 0.18394,-0.003 0.275912,-0.011 0.09157,-0.008 0.182757,-0.0206 0.273545,-0.0375 0.0904,-0.017 0.179995,-0.0383 0.268413,-0.0639 0.08843,-0.0253 0.175261,-0.0552 0.260916,-0.0892 0.08565,-0.0343 0.169338,-0.0722 0.251045,-0.11446 0.0821,-0.0422 0.161838,-0.0884 0.239203,-0.13855 0.07737,-0.0497 0.151972,-0.10342 0.224207,-0.16065 0.07223,-0.0572 0.141308,-0.11763 0.207626,-0.18158 0.131836,-0.13144 0.266833,-0.25973 0.404987,-0.38446 0.138155,-0.12513 0.27907,-0.24631 0.423146,-0.36433 0.144078,-0.11803 0.290913,-0.2325 0.440514,-0.34302 0.149998,-0.11092 0.301966,-0.21789 0.457093,-0.32131 0.154733,-0.10301 0.31223,-0.20249 0.472093,-0.29802 0.15947,-0.0959 0.321703,-0.18749 0.485909,-0.27512 0.164204,-0.0876 0.330778,-0.17092 0.498933,-0.25065 0.168548,-0.0793 0.338676,-0.15473 0.510775,-0.22578 0.172099,-0.0714 0.345781,-0.13816 0.521038,-0.20092 0.17526,-0.0624 0.352096,-0.12078 0.530119,-0.17486 0.178416,-0.0537 0.35762,-0.10342 0.538405,-0.14842 0.180784,-0.0454 0.362359,-0.0861 0.544722,-0.12236 0.182757,-0.0363 0.366305,-0.0679 0.550249,-0.0951 0.184336,-0.0273 0.369068,-0.0502 0.554193,-0.0683 0.185523,-0.0181 0.371044,-0.032 0.556957,-0.041 0.185918,-0.009 0.372231,-0.0139 0.558145,-0.0139 0.186311,0 0.372227,0.005 0.558143,0.0139 0.18631,0.009 0.371832,0.0229 0.556959,0.041 0.185521,0.0182 0.370253,0.041 0.554194,0.0683 0.184339,0.0273 0.367888,0.0588 0.550249,0.0951 0.182758,0.0363 0.364333,0.077 0.545116,0.12236 0.180388,0.045 0.35999,0.0947 0.538013,0.14842 0.178416,0.0541 0.354858,0.1125 0.530511,0.17486 0.175259,0.0628 0.348939,0.12947 0.521038,0.20092 0.1721,0.0711 0.342229,0.14644 0.510381,0.22578 0.168549,0.0797 0.334729,0.16302 0.498936,0.25065 0.164598,0.0876 0.326436,0.17921 0.486301,0.27512 0.159863,0.0955 0.316965,0.195 0.472091,0.29802 0.154734,0.10342 0.307096,0.21039 0.456699,0.32131 0.149602,0.11052 0.296438,0.22499 0.440518,0.34302 0.14407,0.11802 0.28538,0.2392 0.42314,0.36433 0.13816,0.12473 0.27315,0.25302 0.40499,0.38446 0.0659,0.0659 0.135,0.12829 0.20684,0.1875 0.0722,0.0588 0.14684,0.11447 0.2242,0.16618 0.0778,0.0517 0.1575,0.0995 0.2396,0.14328 0.0821,0.0438 0.16618,0.0837 0.25223,0.11921 0.086,0.0359 0.17368,0.0671 0.26289,0.0939 0.0892,0.0273 0.1792,0.0497 0.27078,0.0679 0.0912,0.0182 0.18316,0.032 0.27591,0.041 0.0928,0.009 0.18553,0.0138 0.27868,0.0138 0.0932,0 0.18631,-0.005 0.27907,-0.0138 0.0928,-0.009 0.18474,-0.0229 0.27592,-0.041 0.0916,-0.0181 0.18157,-0.0407 0.27078,-0.0679 0.0892,-0.0268 0.17684,-0.058 0.26289,-0.0939 0.0861,-0.0355 0.17012,-0.0754 0.25223,-0.11921 0.0821,-0.0438 0.16183,-0.0916 0.2396,-0.14328 0.0774,-0.0517 0.15196,-0.10737 0.2242,-0.16618 0.0718,-0.0592 0.14092,-0.12158 0.20683,-0.1875 z m -8.049649,12.06953 c 0.07697,-0.0766 0.151576,-0.15551 0.224205,-0.23683 0.07263,-0.0813 0.142497,-0.16421 0.210389,-0.24946 0.0675,-0.0853 0.132627,-0.17211 0.195389,-0.26092 0.06276,-0.0888 0.123155,-0.1796 0.180389,-0.27197 0.05764,-0.0924 0.112497,-0.1863 0.164603,-0.28144 0.05211,-0.0955 0.101438,-0.19262 0.148021,-0.29091 0.04658,-0.0983 0.09039,-0.19776 0.131445,-0.29841 0.04105,-0.10106 0.07894,-0.20289 0.114075,-0.30591 0.03474,-0.10303 0.06711,-0.20684 0.09592,-0.31184 0.02922,-0.1046 0.05526,-0.21039 0.07855,-0.31657 0.02288,-0.10618 0.04303,-0.21315 0.06,-0.32052 0.01698,-0.10775 0.03079,-0.21552 0.04145,-0.32367 0.0107,-0.10815 0.01857,-0.21671 0.02288,-0.32525 0.0047,-0.10895 0.0059,-0.2175 0.0044,-0.32645 -0.0014,-0.10854 -0.0067,-0.21749 -0.01461,-0.32564 -0.0079,-0.10856 -0.01896,-0.21671 -0.03277,-0.32487 -0.01421,-0.10776 -0.03158,-0.21512 -0.05171,-0.32209 -0.02014,-0.10697 -0.04342,-0.21316 -0.06987,-0.31854 -0.02644,-0.10539 -0.05566,-0.21039 -0.08802,-0.31421 -0.03237,-0.1038 -0.06789,-0.20683 -0.105794,-0.30867 -0.03828,-0.10185 -0.07973,-0.20249 -0.123548,-0.30196 -0.04421,-0.0995 -0.09079,-0.19737 -0.140522,-0.29447 -0.04974,-0.0967 -0.101845,-0.19184 -0.157101,-0.28578 -0.05487,-0.094 -0.112893,-0.18592 -0.173284,-0.27631 -0.06039,-0.0908 -0.123157,-0.17921 -0.18868,-0.26605 -0.06552,-0.0868 -0.133419,-0.1721 -0.203679,-0.25499 -0.07026,-0.0829 -0.142891,-0.16381 -0.217889,-0.24276 -0.075,-0.0789 -0.151969,-0.15552 -0.23131,-0.22972 -0.07934,-0.0746 -0.160653,-0.14685 -0.244334,-0.21631 -0.08329,-0.0699 -0.168942,-0.13737 -0.256177,-0.20211 -0.08724,-0.0647 -0.176442,-0.1271 -0.26723,-0.1867 -0.09119,-0.06 -0.183549,-0.11684 -0.277886,-0.17131 -0.09395,-0.0545 -0.189867,-0.10618 -0.286966,-0.15513 -0.0971,-0.0494 -0.195389,-0.0951 -0.295257,-0.13855 -0.09987,-0.0434 -0.200916,-0.0837 -0.302754,-0.12158 -0.10223,-0.0375 -0.205257,-0.0718 -0.309464,-0.10341 -0.10421,-0.032 -0.208813,-0.0604 -0.314598,-0.0861 -0.105793,-0.0256 -0.211969,-0.0482 -0.319333,-0.0679 -0.10697,-0.0194 -0.214338,-0.0359 -0.322491,-0.0494 -0.107759,-0.0134 -0.215916,-0.0237 -0.324466,-0.0308 -0.108549,-0.007 -0.217495,-0.011 -0.326044,-0.0122 -0.108945,-7e-4 -0.217494,0.001 -0.32644,0.006 -0.108545,0.005 -0.216703,0.0134 -0.324857,0.0249 -0.108549,0.0114 -0.216308,0.0261 -0.323675,0.0438 -0.10697,0.0177 -0.213942,0.0383 -0.320122,0.0624 -0.106179,0.0237 -0.211574,0.0505 -0.316177,0.0801 -0.104605,0.03 -0.208414,0.0627 -0.311042,0.0987 -0.102626,0.0355 -0.204471,0.0742 -0.304731,0.11606 -0.100657,0.0415 -0.199732,0.0856 -0.298019,0.13302 -0.09788,0.0474 -0.194203,0.0975 -0.289333,0.14999 -0.09513,0.0529 -0.188679,0.10855 -0.280648,0.16658 -0.09198,0.058 -0.182366,0.11881 -0.270785,0.18236 -0.08841,0.0631 -0.174863,0.12908 -0.259729,0.19737 -0.08448,0.0683 -0.167365,0.13894 -0.247889,0.21196 -0.08053,0.073 -0.159075,0.14842 -0.235256,0.22579 -0.07658,0.0774 -0.15039,0.1571 -0.222229,0.2388 -0.07185,0.0817 -0.141314,0.16579 -0.208022,0.25144 -0.06711,0.0857 -0.131445,0.17329 -0.193416,0.2625 -0.06197,0.0896 -0.121181,0.18079 -0.17802,0.27354 -0.05685,0.0928 -0.110527,0.1871 -0.16184,0.28302 -0.05131,0.0959 -0.09986,0.19341 -0.145654,0.2921 -0.04579,0.0987 -0.08881,0.19854 -0.128678,0.2996 -0.04027,0.10145 -0.07737,0.20368 -0.111315,0.3067 -0.03434,0.10342 -0.06552,0.20763 -0.09355,0.31262 -0.02801,0.105 -0.05328,0.21079 -0.07539,0.31736 -0.02212,0.10658 -0.04105,0.21355 -0.05724,0.32131 -0.01618,0.10776 -0.02881,0.21552 -0.03869,0.32407 -0.0098,0.10815 -0.01659,0.2167 -0.02014,0.32525 -0.0035,0.10895 -0.004,0.21749 -0.0014,0.32644 0.0029,0.10855 0.0087,0.21749 0.01736,0.32565 0.0091,0.10855 0.02091,0.2167 0.03591,0.32447 0.01501,0.10775 0.03316,0.21472 0.05447,0.32169 0.02132,0.10658 0.04539,0.21237 0.07263,0.31776 0.02725,0.1054 0.05764,0.20999 0.09079,0.31341 0.03316,0.10342 0.06947,0.20605 0.10855,0.3075 0.03908,0.10183 0.08131,0.20209 0.125915,0.30117 0.045,0.0991 0.09276,0.19657 0.143287,0.29288 0.05052,0.0967 0.103814,0.19145 0.15947,0.28461 0.05605,0.0935 0.11447,0.18512 0.175654,0.27512 0.06118,0.09 0.124733,0.17802 0.191047,0.26446 0.06632,0.0861 0.134997,0.17053 0.206049,0.25303 0.07105,0.0821 0.144469,0.16262 0.219859,0.24078 0.07579,0.0781 0.15355,0.15394 0.233679,0.22776 0.07974,0.0738 0.161838,0.14526 0.245916,0.21433 0.08407,0.0687 0.170124,0.13539 0.258151,0.19934 0.08762,0.0643 0.177624,0.12591 0.268807,0.18473 0.09157,0.0588 0.18473,0.11526 0.27907,0.16894 0.09474,0.0537 0.191048,0.10461 0.288546,0.15276 0.0975,0.0478 0.196178,0.0932 0.296441,0.13578 0.100261,0.0422 0.201702,0.0817 0.303938,0.11842 0.102626,0.0367 0.205651,0.0707 0.310253,0.10106 0.10421,0.0308 0.2096,0.0584 0.315386,0.0833 0.105793,0.0249 0.212363,0.0462 0.319731,0.0651 0.10697,0.0186 0.214729,0.034 0.322883,0.0462 0.108155,0.0126 0.21631,0.0221 0.324862,0.0281 0.108944,0.006 0.217494,0.009 0.326043,0.009 0.373806,0 0.743663,-0.0363 1.109969,-0.10934 0.366307,-0.0726 0.722349,-0.18039 1.067337,-0.32328 0.345388,-0.1425 0.67301,-0.31776 0.984053,-0.52499 0.310651,-0.20723 0.598011,-0.44288 0.862479,-0.70695 z m 0,0"
       fill-opacity="1"
       fill-rule="nonzero"
       id="path5628"
       clip-path="url(#clipPath5693)"
       mask="url(#mask5697)"
       style="stroke-width:0.10105;fill-opacity:1.0;fill:url(#linearGradient6125);fill-rule:nonzero"
       inkscape:export-filename="Wifi Gradient (Web).svg"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" /><rect
       style="fill:none;stroke-width:0.264583"
       id="rect1645"
       width="29.386299"
       height="18.239773"
       x="79.292343"
       y="199.8775" /><path
       id="path2366-6"
       style="fill:#ff0000;stroke-width:1.66227"
       inkscape:transform-center-x="2.2721621"
       inkscape:transform-center-y="5.5686758"
       d="m 185.1871,84.721701 14.32984,-1.45685 -26.01358,20.993359 z m 3.23539,3.31376 -13.30494,1.07916 24.4679,-18.70163 z" /><path
       id="path2366-6-1"
       style="fill:url(#linearGradient992);fill-opacity:1;stroke-width:3.30624"
       inkscape:transform-center-x="4.5193082"
       inkscape:transform-center-y="11.076044"
       d="m 37.299334,162.74408 28.501913,-2.89766 -51.740758,41.75559 z m 6.43516,6.59104 -26.463397,2.14644 48.666416,-37.19736 z" /><path
       id="path2366-6-8"
       style="fill:#ffff00;stroke-width:1.66227"
       inkscape:transform-center-x="2.2721621"
       inkscape:transform-center-y="5.5686758"
       d="m 180.77514,86.374035 c 2.09374,-0.17005 4.18763,-0.33827 6.28125,-0.50976 -2.48011,4.14904 -4.96239,8.29678 -7.44336,12.44531 6.20638,-5.00781 12.41276,-10.01562 18.61914,-15.02344 -2.41668,0.24535 -4.83322,0.49195 -7.25,0.73633 2.2288,-3.52083 4.45978,-7.04027 6.68945,-10.56055 -5.63216,4.30404 -11.26432,8.60808 -16.89648,12.91211 z" /><g
       id="g2709"
       transform="translate(132.68168,-153.83475)"
       inkscape:export-filename="Lighting Bolt.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"><path
         id="path2366-68-8"
         style="fill:#666666;fill-opacity:1;stroke-width:1.52885"
         inkscape:transform-center-x="12.876578"
         inkscape:transform-center-y="4.5688741"
         d="m 63.090805,168.89534 v 5.2e-4 c -0.0877,0.003 -0.29041,0.10202 -0.57465,0.26975 -1.20205,2.51513 -4.974697,8.55226 -7.740092,12.57442 0.320296,-0.0385 0.635471,-0.0776 0.957564,-0.11679 3.475248,-5.15833 7.978248,-12.56074 7.382498,-12.7248 -0.007,-0.002 -0.01542,-0.003 -0.02532,-0.003 z m -0.10387,12.84211 c -0.15583,-0.009 -0.62266,0.0325 -1.25884,0.0997 -4.379843,3.84609 -21.123222,17.77331 -24.4228,19.77089 -0.296674,0.68234 -0.41059,1.0991 -0.270785,1.13533 1.000518,0.25934 26.154595,-20.79626 26.013395,-20.99303 -0.0049,-0.007 -0.0256,-0.011 -0.06097,-0.0129 z m -17.419095,4.32377 c -2.183172,0.21772 -4.435798,0.45446 -5.824968,0.57619 -0.697888,0.57927 -1.111236,0.93884 -1.094507,0.96273 0.0628,0.0897 3.11406,-0.23246 6.277137,-0.5519 0.219027,-0.3397 0.435034,-0.67217 0.642338,-0.98702 z" /><path
         id="path2366-6-3"
         style="fill:url(#linearGradient2595);fill-opacity:1;stroke-width:1.66227"
         inkscape:transform-center-x="2.2721621"
         inkscape:transform-center-y="5.5686758"
         d="m 62.774738,168.02852 c -1.265425,0.0406 -24.568434,18.52296 -24.441919,18.70377 0.06895,0.0984 3.718738,-0.29646 7.187675,-0.64234 -3.701971,5.62245 -9.515308,15.60124 -8.802047,15.78611 1.000518,0.25933 26.154589,-20.79653 26.013399,-20.99355 -0.07817,-0.10893 -4.191262,0.42581 -8.002095,0.88367 3.531808,-5.13693 8.706767,-13.55987 8.070825,-13.73508 -0.0072,-0.002 -0.01587,-0.003 -0.02584,-0.003 z m -2.409156,2.81636 c -2.370422,4.22825 -5.106132,8.23451 -7.81451,12.2499 2.021064,-0.24376 4.042135,-0.48866 6.063713,-0.72812 0.833946,-0.16873 1.210816,-0.13691 0.340547,0.44183 -6.558513,5.52493 -13.115946,11.06108 -19.939351,16.25896 2.593484,-4.90556 5.548721,-9.60044 8.607227,-14.24616 -1.489049,0.14525 -2.977965,0.29363 -4.466911,0.43977 -0.414229,-0.0143 -1.532917,0.26046 -1.498617,0.062 6.027262,-4.82992 12.070031,-9.63376 18.30741,-14.19293 0.133463,-0.0951 0.267028,-0.19026 0.400492,-0.28526 z" /></g><path
       sodipodi:type="star"
       style="fill:#ff0000;fill-opacity:1;stroke-width:0.264583"
       id="path2366-68-8-5"
       inkscape:flatsided="true"
       sodipodi:sides="3"
       sodipodi:cx="26.473003"
       sodipodi:cy="244.33696"
       sodipodi:r1="3.344054"
       sodipodi:r2="1.6720272"
       sodipodi:arg1="0.42976228"
       sodipodi:arg2="1.4769598"
       inkscape:rounded="0.015"
       inkscape:randomized="1"
       d="m 28.075256,242.9033 c -0.09124,-0.036 -1.459103,0.8364 -1.47653,0.79386 -0.01743,-0.0426 2.322217,-5.84888 2.430232,-5.81818 0.108015,0.0307 -0.86246,5.06028 -0.953702,5.02432 z"
       inkscape:transform-center-x="12.876578"
       inkscape:transform-center-y="4.5688741"
       transform="matrix(8.7047713,1.2861917,-0.56947082,3.751578,135.2007,-865.46694)" /><path
       sodipodi:type="star"
       style="fill:#ff0000;fill-opacity:1;stroke-width:0.264583"
       id="path2366-6-3-8-0"
       inkscape:flatsided="true"
       sodipodi:sides="3"
       sodipodi:cx="26.473003"
       sodipodi:cy="244.33696"
       sodipodi:r1="3.344054"
       sodipodi:r2="1.6720272"
       sodipodi:arg1="0.42976228"
       sodipodi:arg2="1.4769598"
       inkscape:rounded="0.015"
       inkscape:randomized="1"
       d="m 28.075256,242.9033 c -0.09124,-0.036 -1.459103,0.8364 -1.47653,0.79386 -0.01743,-0.0426 2.322217,-5.84888 2.430232,-5.81818 0.108015,0.0307 -0.86246,5.06028 -0.953702,5.02432 z"
       inkscape:transform-center-x="2.2721621"
       inkscape:transform-center-y="5.5686758"
       transform="matrix(-9.4157349,-1.2293942,0.53816855,-4.1217475,371.65389,1114.3015)" /><path
       sodipodi:type="star"
       style="fill:#ffff00;fill-opacity:1;stroke-width:0.264583"
       id="path2505"
       inkscape:flatsided="true"
       sodipodi:sides="3"
       sodipodi:cx="34.262905"
       sodipodi:cy="246.49026"
       sodipodi:r1="0.26112676"
       sodipodi:r2="0.13056338"
       sodipodi:arg1="-1.815775"
       sodipodi:arg2="-0.76857744"
       inkscape:rounded="0.015"
       inkscape:randomized="1"
       d="m 34.043646,246.43176 c 0.0079,0.006 0.419912,0.22111 0.411808,0.22504 -0.0081,0.004 -0.240461,0.19739 -0.238979,0.19147 0.0015,-0.006 -0.180763,-0.4226 -0.172829,-0.41651 z"
       inkscape:transform-center-x="-0.21502671"
       inkscape:transform-center-y="-0.081936651"
       transform="translate(144.96558,-132.89085)" /><text
       xml:space="preserve"
       transform="scale(0.26458333)"
       id="text3485"
       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:'Bauhaus 93';-inkscape-font-specification:'Bauhaus 93 Bold';white-space:pre;shape-inside:url(#rect3487);display:inline;fill:#000080;fill-opacity:1" /><text
       xml:space="preserve"
       transform="scale(0.26458333)"
       id="text3491"
       style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-family:'Bauhaus 93';-inkscape-font-specification:'Bauhaus 93 Bold';white-space:pre;shape-inside:url(#rect3493);display:inline;fill:#000080;fill-opacity:1" /><g
       id="g2952"
       transform="matrix(0.26458333,0,0,0.26458333,-2500.1223,620.58111)"><script
         id="mesh_polyfill-9"
         type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
         id="mesh_polyfill-4"
         type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
         id="mesh_polyfill-8"
         type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
         id="mesh_polyfill"
         type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 8867.3612,-478.0207 c -0.6238,-2.4641 -2.8305,-7.3746 -4.9036,-10.9122 -12.0538,-20.5682 -40.2236,-23.7137 -57.2145,-6.3887 -6.5963,6.726 -8.9106,11.7628 -9.7726,21.2693 -1.0799,11.9095 1.6162,19.8563 9.7596,28.7665 l 6.8521,7.4973 v 140.1624 140.1624 h 19.0919 19.0919 v -140.5464 -140.5464 l 4.6324,-3.5333 c 9.3505,-7.132 15.3644,-24.4703 12.4628,-35.9309 z m -16.7439,17.8871 c -3.654,7.2728 -10.5829,11.343 -19.2988,11.3366 -9.6719,-0.01 -15.7634,-3.8351 -19.4828,-12.2435 -9.4625,-21.3914 15.0426,-40.1856 33.4833,-25.6801 7.5532,5.9413 9.8586,17.5102 5.2983,26.587 z"
         id="path268-51-92" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 8715.0056,-359.5772 c -0.6238,-2.4641 -2.8305,-7.3746 -4.9036,-10.9122 -12.0538,-20.5682 -40.2236,-23.7137 -57.2145,-6.3887 -6.5963,6.726 -8.9106,11.7628 -9.7726,21.2693 -1.0799,11.9095 1.6162,19.8563 9.7596,28.7665 l 6.8521,7.4973 v 140.1624 140.1624 h 19.0919 19.0919 V -179.5666 -320.113 l 4.6324,-3.5333 c 9.3505,-7.132 15.3644,-24.4703 12.4628,-35.9309 z m -16.7439,17.8871 c -3.654,7.2728 -10.5829,11.343 -19.2988,11.3366 -9.6719,-0.01 -15.7634,-3.8351 -19.4828,-12.2435 -9.4625,-21.3914 15.0426,-40.1856 33.4833,-25.6801 7.5532,5.9413 9.8586,17.5102 5.2983,26.587 z"
         id="path268-51-9-4" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 8944.7112,-569.1163 c -0.6238,-2.4641 -2.8305,-7.3746 -4.9036,-10.9122 -12.0538,-20.5682 -40.2236,-23.7137 -57.2145,-6.3887 -6.5963,6.726 -8.9106,11.7628 -9.7726,21.2693 -1.0799,11.9095 1.6162,19.8563 9.7596,28.7665 l 6.8521,7.4973 v 140.1624 140.1624 h 19.0919 19.0919 v -140.5464 -140.5464 l 4.6324,-3.5333 c 9.3505,-7.132 15.3644,-24.4703 12.4628,-35.9309 z m -16.7439,17.8871 c -3.654,7.2728 -10.5829,11.343 -19.2988,11.3366 -9.6719,-0.01 -15.7634,-3.8351 -19.4828,-12.2435 -9.4625,-21.3914 15.0426,-40.1856 33.4833,-25.6801 7.5532,5.9413 9.8586,17.5102 5.2983,26.587 z"
         id="path268-51-9-8-7" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 9001.5058,-484.5609 c 2.1727,-1.3193 7.1893,-3.2726 11.148,-4.3409 23.0168,-6.2108 45.3054,11.3006 45.2694,35.5667 -0.014,9.4208 -1.896,14.6345 -7.9479,22.0163 -7.9459,9.6922 -15.3456,13.2663 -28.1065,13.5754 l -10.7881,0.2613 -41.7133,42.4078 -41.7133,42.4077 -0.4265,133.2769 -0.4264,133.2769 -18.6023,-0.2647 c -10.2312,-0.1457 -18.7635,-0.5402 -18.9605,-0.8768 -0.1971,-0.3365 -0.1936,-63.7121 0.01,-140.8345 l 0.3659,-140.2226 48.1266,-48.9935 48.1266,-48.9934 -0.7594,-4.7968 c -1.6756,-10.5835 6.6313,-27.5344 16.4,-33.4659 z m -1.848,26.2872 c -2.3903,10.4299 5.5598,22.5701 16.4467,25.1147 20.8688,4.8779 35.5276,-21.0661 20.3423,-36.0028 -12.8715,-12.6607 -32.7397,-6.7804 -36.789,10.8881 z"
         id="path270-3-6-0-1-2-2" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 8986.9012,213.22501 c -0.6238,2.4641 -2.8305,7.3746 -4.9036,10.9122 -12.0538,20.5682 -40.2236,23.7137 -57.2145,6.3887 -6.5963,-6.726 -8.9106,-11.7628 -9.7726,-21.2693 -1.0799,-11.9095 1.6162,-19.8563 9.7596,-28.7665 l 6.8521,-7.4973 V 32.830407 -107.33199 h 19.0919 19.0919 V 33.214407 173.76081 l 4.6324,3.5333 c 9.3505,7.132 15.3644,24.4703 12.4628,35.9309 z m -16.7439,-17.8871 c -3.654,-7.2728 -10.5829,-11.343 -19.2988,-11.3366 -9.6719,0.01 -15.7634,3.8351 -19.4828,12.2435 -9.4625,21.3914 15.0426,40.1856 33.4833,25.6801 7.5532,-5.9413 9.8586,-17.5102 5.2983,-26.587 z"
         id="path268-51-92-5" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 8570.4639,-516.9676 c -1.2484,-2.21416 -3.0386,-7.29133 -3.9784,-11.28247 -5.4637,-23.20544 12.7589,-44.91646 37.0112,-44.09635 9.4153,0.31838 14.5655,2.36801 21.7479,8.65527 8.998,7.8765 12.5286,15.48933 12.7805,27.5576 l 0.2119,10.1546 96.696,101.46616 96.696,101.4661 -13.821,13.1713 -13.821,13.1712 -96.9609,-101.7441 -96.9609,-101.7442 -5.7911,0.638 c -11.6892,1.2878 -28.0042,-7.1148 -33.8102,-17.41311 z m 24.4612,1.39741 c 7.6626,2.7441 15.4866,0.9104 21.7918,-5.10717 6.9947,-6.67974 8.7656,-13.65124 5.6573,-22.3042 -7.9075,-22.01367 -38.6131,-18.71343 -41.9555,4.50934 -1.3691,9.51186 4.9432,19.47727 14.5064,22.90203 z"
         id="path268-51-9-4-1" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 8900.2025,355.23229 c -0.6238,2.4641 -2.8305,7.3746 -4.9036,10.9122 -12.0538,20.5682 -40.2236,23.7137 -57.2145,6.3887 -6.5963,-6.726 -8.9106,-11.7628 -9.7726,-21.2693 -1.0799,-11.9095 1.6162,-19.8563 9.7596,-28.7665 l 6.8521,-7.4973 V 174.83769 34.67529 h 19.0919 19.0919 v 140.5464 140.5464 l 4.6324,3.5333 c 9.3505,7.132 15.3644,24.4703 12.4628,35.9309 z m -16.7439,-17.8871 c -3.654,-7.2728 -10.5829,-11.343 -19.2988,-11.3366 -9.6719,0.01 -15.7634,3.8351 -19.4828,12.2435 -9.4625,21.3914 15.0426,40.1856 33.4833,25.6801 7.5532,-5.9413 9.8586,-17.5102 5.2983,-26.587 z"
         id="path268-51-9-8-7-9" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 8660.6529,263.18818 c -2.1727,1.3193 -7.1893,3.2726 -11.148,4.3409 -23.0168,6.2108 -45.3054,-11.3006 -45.2694,-35.5667 0.014,-9.4208 1.896,-14.6345 7.9479,-22.0163 7.9459,-9.6922 15.3456,-13.2663 28.1065,-13.5754 l 10.7881,-0.2613 41.7133,-42.4078 41.7133,-42.4077 0.4265,-133.2769 0.4264,-133.2769 18.6023,0.2647 c 10.2312,0.1457 18.7635,0.5402 18.9605,0.8768 0.1971,0.3365 0.1936,63.7121 -0.01,140.8345 l -0.3659,140.2226 -48.1266,48.9935 -48.1266,48.9934 0.7594,4.7968 c 1.6756,10.5835 -6.6313,27.5344 -16.4,33.4659 z m 1.848,-26.2872 c 2.3903,-10.4299 -5.5598,-22.5701 -16.4467,-25.1147 -20.8688,-4.8779 -35.5276,21.0661 -20.3423,36.0028 12.8715,12.6607 32.7397,6.7804 36.789,-10.8881 z"
         id="path270-3-6-0-1-5-7" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 9028.1455,-212.35612 c 2.4641,-0.6238 7.3746,-2.8305 10.9122,-4.9036 20.5682,-12.0538 23.7137,-40.2236 6.3887,-57.2145 -6.726,-6.5963 -11.7628,-8.9106 -21.2693,-9.7726 -11.9095,-1.0799 -19.8563,1.6162 -28.7665,9.7596 l -7.4973,6.8521 h -140.1624 -140.1624 v 19.0919 19.0919 h 140.5464 140.5464 l 3.5333,4.6324 c 7.132,9.3505 24.4703,15.3644 35.9309,12.4628 z m -17.8871,-16.7439 c -7.2728,-3.654 -11.343,-10.5829 -11.3366,-19.2988 0.01,-9.6719 3.8351,-15.7634 12.2435,-19.4828 21.3914,-9.4625 40.1856,15.0426 25.6801,33.4833 -5.9413,7.5532 -17.5102,9.8586 -26.587,5.2983 z"
         id="path268-51-9-4-1-6" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 9237.6846,17.34948 c 2.4641,-0.6238 7.3746,-2.8305 10.9122,-4.9036 20.5682,-12.0538 23.7137,-40.2236 6.3887,-57.2145 -6.726,-6.5963 -11.7628,-8.9106 -21.2693,-9.7726 -11.9095,-1.0799 -19.8563,1.6162 -28.7665,9.7596 l -7.4973,6.8521 H 9057.29 8917.1276 v 19.0919 19.0919 h 140.5464 140.5464 l 3.5333,4.6324 c 7.132,9.3505 24.4703,15.3644 35.9309,12.4628 z m -17.8871,-16.7439 c -7.2728,-3.654 -11.343,-10.5829 -11.3366,-19.2988 0.01,-9.6719 3.8351,-15.7634 12.2435,-19.4828 21.3914,-9.4625 40.1856,15.0426 25.6801,33.4833 -5.9413,7.5532 -17.5102,9.8586 -26.587,5.2983 z"
         id="path268-51-9-8-7-9-5" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 9241.807,-267.45492 c 1.3193,-2.1727 3.2726,-7.1893 4.3409,-11.148 6.2108,-23.0168 -11.3006,-45.3054 -35.5667,-45.2694 -9.4208,0.014 -14.6345,1.896 -22.0163,7.9479 -9.6922,7.9459 -13.2663,15.3456 -13.5754,28.1065 l -0.2613,10.7881 -42.4078,41.7133 -42.4077,41.7133 -133.2769,0.4265 -133.2769,0.4264 0.2647,18.6023 c 0.1457,10.2312 0.5402,18.7635 0.8768,18.9605 0.3365,0.1971 63.7121,0.1936 140.8345,-0.01 l 140.2226,-0.3659 48.9935,-48.1266 48.9934,-48.1266 4.7968,0.7594 c 10.5835,1.6756 27.5344,-6.6313 33.4659,-16.4 z m -26.2872,1.848 c -10.4299,2.3903 -22.5701,-5.5598 -25.1147,-16.4467 -4.8779,-20.8688 21.0661,-35.5276 36.0028,-20.3423 12.6607,12.8715 6.7804,32.7397 -10.8881,36.789 z"
         id="path270-3-6-0-1-5-7-0" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 9153.1292,74.14408 c 1.3193,2.1727 3.2726,7.1893 4.3409,11.148 6.2108,23.0168 -11.3006,45.3054 -35.5667,45.2694 -9.4208,-0.014 -14.6345,-1.896 -22.0163,-7.9479 -9.6922,-7.9459 -13.2663,-15.3456 -13.5754,-28.1065 l -0.2613,-10.7881 -42.4078,-41.7133 -42.4077,-41.7133 -133.2769,-0.4265 -133.2769,-0.4264 0.2647,-18.6023 c 0.1457,-10.2312 0.5402,-18.7635 0.8768,-18.9605 0.3365,-0.1971 63.7121,-0.1936 140.8345,0.01 l 140.2226,0.3659 48.9935,48.1266 48.9934,48.1266 4.7968,-0.7594 c 10.5835,-1.6756 27.5344,6.6313 33.4659,16.4 z m -26.2872,-1.848 c -10.4299,-2.3903 -22.5701,5.5598 -25.1147,16.4467 -4.8779,20.8688 21.0661,35.5276 36.0028,20.3423 12.6607,-12.8715 6.7804,-32.7397 -10.8881,-36.789 z"
         id="path270-3-6-0-1-2-2-1-9" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 8453.4282,-213.6687 c -2.4641,0.6238 -7.3746,2.8305 -10.9122,4.9036 -20.5682,12.0538 -23.7137,40.2236 -6.3887,57.2145 6.726,6.5963 11.7628,8.9106 21.2693,9.7726 11.9095,1.0799 19.8563,-1.6162 28.7665,-9.7596 l 7.4973,-6.8521 h 140.1624 140.1624 v -19.0919 -19.0919 h -140.5464 -140.5464 l -3.5333,-4.6324 c -7.132,-9.3505 -24.4703,-15.3644 -35.9309,-12.4628 z m 17.8871,16.7439 c 7.2728,3.654 11.343,10.5829 11.3366,19.2988 -0.01,9.6719 -3.8351,15.7634 -12.2435,19.4828 -21.3914,9.4625 -40.1856,-15.0426 -25.6801,-33.4833 5.9413,-7.5532 17.5102,-9.8586 26.587,-5.2983 z"
         id="path268-51-92-9" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 8571.8717,-61.3131 c -2.4641,0.6238 -7.3746,2.8305 -10.9122,4.9036 -20.5682,12.0538 -23.7137,40.2236 -6.3887,57.2145 6.726,6.5963 11.7628,8.9106 21.2693,9.7726 11.9095,1.0799 19.8563,-1.6162 28.7665,-9.7596 l 7.4973,-6.8521 h 140.1624 140.1624 V -25.126 -44.2179 h -140.5464 -140.5464 l -3.5333,-4.6324 c -7.132,-9.3505 -24.4703,-15.3644 -35.9309,-12.4628 z m 17.8871,16.7439 c 7.2728,3.654 11.343,10.5829 11.3366,19.2988 -0.01,9.6719 -3.8351,15.7634 -12.2435,19.4828 -21.3914,9.4625 -40.1856,-15.0426 -25.6801,-33.4833 5.9413,-7.5532 17.5102,-9.8586 26.587,-5.2983 z"
         id="path268-51-9-4-10" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 8362.3326,-291.0187 c -2.4641,0.6238 -7.3746,2.8305 -10.9122,4.9036 -20.5682,12.0538 -23.7137,40.2236 -6.3887,57.2145 6.726,6.5963 11.7628,8.9106 21.2693,9.7726 11.9095,1.0799 19.8563,-1.6162 28.7665,-9.7596 l 7.4973,-6.8521 h 140.1624 140.1624 v -19.0919 -19.0919 h -140.5464 -140.5464 l -3.5333,-4.6324 c -7.132,-9.3505 -24.4703,-15.3644 -35.9309,-12.4628 z m 17.8871,16.7439 c 7.2728,3.654 11.343,10.5829 11.3366,19.2988 -0.01,9.6719 -3.8351,15.7634 -12.2435,19.4828 -21.3914,9.4625 -40.1856,-15.0426 -25.6801,-33.4833 5.9413,-7.5532 17.5102,-9.8586 26.587,-5.2983 z"
         id="path268-51-9-8-7-7" /><path
         style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
         d="m 8358.2102,-6.2143 c -1.3193,2.1727 -3.2726,7.1893 -4.3409,11.148 -6.2108,23.0168 11.3006,45.3054 35.5667,45.2694 9.4208,-0.014 14.6345,-1.896 22.0163,-7.9479 9.6922,-7.9459 13.2663,-15.3456 13.5754,-28.1065 l 0.2613,-10.7881 42.4078,-41.7133 42.4077,-41.7133 133.2769,-0.4265 133.2769,-0.4264 -0.2647,-18.6023 c -0.1457,-10.2312 -0.5402,-18.7635 -0.8768,-18.9605 -0.3365,-0.1971 -63.7121,-0.1936 -140.8345,0.01 l -140.2226,0.3659 -48.9935,48.1266 -48.9934,48.1266 -4.7968,-0.7594 c -10.5835,-1.6756 -27.5344,6.6313 -33.4659,16.4 z m 26.2872,-1.848 c 10.4299,-2.3903 22.5701,5.5598 25.1147,16.4467 4.8779,20.8688 -21.0661,35.5276 -36.0028,20.3423 -12.6607,-12.8715 -6.7804,-32.7397 10.8881,-36.789 z"
         id="path270-3-6-0-1-5-2" /><rect
         style="mix-blend-mode:normal;fill:#30ff10;fill-opacity:1;stroke-width:1.66773;filter:url(#filter275-9)"
         id="rect41-1-4"
         width="685.83972"
         height="676.04199"
         x="7207.8877"
         y="-3316.1125"
         ry="173.94908"
         rx="159.08235"
         transform="matrix(1.0558567,0,0,1.0359928,837.93016,2971.9538)" /><g
         id="g21-5-2"
         transform="matrix(0.65681492,0,0,0.60228605,8560.3298,-381.87667)"
         style="mix-blend-mode:normal;fill:#e6e6e6;stroke-width:1.00409"><path
           fill="#0753eb"
           d="m 468.10156,601.63672 c -16.90234,0 -30.59375,-13.69531 -30.59375,-30.59766 0,-16.89453 13.69141,-30.58984 30.59375,-30.58984 16.89453,0 30.59766,13.69531 30.59766,30.58984 0,16.90235 -13.70313,30.59766 -30.59766,30.59766 z m -128.71094,52.05859 c -28.73046,0 -52.01562,-23.29297 -52.01562,-52.01562 0,-28.73047 23.28516,-52.01563 52.01562,-52.01563 28.72657,0 52.01563,23.28516 52.01563,52.01563 0,28.72265 -23.28906,52.01562 -52.01563,52.01562 z m 260.16797,-16.55078 c -13.52734,-29.28516 -29.96093,-63.22656 -44.30078,-92.73437 l -8.96875,-18.45313 c -3.33594,-6.87891 -6.52734,-13.47266 -9.8125,-20.23828 H 274.03125 c -0.14844,0 -0.28906,-0.0195 -0.44531,-0.0234 -3.72657,7.67969 -7.3711,15.23047 -11.13672,22.97656 -14.875,30.58204 -29.79688,61.27735 -43.06641,89.4336 -18.85937,40.00781 -31.70312,69.48047 -38.16015,87.60937 -3.60938,10.08203 2.03515,29.21094 22.17968,29.21094 h 406.25391 c 19.02344,0 22.79297,-19.12891 19.17578,-29.23437 -5.4375,-15.26563 -15.28906,-38.32032 -29.27344,-68.54688"
           fill-opacity="1"
           fill-rule="nonzero"
           id="path2-66-5-6"
           style="fill:#e6e6e6" /><path
           fill="#0753eb"
           d="m 385.41016,423.99219 c 0,25.33984 20.54296,45.88281 45.88671,45.88281 25.34766,0 45.88282,-20.54297 45.88282,-45.88281 0,-25.35157 -20.53516,-45.89453 -45.88282,-45.89453 -25.34375,0 -45.88671,20.54296 -45.88671,45.89453"
           fill-opacity="1"
           fill-rule="nonzero"
           id="path3-0-8-8"
           style="fill:#e6e6e6" /><path
           fill="#0753eb"
           d="m 400.66016,302.70703 c 14.23437,0 25.76562,-11.53125 25.76562,-25.76953 0,-14.23438 -11.53125,-25.76563 -25.76562,-25.76563 -14.23829,0 -25.76954,11.53125 -25.76954,25.76563 0,14.23828 11.53125,25.76953 25.76954,25.76953"
           fill-opacity="1"
           fill-rule="nonzero"
           id="path4-3-2-0"
           style="fill:#e6e6e6" /><g
           clip-path="url(#12a6f414f8-3-71)"
           id="g5-2-9-6"
           style="fill:#e6e6e6"><path
             fill="#0753eb"
             d="m 655.97266,742.74609 c -2.8711,5.99219 -7.1836,10.14453 -13.19922,13.37891 -5.9375,3.17578 -13.53125,4.88672 -20.375,4.85547 H 187.66406 c -9.19531,0.0742 -19.41406,-3.08985 -25.83203,-8.42969 -3.27734,-2.67578 -5.81641,-5.76953 -7.74609,-9.80469 -1.89453,-4.0625 -3.25,-9.21484 -3.26563,-16.47656 -0.008,-7.48437 1.54297,-17.21094 5.875,-29.32812 7.51563,-21.09375 21.9375,-53.5 39.125,-89.94922 25.82031,-54.80078 57.92969,-119.23828 83.73047,-173.78907 12.90234,-27.30859 24.22266,-52.11328 32.52344,-72.41406 4.14844,-10.17187 7.54687,-19.1875 10.0625,-27.18359 1.26562,-4.00391 2.30469,-7.75 3.10547,-11.46485 0.78125,-3.73828 1.39062,-7.33984 1.42187,-11.83203 0,-28.08203 0,-169.27343 0,-239.394528 h 156.72656 c 0,70.121098 0,211.312498 0,239.394528 0.0625,5.94922 1.0586,10.49219 2.30079,15.56641 2.40234,9.31641 6.23828,19.87891 11.27734,32.39844 17.53906,43.43359 50.08594,109.60156 81.72656,174.7539 15.80078,32.52344 31.35156,64.6836 44.51953,93.19141 13.16407,28.46484 23.9961,53.44922 30.15235,70.72266 4.33593,12.11718 5.88281,21.84375 5.875,29.32812 -0.0117,7.26172 -1.375,12.41406 -3.26953,16.47656 z m 43.55078,-62.29297 c -8.71875,-24.375 -23.48438,-57.25 -40.94141,-94.35546 -26.15234,-55.51172 -58.28906,-119.97266 -83.76172,-173.84375 -12.71875,-26.90625 -23.77734,-51.19922 -31.46094,-69.9961 -3.83203,-9.38281 -6.8164,-17.41797 -8.6875,-23.35937 -0.9414,-2.96875 -1.58203,-5.41407 -1.92968,-7.04688 l -0.32032,-1.71875 -0.0117,-0.10547 c 0,-28.61718 0,-169.19531 0,-239.113278 h 18.28515 c 19.57813,0 35.45313,-15.871093 35.45313,-35.453124 C 586.14844,15.871094 570.27344,0 550.69531,0 H 259.37109 c -19.57422,0 -35.45312,15.871094 -35.45312,35.460938 0,19.582031 15.8789,35.453124 35.45312,35.453124 h 18.27735 c 0,69.917968 0,210.484378 0,239.113278 -0.0312,0.41016 -0.44141,2.72657 -1.37891,5.92188 -1.80078,6.34765 -5.36328,16.11719 -10.19922,27.82031 -16.96094,41.25 -49.16406,106.85156 -80.28125,170.89063 -15.57031,32.0664 -30.91015,63.83203 -44.0664,92.35156 -13.17188,28.57422 -24.14063,53.72656 -31.1836,73.4414 -5.85156,16.38672 -8.73437,31.62891 -8.73828,45.81641 -0.0195,13.69922 2.76953,26.41797 7.96485,37.40234 7.77343,16.55469 20.7539,28.54297 34.65624,35.8086 13.98438,7.33594 28.9336,10.48828 43.24219,10.51953 h 434.73438 c 19.0039,-0.0742 39.46484,-5.55469 56.67578,-19.34766 8.53515,-6.89843 16.05078,-15.98828 21.22265,-26.98047 5.20313,-10.98437 7.98438,-23.70312 7.96485,-37.40234 -0.008,-14.1875 -2.88672,-29.42969 -8.73828,-45.81641"
             fill-opacity="1"
             fill-rule="nonzero"
             id="path5-4-9-0"
             style="fill:#e6e6e6" /></g></g></g><g
       id="g21-5-2-2"
       transform="matrix(0.09757536,0,0,0.08947464,151.50913,112.2819)"
       style="mix-blend-mode:normal;fill:url(#linearGradient1304);fill-opacity:1;stroke-width:1.00409"><path
         fill="#0753eb"
         d="m 468.10156,601.63672 c -16.90234,0 -30.59375,-13.69531 -30.59375,-30.59766 0,-16.89453 13.69141,-30.58984 30.59375,-30.58984 16.89453,0 30.59766,13.69531 30.59766,30.58984 0,16.90235 -13.70313,30.59766 -30.59766,30.59766 z m -128.71094,52.05859 c -28.73046,0 -52.01562,-23.29297 -52.01562,-52.01562 0,-28.73047 23.28516,-52.01563 52.01562,-52.01563 28.72657,0 52.01563,23.28516 52.01563,52.01563 0,28.72265 -23.28906,52.01562 -52.01563,52.01562 z m 260.16797,-16.55078 c -13.52734,-29.28516 -29.96093,-63.22656 -44.30078,-92.73437 l -8.96875,-18.45313 c -3.33594,-6.87891 -6.52734,-13.47266 -9.8125,-20.23828 H 274.03125 c -0.14844,0 -0.28906,-0.0195 -0.44531,-0.0234 -3.72657,7.67969 -7.3711,15.23047 -11.13672,22.97656 -14.875,30.58204 -29.79688,61.27735 -43.06641,89.4336 -18.85937,40.00781 -31.70312,69.48047 -38.16015,87.60937 -3.60938,10.08203 2.03515,29.21094 22.17968,29.21094 h 406.25391 c 19.02344,0 22.79297,-19.12891 19.17578,-29.23437 -5.4375,-15.26563 -15.28906,-38.32032 -29.27344,-68.54688"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path2-66-5-6-0"
         style="fill:url(#linearGradient2439);fill-opacity:1" /><path
         fill="#0753eb"
         d="m 385.41016,423.99219 c 0,25.33984 20.54296,45.88281 45.88671,45.88281 25.34766,0 45.88282,-20.54297 45.88282,-45.88281 0,-25.35157 -20.53516,-45.89453 -45.88282,-45.89453 -25.34375,0 -45.88671,20.54296 -45.88671,45.89453"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path3-0-8-8-9"
         style="fill:url(#linearGradient2441);fill-opacity:1" /><path
         fill="#0753eb"
         d="m 400.66016,302.70703 c 14.23437,0 25.76562,-11.53125 25.76562,-25.76953 0,-14.23438 -11.53125,-25.76563 -25.76562,-25.76563 -14.23829,0 -25.76954,11.53125 -25.76954,25.76563 0,14.23828 11.53125,25.76953 25.76954,25.76953"
         fill-opacity="1"
         fill-rule="nonzero"
         id="path4-3-2-0-4"
         style="fill:url(#linearGradient2443);fill-opacity:1" /><g
         clip-path="url(#12a6f414f8-3-71-8)"
         id="g5-2-9-6-1"
         style="fill:url(#linearGradient2447);fill-opacity:1"><path
           fill="#0753eb"
           d="m 655.97266,742.74609 c -2.8711,5.99219 -7.1836,10.14453 -13.19922,13.37891 -5.9375,3.17578 -13.53125,4.88672 -20.375,4.85547 H 187.66406 c -9.19531,0.0742 -19.41406,-3.08985 -25.83203,-8.42969 -3.27734,-2.67578 -5.81641,-5.76953 -7.74609,-9.80469 -1.89453,-4.0625 -3.25,-9.21484 -3.26563,-16.47656 -0.008,-7.48437 1.54297,-17.21094 5.875,-29.32812 7.51563,-21.09375 21.9375,-53.5 39.125,-89.94922 25.82031,-54.80078 57.92969,-119.23828 83.73047,-173.78907 12.90234,-27.30859 24.22266,-52.11328 32.52344,-72.41406 4.14844,-10.17187 7.54687,-19.1875 10.0625,-27.18359 1.26562,-4.00391 2.30469,-7.75 3.10547,-11.46485 0.78125,-3.73828 1.39062,-7.33984 1.42187,-11.83203 0,-28.08203 0,-169.27343 0,-239.394528 h 156.72656 c 0,70.121098 0,211.312498 0,239.394528 0.0625,5.94922 1.0586,10.49219 2.30079,15.56641 2.40234,9.31641 6.23828,19.87891 11.27734,32.39844 17.53906,43.43359 50.08594,109.60156 81.72656,174.7539 15.80078,32.52344 31.35156,64.6836 44.51953,93.19141 13.16407,28.46484 23.9961,53.44922 30.15235,70.72266 4.33593,12.11718 5.88281,21.84375 5.875,29.32812 -0.0117,7.26172 -1.375,12.41406 -3.26953,16.47656 z m 43.55078,-62.29297 c -8.71875,-24.375 -23.48438,-57.25 -40.94141,-94.35546 -26.15234,-55.51172 -58.28906,-119.97266 -83.76172,-173.84375 -12.71875,-26.90625 -23.77734,-51.19922 -31.46094,-69.9961 -3.83203,-9.38281 -6.8164,-17.41797 -8.6875,-23.35937 -0.9414,-2.96875 -1.58203,-5.41407 -1.92968,-7.04688 l -0.32032,-1.71875 -0.0117,-0.10547 c 0,-28.61718 0,-169.19531 0,-239.113278 h 18.28515 c 19.57813,0 35.45313,-15.871093 35.45313,-35.453124 C 586.14844,15.871094 570.27344,0 550.69531,0 H 259.37109 c -19.57422,0 -35.45312,15.871094 -35.45312,35.460938 0,19.582031 15.8789,35.453124 35.45312,35.453124 h 18.27735 c 0,69.917968 0,210.484378 0,239.113278 -0.0312,0.41016 -0.44141,2.72657 -1.37891,5.92188 -1.80078,6.34765 -5.36328,16.11719 -10.19922,27.82031 -16.96094,41.25 -49.16406,106.85156 -80.28125,170.89063 -15.57031,32.0664 -30.91015,63.83203 -44.0664,92.35156 -13.17188,28.57422 -24.14063,53.72656 -31.1836,73.4414 -5.85156,16.38672 -8.73437,31.62891 -8.73828,45.81641 -0.0195,13.69922 2.76953,26.41797 7.96485,37.40234 7.77343,16.55469 20.7539,28.54297 34.65624,35.8086 13.98438,7.33594 28.9336,10.48828 43.24219,10.51953 h 434.73438 c 19.0039,-0.0742 39.46484,-5.55469 56.67578,-19.34766 8.53515,-6.89843 16.05078,-15.98828 21.22265,-26.98047 5.20313,-10.98437 7.98438,-23.70312 7.96485,-37.40234 -0.008,-14.1875 -2.88672,-29.42969 -8.73828,-45.81641"
           fill-opacity="1"
           fill-rule="nonzero"
           id="path5-4-9-0-0"
           style="fill:url(#linearGradient2445);fill-opacity:1" /></g></g><g
       id="g11431"
       transform="translate(-456.8545,162.97517)"><g
         id="g2952-3"
         transform="matrix(0.26458333,0,0,0.26458333,-1733.2524,457.60594)"><script
           id="mesh_polyfill-9-1"
           type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
           id="mesh_polyfill-4-4"
           type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
           id="mesh_polyfill-8-9"
           type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
           id="mesh_polyfill-2"
           type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8867.3612,-478.0207 c -0.6238,-2.4641 -2.8305,-7.3746 -4.9036,-10.9122 -12.0538,-20.5682 -40.2236,-23.7137 -57.2145,-6.3887 -6.5963,6.726 -8.9106,11.7628 -9.7726,21.2693 -1.0799,11.9095 1.6162,19.8563 9.7596,28.7665 l 6.8521,7.4973 v 140.1624 140.1624 h 19.0919 19.0919 v -140.5464 -140.5464 l 4.6324,-3.5333 c 9.3505,-7.132 15.3644,-24.4703 12.4628,-35.9309 z m -16.7439,17.8871 c -3.654,7.2728 -10.5829,11.343 -19.2988,11.3366 -9.6719,-0.01 -15.7634,-3.8351 -19.4828,-12.2435 -9.4625,-21.3914 15.0426,-40.1856 33.4833,-25.6801 7.5532,5.9413 9.8586,17.5102 5.2983,26.587 z"
           id="path268-51-92-7" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8715.0056,-359.5772 c -0.6238,-2.4641 -2.8305,-7.3746 -4.9036,-10.9122 -12.0538,-20.5682 -40.2236,-23.7137 -57.2145,-6.3887 -6.5963,6.726 -8.9106,11.7628 -9.7726,21.2693 -1.0799,11.9095 1.6162,19.8563 9.7596,28.7665 l 6.8521,7.4973 v 140.1624 140.1624 h 19.0919 19.0919 V -179.5666 -320.113 l 4.6324,-3.5333 c 9.3505,-7.132 15.3644,-24.4703 12.4628,-35.9309 z m -16.7439,17.8871 c -3.654,7.2728 -10.5829,11.343 -19.2988,11.3366 -9.6719,-0.01 -15.7634,-3.8351 -19.4828,-12.2435 -9.4625,-21.3914 15.0426,-40.1856 33.4833,-25.6801 7.5532,5.9413 9.8586,17.5102 5.2983,26.587 z"
           id="path268-51-9-4-6" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8944.7112,-569.1163 c -0.6238,-2.4641 -2.8305,-7.3746 -4.9036,-10.9122 -12.0538,-20.5682 -40.2236,-23.7137 -57.2145,-6.3887 -6.5963,6.726 -8.9106,11.7628 -9.7726,21.2693 -1.0799,11.9095 1.6162,19.8563 9.7596,28.7665 l 6.8521,7.4973 v 140.1624 140.1624 h 19.0919 19.0919 v -140.5464 -140.5464 l 4.6324,-3.5333 c 9.3505,-7.132 15.3644,-24.4703 12.4628,-35.9309 z m -16.7439,17.8871 c -3.654,7.2728 -10.5829,11.343 -19.2988,11.3366 -9.6719,-0.01 -15.7634,-3.8351 -19.4828,-12.2435 -9.4625,-21.3914 15.0426,-40.1856 33.4833,-25.6801 7.5532,5.9413 9.8586,17.5102 5.2983,26.587 z"
           id="path268-51-9-8-7-0" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 9001.5058,-484.5609 c 2.1727,-1.3193 7.1893,-3.2726 11.148,-4.3409 23.0168,-6.2108 45.3054,11.3006 45.2694,35.5667 -0.014,9.4208 -1.896,14.6345 -7.9479,22.0163 -7.9459,9.6922 -15.3456,13.2663 -28.1065,13.5754 l -10.7881,0.2613 -41.7133,42.4078 -41.7133,42.4077 -0.4265,133.2769 -0.4264,133.2769 -18.6023,-0.2647 c -10.2312,-0.1457 -18.7635,-0.5402 -18.9605,-0.8768 -0.1971,-0.3365 -0.1936,-63.7121 0.01,-140.8345 l 0.3659,-140.2226 48.1266,-48.9935 48.1266,-48.9934 -0.7594,-4.7968 c -1.6756,-10.5835 6.6313,-27.5344 16.4,-33.4659 z m -1.848,26.2872 c -2.3903,10.4299 5.5598,22.5701 16.4467,25.1147 20.8688,4.8779 35.5276,-21.0661 20.3423,-36.0028 -12.8715,-12.6607 -32.7397,-6.7804 -36.789,10.8881 z"
           id="path270-3-6-0-1-2-2-7" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8986.9012,213.22501 c -0.6238,2.4641 -2.8305,7.3746 -4.9036,10.9122 -12.0538,20.5682 -40.2236,23.7137 -57.2145,6.3887 -6.5963,-6.726 -8.9106,-11.7628 -9.7726,-21.2693 -1.0799,-11.9095 1.6162,-19.8563 9.7596,-28.7665 l 6.8521,-7.4973 V 32.830407 -107.33199 h 19.0919 19.0919 V 33.214407 173.76081 l 4.6324,3.5333 c 9.3505,7.132 15.3644,24.4703 12.4628,35.9309 z m -16.7439,-17.8871 c -3.654,-7.2728 -10.5829,-11.343 -19.2988,-11.3366 -9.6719,0.01 -15.7634,3.8351 -19.4828,12.2435 -9.4625,21.3914 15.0426,40.1856 33.4833,25.6801 7.5532,-5.9413 9.8586,-17.5102 5.2983,-26.587 z"
           id="path268-51-92-5-4" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8570.4639,-516.9676 c -1.2484,-2.21416 -3.0386,-7.29133 -3.9784,-11.28247 -5.4637,-23.20544 12.7589,-44.91646 37.0112,-44.09635 9.4153,0.31838 14.5655,2.36801 21.7479,8.65527 8.998,7.8765 12.5286,15.48933 12.7805,27.5576 l 0.2119,10.1546 96.696,101.46616 96.696,101.4661 -13.821,13.1713 -13.821,13.1712 -96.9609,-101.7441 -96.9609,-101.7442 -5.7911,0.638 c -11.6892,1.2878 -28.0042,-7.1148 -33.8102,-17.41311 z m 24.4612,1.39741 c 7.6626,2.7441 15.4866,0.9104 21.7918,-5.10717 6.9947,-6.67974 8.7656,-13.65124 5.6573,-22.3042 -7.9075,-22.01367 -38.6131,-18.71343 -41.9555,4.50934 -1.3691,9.51186 4.9432,19.47727 14.5064,22.90203 z"
           id="path268-51-9-4-1-7" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8900.2025,355.23229 c -0.6238,2.4641 -2.8305,7.3746 -4.9036,10.9122 -12.0538,20.5682 -40.2236,23.7137 -57.2145,6.3887 -6.5963,-6.726 -8.9106,-11.7628 -9.7726,-21.2693 -1.0799,-11.9095 1.6162,-19.8563 9.7596,-28.7665 l 6.8521,-7.4973 V 174.83769 34.67529 h 19.0919 19.0919 v 140.5464 140.5464 l 4.6324,3.5333 c 9.3505,7.132 15.3644,24.4703 12.4628,35.9309 z m -16.7439,-17.8871 c -3.654,-7.2728 -10.5829,-11.343 -19.2988,-11.3366 -9.6719,0.01 -15.7634,3.8351 -19.4828,12.2435 -9.4625,21.3914 15.0426,40.1856 33.4833,25.6801 7.5532,-5.9413 9.8586,-17.5102 5.2983,-26.587 z"
           id="path268-51-9-8-7-9-52" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8660.6529,263.18818 c -2.1727,1.3193 -7.1893,3.2726 -11.148,4.3409 -23.0168,6.2108 -45.3054,-11.3006 -45.2694,-35.5667 0.014,-9.4208 1.896,-14.6345 7.9479,-22.0163 7.9459,-9.6922 15.3456,-13.2663 28.1065,-13.5754 l 10.7881,-0.2613 41.7133,-42.4078 41.7133,-42.4077 0.4265,-133.2769 0.4264,-133.2769 18.6023,0.2647 c 10.2312,0.1457 18.7635,0.5402 18.9605,0.8768 0.1971,0.3365 0.1936,63.7121 -0.01,140.8345 l -0.3659,140.2226 -48.1266,48.9935 -48.1266,48.9934 0.7594,4.7968 c 1.6756,10.5835 -6.6313,27.5344 -16.4,33.4659 z m 1.848,-26.2872 c 2.3903,-10.4299 -5.5598,-22.5701 -16.4467,-25.1147 -20.8688,-4.8779 -35.5276,21.0661 -20.3423,36.0028 12.8715,12.6607 32.7397,6.7804 36.789,-10.8881 z"
           id="path270-3-6-0-1-5-7-4" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 9028.1455,-212.35612 c 2.4641,-0.6238 7.3746,-2.8305 10.9122,-4.9036 20.5682,-12.0538 23.7137,-40.2236 6.3887,-57.2145 -6.726,-6.5963 -11.7628,-8.9106 -21.2693,-9.7726 -11.9095,-1.0799 -19.8563,1.6162 -28.7665,9.7596 l -7.4973,6.8521 h -140.1624 -140.1624 v 19.0919 19.0919 h 140.5464 140.5464 l 3.5333,4.6324 c 7.132,9.3505 24.4703,15.3644 35.9309,12.4628 z m -17.8871,-16.7439 c -7.2728,-3.654 -11.343,-10.5829 -11.3366,-19.2988 0.01,-9.6719 3.8351,-15.7634 12.2435,-19.4828 21.3914,-9.4625 40.1856,15.0426 25.6801,33.4833 -5.9413,7.5532 -17.5102,9.8586 -26.587,5.2983 z"
           id="path268-51-9-4-1-6-1" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 9237.6846,17.34948 c 2.4641,-0.6238 7.3746,-2.8305 10.9122,-4.9036 20.5682,-12.0538 23.7137,-40.2236 6.3887,-57.2145 -6.726,-6.5963 -11.7628,-8.9106 -21.2693,-9.7726 -11.9095,-1.0799 -19.8563,1.6162 -28.7665,9.7596 l -7.4973,6.8521 H 9057.29 8917.1276 v 19.0919 19.0919 h 140.5464 140.5464 l 3.5333,4.6324 c 7.132,9.3505 24.4703,15.3644 35.9309,12.4628 z m -17.8871,-16.7439 c -7.2728,-3.654 -11.343,-10.5829 -11.3366,-19.2988 0.01,-9.6719 3.8351,-15.7634 12.2435,-19.4828 21.3914,-9.4625 40.1856,15.0426 25.6801,33.4833 -5.9413,7.5532 -17.5102,9.8586 -26.587,5.2983 z"
           id="path268-51-9-8-7-9-5-2" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 9241.807,-267.45492 c 1.3193,-2.1727 3.2726,-7.1893 4.3409,-11.148 6.2108,-23.0168 -11.3006,-45.3054 -35.5667,-45.2694 -9.4208,0.014 -14.6345,1.896 -22.0163,7.9479 -9.6922,7.9459 -13.2663,15.3456 -13.5754,28.1065 l -0.2613,10.7881 -42.4078,41.7133 -42.4077,41.7133 -133.2769,0.4265 -133.2769,0.4264 0.2647,18.6023 c 0.1457,10.2312 0.5402,18.7635 0.8768,18.9605 0.3365,0.1971 63.7121,0.1936 140.8345,-0.01 l 140.2226,-0.3659 48.9935,-48.1266 48.9934,-48.1266 4.7968,0.7594 c 10.5835,1.6756 27.5344,-6.6313 33.4659,-16.4 z m -26.2872,1.848 c -10.4299,2.3903 -22.5701,-5.5598 -25.1147,-16.4467 -4.8779,-20.8688 21.0661,-35.5276 36.0028,-20.3423 12.6607,12.8715 6.7804,32.7397 -10.8881,36.789 z"
           id="path270-3-6-0-1-5-7-0-4" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 9153.1292,74.14408 c 1.3193,2.1727 3.2726,7.1893 4.3409,11.148 6.2108,23.0168 -11.3006,45.3054 -35.5667,45.2694 -9.4208,-0.014 -14.6345,-1.896 -22.0163,-7.9479 -9.6922,-7.9459 -13.2663,-15.3456 -13.5754,-28.1065 l -0.2613,-10.7881 -42.4078,-41.7133 -42.4077,-41.7133 -133.2769,-0.4265 -133.2769,-0.4264 0.2647,-18.6023 c 0.1457,-10.2312 0.5402,-18.7635 0.8768,-18.9605 0.3365,-0.1971 63.7121,-0.1936 140.8345,0.01 l 140.2226,0.3659 48.9935,48.1266 48.9934,48.1266 4.7968,-0.7594 c 10.5835,-1.6756 27.5344,6.6313 33.4659,16.4 z m -26.2872,-1.848 c -10.4299,-2.3903 -22.5701,5.5598 -25.1147,16.4467 -4.8779,20.8688 21.0661,35.5276 36.0028,20.3423 12.6607,-12.8715 6.7804,-32.7397 -10.8881,-36.789 z"
           id="path270-3-6-0-1-2-2-1-9-3" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8453.4282,-213.6687 c -2.4641,0.6238 -7.3746,2.8305 -10.9122,4.9036 -20.5682,12.0538 -23.7137,40.2236 -6.3887,57.2145 6.726,6.5963 11.7628,8.9106 21.2693,9.7726 11.9095,1.0799 19.8563,-1.6162 28.7665,-9.7596 l 7.4973,-6.8521 h 140.1624 140.1624 v -19.0919 -19.0919 h -140.5464 -140.5464 l -3.5333,-4.6324 c -7.132,-9.3505 -24.4703,-15.3644 -35.9309,-12.4628 z m 17.8871,16.7439 c 7.2728,3.654 11.343,10.5829 11.3366,19.2988 -0.01,9.6719 -3.8351,15.7634 -12.2435,19.4828 -21.3914,9.4625 -40.1856,-15.0426 -25.6801,-33.4833 5.9413,-7.5532 17.5102,-9.8586 26.587,-5.2983 z"
           id="path268-51-92-9-4" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8571.8717,-61.3131 c -2.4641,0.6238 -7.3746,2.8305 -10.9122,4.9036 -20.5682,12.0538 -23.7137,40.2236 -6.3887,57.2145 6.726,6.5963 11.7628,8.9106 21.2693,9.7726 11.9095,1.0799 19.8563,-1.6162 28.7665,-9.7596 l 7.4973,-6.8521 h 140.1624 140.1624 V -25.126 -44.2179 h -140.5464 -140.5464 l -3.5333,-4.6324 c -7.132,-9.3505 -24.4703,-15.3644 -35.9309,-12.4628 z m 17.8871,16.7439 c 7.2728,3.654 11.343,10.5829 11.3366,19.2988 -0.01,9.6719 -3.8351,15.7634 -12.2435,19.4828 -21.3914,9.4625 -40.1856,-15.0426 -25.6801,-33.4833 5.9413,-7.5532 17.5102,-9.8586 26.587,-5.2983 z"
           id="path268-51-9-4-10-1" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8362.3326,-291.0187 c -2.4641,0.6238 -7.3746,2.8305 -10.9122,4.9036 -20.5682,12.0538 -23.7137,40.2236 -6.3887,57.2145 6.726,6.5963 11.7628,8.9106 21.2693,9.7726 11.9095,1.0799 19.8563,-1.6162 28.7665,-9.7596 l 7.4973,-6.8521 h 140.1624 140.1624 v -19.0919 -19.0919 h -140.5464 -140.5464 l -3.5333,-4.6324 c -7.132,-9.3505 -24.4703,-15.3644 -35.9309,-12.4628 z m 17.8871,16.7439 c 7.2728,3.654 11.343,10.5829 11.3366,19.2988 -0.01,9.6719 -3.8351,15.7634 -12.2435,19.4828 -21.3914,9.4625 -40.1856,-15.0426 -25.6801,-33.4833 5.9413,-7.5532 17.5102,-9.8586 26.587,-5.2983 z"
           id="path268-51-9-8-7-7-8" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8358.2102,-6.2143 c -1.3193,2.1727 -3.2726,7.1893 -4.3409,11.148 -6.2108,23.0168 11.3006,45.3054 35.5667,45.2694 9.4208,-0.014 14.6345,-1.896 22.0163,-7.9479 9.6922,-7.9459 13.2663,-15.3456 13.5754,-28.1065 l 0.2613,-10.7881 42.4078,-41.7133 42.4077,-41.7133 133.2769,-0.4265 133.2769,-0.4264 -0.2647,-18.6023 c -0.1457,-10.2312 -0.5402,-18.7635 -0.8768,-18.9605 -0.3365,-0.1971 -63.7121,-0.1936 -140.8345,0.01 l -140.2226,0.3659 -48.9935,48.1266 -48.9934,48.1266 -4.7968,-0.7594 c -10.5835,-1.6756 -27.5344,6.6313 -33.4659,16.4 z m 26.2872,-1.848 c 10.4299,-2.3903 22.5701,5.5598 25.1147,16.4467 4.8779,20.8688 -21.0661,35.5276 -36.0028,20.3423 -12.6607,-12.8715 -6.7804,-32.7397 10.8881,-36.789 z"
           id="path270-3-6-0-1-5-2-3" /><rect
           style="mix-blend-mode:normal;fill:#30ff10;fill-opacity:1;stroke-width:1.66773;filter:url(#filter275-9-9)"
           id="rect41-1-4-2"
           width="685.83972"
           height="676.04199"
           x="7207.8877"
           y="-3316.1125"
           ry="173.94908"
           rx="159.08235"
           transform="matrix(1.0558567,0,0,1.0359928,837.93016,2971.9538)" /></g><g
         id="g11401"
         transform="matrix(0.16119264,0,0,0.16119264,537.96275,363.67855)"
         style="fill:#ffffff;fill-opacity:1"><g
           clip-path="url(#484e6af075)"
           id="g11378"
           style="fill:#ffffff;fill-opacity:1"><path
             fill="#0753eb"
             d="m 701.5625,0 c 10.05469,50.335938 -15.11719,102.25781 -51.36328,138.50781 -36.25,36.32813 -82.63281,60.39063 -126.875,86.26953 -44.32031,25.88282 -88.56641,55.40235 -116.34375,98.53907 -24.22266,37.51562 -34.11328,82.47265 -39.17969,126.79296 -6.33203,53.82032 -5.46094,110.25391 11.63281,160.90625 12.42969,-30.55078 28.65235,-59.7539 47.09375,-87.0625 36.25,-53.73828 80.89063,-101.14843 125.28907,-148.32031 C 603.73828,320.54687 655.57812,265.53906 707.5,210.45312 653.75781,311.12891 570.49609,392.33203 500.13672,482.16406 429.77344,572.07422 369.78125,679.39844 376.34766,793.37109 381.57422,735.03906 428.90234,688.73828 480.26953,660.5625 531.63672,632.38672 589.17578,616.63672 639.75,587.19141 735.4375,531.47266 799.78516,425.25781 804.77344,314.60937 809.83594,202.69531 758.78906,96.242188 701.5625,0 Z m 0,0"
             fill-opacity="1"
             fill-rule="nonzero"
             id="path11376"
             style="fill:#ffffff;fill-opacity:1" /></g><g
           clip-path="url(#72fe526092)"
           id="g11384"
           style="fill:#ffffff;fill-opacity:1"><g
             clip-path="url(#f0aa310c86)"
             id="g11382"
             style="fill:#ffffff;fill-opacity:1"><path
               fill="#0753eb"
               d="M 339.78125,48.28125 V 649.40234 H 0.164062 V 48.28125 Z m 0,0"
               fill-opacity="1"
               fill-rule="nonzero"
               id="path11380"
               style="fill:#ffffff;fill-opacity:1" /></g></g></g></g><g
       id="g14329"
       transform="translate(370.96776,123.45566)"><g
         id="g2952-2"
         transform="matrix(0.26458333,0,0,0.26458333,-2251.0593,497.12545)"><script
           id="mesh_polyfill-9-8"
           type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
           id="mesh_polyfill-4-0"
           type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
           id="mesh_polyfill-8-97"
           type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
           id="mesh_polyfill-6"
           type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8867.3612,-478.0207 c -0.6238,-2.4641 -2.8305,-7.3746 -4.9036,-10.9122 -12.0538,-20.5682 -40.2236,-23.7137 -57.2145,-6.3887 -6.5963,6.726 -8.9106,11.7628 -9.7726,21.2693 -1.0799,11.9095 1.6162,19.8563 9.7596,28.7665 l 6.8521,7.4973 v 140.1624 140.1624 h 19.0919 19.0919 v -140.5464 -140.5464 l 4.6324,-3.5333 c 9.3505,-7.132 15.3644,-24.4703 12.4628,-35.9309 z m -16.7439,17.8871 c -3.654,7.2728 -10.5829,11.343 -19.2988,11.3366 -9.6719,-0.01 -15.7634,-3.8351 -19.4828,-12.2435 -9.4625,-21.3914 15.0426,-40.1856 33.4833,-25.6801 7.5532,5.9413 9.8586,17.5102 5.2983,26.587 z"
           id="path268-51-92-1" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8715.0056,-359.5772 c -0.6238,-2.4641 -2.8305,-7.3746 -4.9036,-10.9122 -12.0538,-20.5682 -40.2236,-23.7137 -57.2145,-6.3887 -6.5963,6.726 -8.9106,11.7628 -9.7726,21.2693 -1.0799,11.9095 1.6162,19.8563 9.7596,28.7665 l 6.8521,7.4973 v 140.1624 140.1624 h 19.0919 19.0919 V -179.5666 -320.113 l 4.6324,-3.5333 c 9.3505,-7.132 15.3644,-24.4703 12.4628,-35.9309 z m -16.7439,17.8871 c -3.654,7.2728 -10.5829,11.343 -19.2988,11.3366 -9.6719,-0.01 -15.7634,-3.8351 -19.4828,-12.2435 -9.4625,-21.3914 15.0426,-40.1856 33.4833,-25.6801 7.5532,5.9413 9.8586,17.5102 5.2983,26.587 z"
           id="path268-51-9-4-8" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8944.7112,-569.1163 c -0.6238,-2.4641 -2.8305,-7.3746 -4.9036,-10.9122 -12.0538,-20.5682 -40.2236,-23.7137 -57.2145,-6.3887 -6.5963,6.726 -8.9106,11.7628 -9.7726,21.2693 -1.0799,11.9095 1.6162,19.8563 9.7596,28.7665 l 6.8521,7.4973 v 140.1624 140.1624 h 19.0919 19.0919 v -140.5464 -140.5464 l 4.6324,-3.5333 c 9.3505,-7.132 15.3644,-24.4703 12.4628,-35.9309 z m -16.7439,17.8871 c -3.654,7.2728 -10.5829,11.343 -19.2988,11.3366 -9.6719,-0.01 -15.7634,-3.8351 -19.4828,-12.2435 -9.4625,-21.3914 15.0426,-40.1856 33.4833,-25.6801 7.5532,5.9413 9.8586,17.5102 5.2983,26.587 z"
           id="path268-51-9-8-7-6" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 9001.5058,-484.5609 c 2.1727,-1.3193 7.1893,-3.2726 11.148,-4.3409 23.0168,-6.2108 45.3054,11.3006 45.2694,35.5667 -0.014,9.4208 -1.896,14.6345 -7.9479,22.0163 -7.9459,9.6922 -15.3456,13.2663 -28.1065,13.5754 l -10.7881,0.2613 -41.7133,42.4078 -41.7133,42.4077 -0.4265,133.2769 -0.4264,133.2769 -18.6023,-0.2647 c -10.2312,-0.1457 -18.7635,-0.5402 -18.9605,-0.8768 -0.1971,-0.3365 -0.1936,-63.7121 0.01,-140.8345 l 0.3659,-140.2226 48.1266,-48.9935 48.1266,-48.9934 -0.7594,-4.7968 c -1.6756,-10.5835 6.6313,-27.5344 16.4,-33.4659 z m -1.848,26.2872 c -2.3903,10.4299 5.5598,22.5701 16.4467,25.1147 20.8688,4.8779 35.5276,-21.0661 20.3423,-36.0028 -12.8715,-12.6607 -32.7397,-6.7804 -36.789,10.8881 z"
           id="path270-3-6-0-1-2-2-6" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8986.9012,213.22501 c -0.6238,2.4641 -2.8305,7.3746 -4.9036,10.9122 -12.0538,20.5682 -40.2236,23.7137 -57.2145,6.3887 -6.5963,-6.726 -8.9106,-11.7628 -9.7726,-21.2693 -1.0799,-11.9095 1.6162,-19.8563 9.7596,-28.7665 l 6.8521,-7.4973 V 32.830407 -107.33199 h 19.0919 19.0919 V 33.214407 173.76081 l 4.6324,3.5333 c 9.3505,7.132 15.3644,24.4703 12.4628,35.9309 z m -16.7439,-17.8871 c -3.654,-7.2728 -10.5829,-11.343 -19.2988,-11.3366 -9.6719,0.01 -15.7634,3.8351 -19.4828,12.2435 -9.4625,21.3914 15.0426,40.1856 33.4833,25.6801 7.5532,-5.9413 9.8586,-17.5102 5.2983,-26.587 z"
           id="path268-51-92-5-8" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8570.4639,-516.9676 c -1.2484,-2.21416 -3.0386,-7.29133 -3.9784,-11.28247 -5.4637,-23.20544 12.7589,-44.91646 37.0112,-44.09635 9.4153,0.31838 14.5655,2.36801 21.7479,8.65527 8.998,7.8765 12.5286,15.48933 12.7805,27.5576 l 0.2119,10.1546 96.696,101.46616 96.696,101.4661 -13.821,13.1713 -13.821,13.1712 -96.9609,-101.7441 -96.9609,-101.7442 -5.7911,0.638 c -11.6892,1.2878 -28.0042,-7.1148 -33.8102,-17.41311 z m 24.4612,1.39741 c 7.6626,2.7441 15.4866,0.9104 21.7918,-5.10717 6.9947,-6.67974 8.7656,-13.65124 5.6573,-22.3042 -7.9075,-22.01367 -38.6131,-18.71343 -41.9555,4.50934 -1.3691,9.51186 4.9432,19.47727 14.5064,22.90203 z"
           id="path268-51-9-4-1-5" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8900.2025,355.23229 c -0.6238,2.4641 -2.8305,7.3746 -4.9036,10.9122 -12.0538,20.5682 -40.2236,23.7137 -57.2145,6.3887 -6.5963,-6.726 -8.9106,-11.7628 -9.7726,-21.2693 -1.0799,-11.9095 1.6162,-19.8563 9.7596,-28.7665 l 6.8521,-7.4973 V 174.83769 34.67529 h 19.0919 19.0919 v 140.5464 140.5464 l 4.6324,3.5333 c 9.3505,7.132 15.3644,24.4703 12.4628,35.9309 z m -16.7439,-17.8871 c -3.654,-7.2728 -10.5829,-11.343 -19.2988,-11.3366 -9.6719,0.01 -15.7634,3.8351 -19.4828,12.2435 -9.4625,21.3914 15.0426,40.1856 33.4833,25.6801 7.5532,-5.9413 9.8586,-17.5102 5.2983,-26.587 z"
           id="path268-51-9-8-7-9-6" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8660.6529,263.18818 c -2.1727,1.3193 -7.1893,3.2726 -11.148,4.3409 -23.0168,6.2108 -45.3054,-11.3006 -45.2694,-35.5667 0.014,-9.4208 1.896,-14.6345 7.9479,-22.0163 7.9459,-9.6922 15.3456,-13.2663 28.1065,-13.5754 l 10.7881,-0.2613 41.7133,-42.4078 41.7133,-42.4077 0.4265,-133.2769 0.4264,-133.2769 18.6023,0.2647 c 10.2312,0.1457 18.7635,0.5402 18.9605,0.8768 0.1971,0.3365 0.1936,63.7121 -0.01,140.8345 l -0.3659,140.2226 -48.1266,48.9935 -48.1266,48.9934 0.7594,4.7968 c 1.6756,10.5835 -6.6313,27.5344 -16.4,33.4659 z m 1.848,-26.2872 c 2.3903,-10.4299 -5.5598,-22.5701 -16.4467,-25.1147 -20.8688,-4.8779 -35.5276,21.0661 -20.3423,36.0028 12.8715,12.6607 32.7397,6.7804 36.789,-10.8881 z"
           id="path270-3-6-0-1-5-7-8" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 9028.1455,-212.35612 c 2.4641,-0.6238 7.3746,-2.8305 10.9122,-4.9036 20.5682,-12.0538 23.7137,-40.2236 6.3887,-57.2145 -6.726,-6.5963 -11.7628,-8.9106 -21.2693,-9.7726 -11.9095,-1.0799 -19.8563,1.6162 -28.7665,9.7596 l -7.4973,6.8521 h -140.1624 -140.1624 v 19.0919 19.0919 h 140.5464 140.5464 l 3.5333,4.6324 c 7.132,9.3505 24.4703,15.3644 35.9309,12.4628 z m -17.8871,-16.7439 c -7.2728,-3.654 -11.343,-10.5829 -11.3366,-19.2988 0.01,-9.6719 3.8351,-15.7634 12.2435,-19.4828 21.3914,-9.4625 40.1856,15.0426 25.6801,33.4833 -5.9413,7.5532 -17.5102,9.8586 -26.587,5.2983 z"
           id="path268-51-9-4-1-6-5" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 9237.6846,17.34948 c 2.4641,-0.6238 7.3746,-2.8305 10.9122,-4.9036 20.5682,-12.0538 23.7137,-40.2236 6.3887,-57.2145 -6.726,-6.5963 -11.7628,-8.9106 -21.2693,-9.7726 -11.9095,-1.0799 -19.8563,1.6162 -28.7665,9.7596 l -7.4973,6.8521 H 9057.29 8917.1276 v 19.0919 19.0919 h 140.5464 140.5464 l 3.5333,4.6324 c 7.132,9.3505 24.4703,15.3644 35.9309,12.4628 z m -17.8871,-16.7439 c -7.2728,-3.654 -11.343,-10.5829 -11.3366,-19.2988 0.01,-9.6719 3.8351,-15.7634 12.2435,-19.4828 21.3914,-9.4625 40.1856,15.0426 25.6801,33.4833 -5.9413,7.5532 -17.5102,9.8586 -26.587,5.2983 z"
           id="path268-51-9-8-7-9-5-5" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 9241.807,-267.45492 c 1.3193,-2.1727 3.2726,-7.1893 4.3409,-11.148 6.2108,-23.0168 -11.3006,-45.3054 -35.5667,-45.2694 -9.4208,0.014 -14.6345,1.896 -22.0163,7.9479 -9.6922,7.9459 -13.2663,15.3456 -13.5754,28.1065 l -0.2613,10.7881 -42.4078,41.7133 -42.4077,41.7133 -133.2769,0.4265 -133.2769,0.4264 0.2647,18.6023 c 0.1457,10.2312 0.5402,18.7635 0.8768,18.9605 0.3365,0.1971 63.7121,0.1936 140.8345,-0.01 l 140.2226,-0.3659 48.9935,-48.1266 48.9934,-48.1266 4.7968,0.7594 c 10.5835,1.6756 27.5344,-6.6313 33.4659,-16.4 z m -26.2872,1.848 c -10.4299,2.3903 -22.5701,-5.5598 -25.1147,-16.4467 -4.8779,-20.8688 21.0661,-35.5276 36.0028,-20.3423 12.6607,12.8715 6.7804,32.7397 -10.8881,36.789 z"
           id="path270-3-6-0-1-5-7-0-5" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 9153.1292,74.14408 c 1.3193,2.1727 3.2726,7.1893 4.3409,11.148 6.2108,23.0168 -11.3006,45.3054 -35.5667,45.2694 -9.4208,-0.014 -14.6345,-1.896 -22.0163,-7.9479 -9.6922,-7.9459 -13.2663,-15.3456 -13.5754,-28.1065 l -0.2613,-10.7881 -42.4078,-41.7133 -42.4077,-41.7133 -133.2769,-0.4265 -133.2769,-0.4264 0.2647,-18.6023 c 0.1457,-10.2312 0.5402,-18.7635 0.8768,-18.9605 0.3365,-0.1971 63.7121,-0.1936 140.8345,0.01 l 140.2226,0.3659 48.9935,48.1266 48.9934,48.1266 4.7968,-0.7594 c 10.5835,-1.6756 27.5344,6.6313 33.4659,16.4 z m -26.2872,-1.848 c -10.4299,-2.3903 -22.5701,5.5598 -25.1147,16.4467 -4.8779,20.8688 21.0661,35.5276 36.0028,20.3423 12.6607,-12.8715 6.7804,-32.7397 -10.8881,-36.789 z"
           id="path270-3-6-0-1-2-2-1-9-4" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8453.4282,-213.6687 c -2.4641,0.6238 -7.3746,2.8305 -10.9122,4.9036 -20.5682,12.0538 -23.7137,40.2236 -6.3887,57.2145 6.726,6.5963 11.7628,8.9106 21.2693,9.7726 11.9095,1.0799 19.8563,-1.6162 28.7665,-9.7596 l 7.4973,-6.8521 h 140.1624 140.1624 v -19.0919 -19.0919 h -140.5464 -140.5464 l -3.5333,-4.6324 c -7.132,-9.3505 -24.4703,-15.3644 -35.9309,-12.4628 z m 17.8871,16.7439 c 7.2728,3.654 11.343,10.5829 11.3366,19.2988 -0.01,9.6719 -3.8351,15.7634 -12.2435,19.4828 -21.3914,9.4625 -40.1856,-15.0426 -25.6801,-33.4833 5.9413,-7.5532 17.5102,-9.8586 26.587,-5.2983 z"
           id="path268-51-92-9-3" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8571.8717,-61.3131 c -2.4641,0.6238 -7.3746,2.8305 -10.9122,4.9036 -20.5682,12.0538 -23.7137,40.2236 -6.3887,57.2145 6.726,6.5963 11.7628,8.9106 21.2693,9.7726 11.9095,1.0799 19.8563,-1.6162 28.7665,-9.7596 l 7.4973,-6.8521 h 140.1624 140.1624 V -25.126 -44.2179 h -140.5464 -140.5464 l -3.5333,-4.6324 c -7.132,-9.3505 -24.4703,-15.3644 -35.9309,-12.4628 z m 17.8871,16.7439 c 7.2728,3.654 11.343,10.5829 11.3366,19.2988 -0.01,9.6719 -3.8351,15.7634 -12.2435,19.4828 -21.3914,9.4625 -40.1856,-15.0426 -25.6801,-33.4833 5.9413,-7.5532 17.5102,-9.8586 26.587,-5.2983 z"
           id="path268-51-9-4-10-9" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8362.3326,-291.0187 c -2.4641,0.6238 -7.3746,2.8305 -10.9122,4.9036 -20.5682,12.0538 -23.7137,40.2236 -6.3887,57.2145 6.726,6.5963 11.7628,8.9106 21.2693,9.7726 11.9095,1.0799 19.8563,-1.6162 28.7665,-9.7596 l 7.4973,-6.8521 h 140.1624 140.1624 v -19.0919 -19.0919 h -140.5464 -140.5464 l -3.5333,-4.6324 c -7.132,-9.3505 -24.4703,-15.3644 -35.9309,-12.4628 z m 17.8871,16.7439 c 7.2728,3.654 11.343,10.5829 11.3366,19.2988 -0.01,9.6719 -3.8351,15.7634 -12.2435,19.4828 -21.3914,9.4625 -40.1856,-15.0426 -25.6801,-33.4833 5.9413,-7.5532 17.5102,-9.8586 26.587,-5.2983 z"
           id="path268-51-9-8-7-7-4" /><path
           style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
           d="m 8358.2102,-6.2143 c -1.3193,2.1727 -3.2726,7.1893 -4.3409,11.148 -6.2108,23.0168 11.3006,45.3054 35.5667,45.2694 9.4208,-0.014 14.6345,-1.896 22.0163,-7.9479 9.6922,-7.9459 13.2663,-15.3456 13.5754,-28.1065 l 0.2613,-10.7881 42.4078,-41.7133 42.4077,-41.7133 133.2769,-0.4265 133.2769,-0.4264 -0.2647,-18.6023 c -0.1457,-10.2312 -0.5402,-18.7635 -0.8768,-18.9605 -0.3365,-0.1971 -63.7121,-0.1936 -140.8345,0.01 l -140.2226,0.3659 -48.9935,48.1266 -48.9934,48.1266 -4.7968,-0.7594 c -10.5835,-1.6756 -27.5344,6.6313 -33.4659,16.4 z m 26.2872,-1.848 c 10.4299,-2.3903 22.5701,5.5598 25.1147,16.4467 4.8779,20.8688 -21.0661,35.5276 -36.0028,20.3423 -12.6607,-12.8715 -6.7804,-32.7397 10.8881,-36.789 z"
           id="path270-3-6-0-1-5-2-9" /><rect
           style="mix-blend-mode:normal;fill:#30ff10;fill-opacity:1;stroke-width:1.66773;filter:url(#filter275-9-6)"
           id="rect41-1-4-6"
           width="685.83972"
           height="676.04199"
           x="7207.8877"
           y="-3316.1125"
           ry="173.94908"
           rx="159.08235"
           transform="matrix(1.0558567,0,0,1.0359928,837.93016,2971.9538)" /></g><path
         id="path2366-6-1-9"
         style="fill:#ffffff;fill-opacity:1;stroke-width:6.08332"
         inkscape:transform-center-x="8.315313"
         inkscape:transform-center-y="20.379381"
         d="m 83.423324,454.1129 52.442166,-5.33156 -95.200528,76.82828 z m 11.840378,12.12718 -48.691377,3.94935 89.543875,-68.44137 z" /></g><g
       id="g14304"><path
         id="rect12492"
         style="fill:#ffffff;fill-opacity:1;stroke-width:0.219509"
         d="M 259.3821 119.8392 A 26.27729 26.620037 0 0 0 233.10463 146.45876 A 26.27729 26.620037 0 0 0 239.38229 163.69698 L 239.38229 174.42036 L 279.38191 174.42036 L 279.38191 163.69698 A 26.27729 26.620037 0 0 0 285.65957 146.45876 A 26.27729 26.620037 0 0 0 259.3821 119.8392 z " /><ellipse
         style="fill:#50d870;fill-opacity:1;stroke-width:0.470873"
         id="path14214"
         cx="259.58606"
         cy="146.03275"
         rx="22.953371"
         ry="23.272163" /><ellipse
         style="fill:#ffffff;fill-opacity:1;stroke-width:0.387737"
         id="path14214-9"
         cx="259.44989"
         cy="145.97275"
         rx="18.900827"
         ry="19.163334" /><ellipse
         style="fill:#39ae70;fill-opacity:1;stroke-width:0.077505"
         id="path14010-0"
         cx="259.11093"
         cy="132.28859"
         rx="5.8245358"
         ry="5.9557195" /><ellipse
         style="fill:#39a770;fill-opacity:1;stroke-width:0.077505"
         id="path14010-0-7"
         cx="246.8432"
         cy="151.09741"
         rx="5.8245358"
         ry="5.9557195" /><ellipse
         style="fill:#39a470;fill-opacity:1;stroke-width:0.077505"
         id="path14010-0-7-6"
         cx="271.02594"
         cy="153.06784"
         rx="5.8245358"
         ry="5.9557195" /><ellipse
         style="fill:#3939ff;fill-opacity:1;stroke-width:0.12879"
         id="path14010"
         cx="259.38211"
         cy="146.66431"
         rx="9.6786242"
         ry="9.8966122" /><rect
         style="fill:#50d870;fill-opacity:1;stroke-width:0.229059"
         id="rect14138"
         width="5.9259262"
         height="20"
         x="243.98532"
         y="162.31163" /><rect
         style="fill:#50d870;fill-opacity:1;stroke-width:0.23121"
         id="rect14138-7"
         width="6.0377355"
         height="20"
         x="269.20996"
         y="162.66989" /><rect
         style="fill:#ffffff;fill-opacity:1;stroke-width:0.356999"
         id="rect14292"
         width="19.241268"
         height="15.047045"
         x="249.97084"
         y="158.71873" /></g><g
       id="g15380"
       transform="translate(-1186.567,418.33199)"><g
         id="g14329-2"
         transform="translate(1867.5501,-294.87633)"><g
           id="g2952-2-7"
           transform="matrix(0.26458333,0,0,0.26458333,-2251.0593,497.12545)"><script
             id="mesh_polyfill-9-8-0"
             type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
             id="mesh_polyfill-4-0-7"
             type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
             id="mesh_polyfill-8-97-8"
             type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><script
             id="mesh_polyfill-6-8"
             type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 8867.3612,-478.0207 c -0.6238,-2.4641 -2.8305,-7.3746 -4.9036,-10.9122 -12.0538,-20.5682 -40.2236,-23.7137 -57.2145,-6.3887 -6.5963,6.726 -8.9106,11.7628 -9.7726,21.2693 -1.0799,11.9095 1.6162,19.8563 9.7596,28.7665 l 6.8521,7.4973 v 140.1624 140.1624 h 19.0919 19.0919 v -140.5464 -140.5464 l 4.6324,-3.5333 c 9.3505,-7.132 15.3644,-24.4703 12.4628,-35.9309 z m -16.7439,17.8871 c -3.654,7.2728 -10.5829,11.343 -19.2988,11.3366 -9.6719,-0.01 -15.7634,-3.8351 -19.4828,-12.2435 -9.4625,-21.3914 15.0426,-40.1856 33.4833,-25.6801 7.5532,5.9413 9.8586,17.5102 5.2983,26.587 z"
             id="path268-51-92-1-1" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 8715.0056,-359.5772 c -0.6238,-2.4641 -2.8305,-7.3746 -4.9036,-10.9122 -12.0538,-20.5682 -40.2236,-23.7137 -57.2145,-6.3887 -6.5963,6.726 -8.9106,11.7628 -9.7726,21.2693 -1.0799,11.9095 1.6162,19.8563 9.7596,28.7665 l 6.8521,7.4973 v 140.1624 140.1624 h 19.0919 19.0919 V -179.5666 -320.113 l 4.6324,-3.5333 c 9.3505,-7.132 15.3644,-24.4703 12.4628,-35.9309 z m -16.7439,17.8871 c -3.654,7.2728 -10.5829,11.343 -19.2988,11.3366 -9.6719,-0.01 -15.7634,-3.8351 -19.4828,-12.2435 -9.4625,-21.3914 15.0426,-40.1856 33.4833,-25.6801 7.5532,5.9413 9.8586,17.5102 5.2983,26.587 z"
             id="path268-51-9-4-8-0" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 8944.7112,-569.1163 c -0.6238,-2.4641 -2.8305,-7.3746 -4.9036,-10.9122 -12.0538,-20.5682 -40.2236,-23.7137 -57.2145,-6.3887 -6.5963,6.726 -8.9106,11.7628 -9.7726,21.2693 -1.0799,11.9095 1.6162,19.8563 9.7596,28.7665 l 6.8521,7.4973 v 140.1624 140.1624 h 19.0919 19.0919 v -140.5464 -140.5464 l 4.6324,-3.5333 c 9.3505,-7.132 15.3644,-24.4703 12.4628,-35.9309 z m -16.7439,17.8871 c -3.654,7.2728 -10.5829,11.343 -19.2988,11.3366 -9.6719,-0.01 -15.7634,-3.8351 -19.4828,-12.2435 -9.4625,-21.3914 15.0426,-40.1856 33.4833,-25.6801 7.5532,5.9413 9.8586,17.5102 5.2983,26.587 z"
             id="path268-51-9-8-7-6-1" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 9001.5058,-484.5609 c 2.1727,-1.3193 7.1893,-3.2726 11.148,-4.3409 23.0168,-6.2108 45.3054,11.3006 45.2694,35.5667 -0.014,9.4208 -1.896,14.6345 -7.9479,22.0163 -7.9459,9.6922 -15.3456,13.2663 -28.1065,13.5754 l -10.7881,0.2613 -41.7133,42.4078 -41.7133,42.4077 -0.4265,133.2769 -0.4264,133.2769 -18.6023,-0.2647 c -10.2312,-0.1457 -18.7635,-0.5402 -18.9605,-0.8768 -0.1971,-0.3365 -0.1936,-63.7121 0.01,-140.8345 l 0.3659,-140.2226 48.1266,-48.9935 48.1266,-48.9934 -0.7594,-4.7968 c -1.6756,-10.5835 6.6313,-27.5344 16.4,-33.4659 z m -1.848,26.2872 c -2.3903,10.4299 5.5598,22.5701 16.4467,25.1147 20.8688,4.8779 35.5276,-21.0661 20.3423,-36.0028 -12.8715,-12.6607 -32.7397,-6.7804 -36.789,10.8881 z"
             id="path270-3-6-0-1-2-2-6-0" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 8986.9012,213.22501 c -0.6238,2.4641 -2.8305,7.3746 -4.9036,10.9122 -12.0538,20.5682 -40.2236,23.7137 -57.2145,6.3887 -6.5963,-6.726 -8.9106,-11.7628 -9.7726,-21.2693 -1.0799,-11.9095 1.6162,-19.8563 9.7596,-28.7665 l 6.8521,-7.4973 V 32.830407 -107.33199 h 19.0919 19.0919 V 33.214407 173.76081 l 4.6324,3.5333 c 9.3505,7.132 15.3644,24.4703 12.4628,35.9309 z m -16.7439,-17.8871 c -3.654,-7.2728 -10.5829,-11.343 -19.2988,-11.3366 -9.6719,0.01 -15.7634,3.8351 -19.4828,12.2435 -9.4625,21.3914 15.0426,40.1856 33.4833,25.6801 7.5532,-5.9413 9.8586,-17.5102 5.2983,-26.587 z"
             id="path268-51-92-5-8-1" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 8570.4639,-516.9676 c -1.2484,-2.21416 -3.0386,-7.29133 -3.9784,-11.28247 -5.4637,-23.20544 12.7589,-44.91646 37.0112,-44.09635 9.4153,0.31838 14.5655,2.36801 21.7479,8.65527 8.998,7.8765 12.5286,15.48933 12.7805,27.5576 l 0.2119,10.1546 96.696,101.46616 96.696,101.4661 -13.821,13.1713 -13.821,13.1712 -96.9609,-101.7441 -96.9609,-101.7442 -5.7911,0.638 c -11.6892,1.2878 -28.0042,-7.1148 -33.8102,-17.41311 z m 24.4612,1.39741 c 7.6626,2.7441 15.4866,0.9104 21.7918,-5.10717 6.9947,-6.67974 8.7656,-13.65124 5.6573,-22.3042 -7.9075,-22.01367 -38.6131,-18.71343 -41.9555,4.50934 -1.3691,9.51186 4.9432,19.47727 14.5064,22.90203 z"
             id="path268-51-9-4-1-5-4" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 8900.2025,355.23229 c -0.6238,2.4641 -2.8305,7.3746 -4.9036,10.9122 -12.0538,20.5682 -40.2236,23.7137 -57.2145,6.3887 -6.5963,-6.726 -8.9106,-11.7628 -9.7726,-21.2693 -1.0799,-11.9095 1.6162,-19.8563 9.7596,-28.7665 l 6.8521,-7.4973 V 174.83769 34.67529 h 19.0919 19.0919 v 140.5464 140.5464 l 4.6324,3.5333 c 9.3505,7.132 15.3644,24.4703 12.4628,35.9309 z m -16.7439,-17.8871 c -3.654,-7.2728 -10.5829,-11.343 -19.2988,-11.3366 -9.6719,0.01 -15.7634,3.8351 -19.4828,12.2435 -9.4625,21.3914 15.0426,40.1856 33.4833,25.6801 7.5532,-5.9413 9.8586,-17.5102 5.2983,-26.587 z"
             id="path268-51-9-8-7-9-6-4" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 8660.6529,263.18818 c -2.1727,1.3193 -7.1893,3.2726 -11.148,4.3409 -23.0168,6.2108 -45.3054,-11.3006 -45.2694,-35.5667 0.014,-9.4208 1.896,-14.6345 7.9479,-22.0163 7.9459,-9.6922 15.3456,-13.2663 28.1065,-13.5754 l 10.7881,-0.2613 41.7133,-42.4078 41.7133,-42.4077 0.4265,-133.2769 0.4264,-133.2769 18.6023,0.2647 c 10.2312,0.1457 18.7635,0.5402 18.9605,0.8768 0.1971,0.3365 0.1936,63.7121 -0.01,140.8345 l -0.3659,140.2226 -48.1266,48.9935 -48.1266,48.9934 0.7594,4.7968 c 1.6756,10.5835 -6.6313,27.5344 -16.4,33.4659 z m 1.848,-26.2872 c 2.3903,-10.4299 -5.5598,-22.5701 -16.4467,-25.1147 -20.8688,-4.8779 -35.5276,21.0661 -20.3423,36.0028 12.8715,12.6607 32.7397,6.7804 36.789,-10.8881 z"
             id="path270-3-6-0-1-5-7-8-9" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 9028.1455,-212.35612 c 2.4641,-0.6238 7.3746,-2.8305 10.9122,-4.9036 20.5682,-12.0538 23.7137,-40.2236 6.3887,-57.2145 -6.726,-6.5963 -11.7628,-8.9106 -21.2693,-9.7726 -11.9095,-1.0799 -19.8563,1.6162 -28.7665,9.7596 l -7.4973,6.8521 h -140.1624 -140.1624 v 19.0919 19.0919 h 140.5464 140.5464 l 3.5333,4.6324 c 7.132,9.3505 24.4703,15.3644 35.9309,12.4628 z m -17.8871,-16.7439 c -7.2728,-3.654 -11.343,-10.5829 -11.3366,-19.2988 0.01,-9.6719 3.8351,-15.7634 12.2435,-19.4828 21.3914,-9.4625 40.1856,15.0426 25.6801,33.4833 -5.9413,7.5532 -17.5102,9.8586 -26.587,5.2983 z"
             id="path268-51-9-4-1-6-5-3" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 9237.6846,17.34948 c 2.4641,-0.6238 7.3746,-2.8305 10.9122,-4.9036 20.5682,-12.0538 23.7137,-40.2236 6.3887,-57.2145 -6.726,-6.5963 -11.7628,-8.9106 -21.2693,-9.7726 -11.9095,-1.0799 -19.8563,1.6162 -28.7665,9.7596 l -7.4973,6.8521 H 9057.29 8917.1276 v 19.0919 19.0919 h 140.5464 140.5464 l 3.5333,4.6324 c 7.132,9.3505 24.4703,15.3644 35.9309,12.4628 z m -17.8871,-16.7439 c -7.2728,-3.654 -11.343,-10.5829 -11.3366,-19.2988 0.01,-9.6719 3.8351,-15.7634 12.2435,-19.4828 21.3914,-9.4625 40.1856,15.0426 25.6801,33.4833 -5.9413,7.5532 -17.5102,9.8586 -26.587,5.2983 z"
             id="path268-51-9-8-7-9-5-5-8" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 9241.807,-267.45492 c 1.3193,-2.1727 3.2726,-7.1893 4.3409,-11.148 6.2108,-23.0168 -11.3006,-45.3054 -35.5667,-45.2694 -9.4208,0.014 -14.6345,1.896 -22.0163,7.9479 -9.6922,7.9459 -13.2663,15.3456 -13.5754,28.1065 l -0.2613,10.7881 -42.4078,41.7133 -42.4077,41.7133 -133.2769,0.4265 -133.2769,0.4264 0.2647,18.6023 c 0.1457,10.2312 0.5402,18.7635 0.8768,18.9605 0.3365,0.1971 63.7121,0.1936 140.8345,-0.01 l 140.2226,-0.3659 48.9935,-48.1266 48.9934,-48.1266 4.7968,0.7594 c 10.5835,1.6756 27.5344,-6.6313 33.4659,-16.4 z m -26.2872,1.848 c -10.4299,2.3903 -22.5701,-5.5598 -25.1147,-16.4467 -4.8779,-20.8688 21.0661,-35.5276 36.0028,-20.3423 12.6607,12.8715 6.7804,32.7397 -10.8881,36.789 z"
             id="path270-3-6-0-1-5-7-0-5-5" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 9153.1292,74.14408 c 1.3193,2.1727 3.2726,7.1893 4.3409,11.148 6.2108,23.0168 -11.3006,45.3054 -35.5667,45.2694 -9.4208,-0.014 -14.6345,-1.896 -22.0163,-7.9479 -9.6922,-7.9459 -13.2663,-15.3456 -13.5754,-28.1065 l -0.2613,-10.7881 -42.4078,-41.7133 -42.4077,-41.7133 -133.2769,-0.4265 -133.2769,-0.4264 0.2647,-18.6023 c 0.1457,-10.2312 0.5402,-18.7635 0.8768,-18.9605 0.3365,-0.1971 63.7121,-0.1936 140.8345,0.01 l 140.2226,0.3659 48.9935,48.1266 48.9934,48.1266 4.7968,-0.7594 c 10.5835,-1.6756 27.5344,6.6313 33.4659,16.4 z m -26.2872,-1.848 c -10.4299,-2.3903 -22.5701,5.5598 -25.1147,16.4467 -4.8779,20.8688 21.0661,35.5276 36.0028,20.3423 12.6607,-12.8715 6.7804,-32.7397 -10.8881,-36.789 z"
             id="path270-3-6-0-1-2-2-1-9-4-4" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 8453.4282,-213.6687 c -2.4641,0.6238 -7.3746,2.8305 -10.9122,4.9036 -20.5682,12.0538 -23.7137,40.2236 -6.3887,57.2145 6.726,6.5963 11.7628,8.9106 21.2693,9.7726 11.9095,1.0799 19.8563,-1.6162 28.7665,-9.7596 l 7.4973,-6.8521 h 140.1624 140.1624 v -19.0919 -19.0919 h -140.5464 -140.5464 l -3.5333,-4.6324 c -7.132,-9.3505 -24.4703,-15.3644 -35.9309,-12.4628 z m 17.8871,16.7439 c 7.2728,3.654 11.343,10.5829 11.3366,19.2988 -0.01,9.6719 -3.8351,15.7634 -12.2435,19.4828 -21.3914,9.4625 -40.1856,-15.0426 -25.6801,-33.4833 5.9413,-7.5532 17.5102,-9.8586 26.587,-5.2983 z"
             id="path268-51-92-9-3-7" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 8571.8717,-61.3131 c -2.4641,0.6238 -7.3746,2.8305 -10.9122,4.9036 -20.5682,12.0538 -23.7137,40.2236 -6.3887,57.2145 6.726,6.5963 11.7628,8.9106 21.2693,9.7726 11.9095,1.0799 19.8563,-1.6162 28.7665,-9.7596 l 7.4973,-6.8521 h 140.1624 140.1624 V -25.126 -44.2179 h -140.5464 -140.5464 l -3.5333,-4.6324 c -7.132,-9.3505 -24.4703,-15.3644 -35.9309,-12.4628 z m 17.8871,16.7439 c 7.2728,3.654 11.343,10.5829 11.3366,19.2988 -0.01,9.6719 -3.8351,15.7634 -12.2435,19.4828 -21.3914,9.4625 -40.1856,-15.0426 -25.6801,-33.4833 5.9413,-7.5532 17.5102,-9.8586 26.587,-5.2983 z"
             id="path268-51-9-4-10-9-2" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 8362.3326,-291.0187 c -2.4641,0.6238 -7.3746,2.8305 -10.9122,4.9036 -20.5682,12.0538 -23.7137,40.2236 -6.3887,57.2145 6.726,6.5963 11.7628,8.9106 21.2693,9.7726 11.9095,1.0799 19.8563,-1.6162 28.7665,-9.7596 l 7.4973,-6.8521 h 140.1624 140.1624 v -19.0919 -19.0919 h -140.5464 -140.5464 l -3.5333,-4.6324 c -7.132,-9.3505 -24.4703,-15.3644 -35.9309,-12.4628 z m 17.8871,16.7439 c 7.2728,3.654 11.343,10.5829 11.3366,19.2988 -0.01,9.6719 -3.8351,15.7634 -12.2435,19.4828 -21.3914,9.4625 -40.1856,-15.0426 -25.6801,-33.4833 5.9413,-7.5532 17.5102,-9.8586 26.587,-5.2983 z"
             id="path268-51-9-8-7-7-4-8" /><path
             style="fill:#0853eb;fill-opacity:1;stroke-width:1.41421"
             d="m 8358.2102,-6.2143 c -1.3193,2.1727 -3.2726,7.1893 -4.3409,11.148 -6.2108,23.0168 11.3006,45.3054 35.5667,45.2694 9.4208,-0.014 14.6345,-1.896 22.0163,-7.9479 9.6922,-7.9459 13.2663,-15.3456 13.5754,-28.1065 l 0.2613,-10.7881 42.4078,-41.7133 42.4077,-41.7133 133.2769,-0.4265 133.2769,-0.4264 -0.2647,-18.6023 c -0.1457,-10.2312 -0.5402,-18.7635 -0.8768,-18.9605 -0.3365,-0.1971 -63.7121,-0.1936 -140.8345,0.01 l -140.2226,0.3659 -48.9935,48.1266 -48.9934,48.1266 -4.7968,-0.7594 c -10.5835,-1.6756 -27.5344,6.6313 -33.4659,16.4 z m 26.2872,-1.848 c 10.4299,-2.3903 22.5701,5.5598 25.1147,16.4467 4.8779,20.8688 -21.0661,35.5276 -36.0028,20.3423 -12.6607,-12.8715 -6.7804,-32.7397 10.8881,-36.789 z"
             id="path270-3-6-0-1-5-2-9-1" /><rect
             style="mix-blend-mode:normal;fill:#30ff10;fill-opacity:1;stroke-width:1.66773;filter:url(#filter275-9-6-5)"
             id="rect41-1-4-6-0"
             width="685.83972"
             height="676.04199"
             x="7207.8877"
             y="-3316.1125"
             ry="173.94908"
             rx="159.08235"
             transform="matrix(1.0558567,0,0,1.0359928,837.93016,2971.9538)" /></g></g><g
         id="g14304-2"
         transform="matrix(1.8723449,0,0,1.8723449,1470.6861,-114.02147)"><path
           id="rect12492-0"
           style="fill:#ffffff;fill-opacity:1;stroke-width:0.219509"
           d="m 259.3821,119.8392 a 26.27729,26.620037 0 0 0 -26.27747,26.61956 26.27729,26.620037 0 0 0 6.27766,17.23822 v 10.72338 h 39.99962 v -10.72338 a 26.27729,26.620037 0 0 0 6.27766,-17.23822 26.27729,26.620037 0 0 0 -26.27747,-26.61956 z" /><ellipse
           style="fill:#50d870;fill-opacity:1;stroke-width:0.470873"
           id="path14214-4"
           cx="259.58606"
           cy="146.03275"
           rx="22.953371"
           ry="23.272163" /><ellipse
           style="fill:#ffffff;fill-opacity:1;stroke-width:0.387737"
           id="path14214-9-4"
           cx="259.44989"
           cy="145.97275"
           rx="18.900827"
           ry="19.163334" /><ellipse
           style="fill:#39ae70;fill-opacity:1;stroke-width:0.077505"
           id="path14010-0-9"
           cx="259.11093"
           cy="132.28859"
           rx="5.8245358"
           ry="5.9557195" /><ellipse
           style="fill:#39a770;fill-opacity:1;stroke-width:0.077505"
           id="path14010-0-7-1"
           cx="246.8432"
           cy="151.09741"
           rx="5.8245358"
           ry="5.9557195" /><ellipse
           style="fill:#39a470;fill-opacity:1;stroke-width:0.077505"
           id="path14010-0-7-6-1"
           cx="271.02594"
           cy="153.06784"
           rx="5.8245358"
           ry="5.9557195" /><ellipse
           style="fill:#3939ff;fill-opacity:1;stroke-width:0.12879"
           id="path14010-8"
           cx="259.38211"
           cy="146.66431"
           rx="9.6786242"
           ry="9.8966122" /><rect
           style="fill:#50d870;fill-opacity:1;stroke-width:0.229059"
           id="rect14138-0"
           width="5.9259262"
           height="20"
           x="243.98532"
           y="162.31163" /><rect
           style="fill:#50d870;fill-opacity:1;stroke-width:0.23121"
           id="rect14138-7-3"
           width="6.0377355"
           height="20"
           x="269.20996"
           y="162.66989" /><rect
           style="fill:#ffffff;fill-opacity:1;stroke-width:0.356999"
           id="rect14292-8"
           width="19.241268"
           height="15.047045"
           x="249.97084"
           y="158.71873" /></g></g><g
       id="g1284"
       transform="matrix(0.30640799,0,0,0.31034609,107.6207,238.87768)"><g
         id="g5335"
         transform="translate(-128.1012)"><g
           id="g4589"><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 793.27455,39.293261 c -0.16504,-0.651959 -0.7489,-1.951196 -1.29741,-2.887186 -3.18923,-5.442003 -10.64249,-6.27425 -15.138,-1.690343 -1.74527,1.779587 -2.3576,3.11224 -2.58567,5.627502 -0.28572,3.151055 0.42762,5.253646 2.58223,7.611136 l 1.81295,1.983661 V 87.022665 124.1073 h 5.0514 5.0514 V 86.921065 49.734831 l 1.22566,-0.934852 c 2.47398,-1.887009 4.06516,-6.474434 3.29744,-9.506718 z m -4.43015,4.732629 c -0.96679,1.924262 -2.80006,3.001169 -5.10614,2.999475 -2.55903,-0.0026 -4.17074,-1.014703 -5.15483,-3.239426 -2.50362,-5.659808 3.98002,-10.63244 8.85913,-6.794526 1.99845,1.571969 2.60842,4.632907 1.40184,7.034477 z"
             id="path268-51-92-7-5" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 756.18817,70.9897 c -0.16504,-0.65196 -0.7489,-1.951196 -1.29741,-2.887186 -3.18923,-5.442003 -10.64249,-6.27425 -15.138,-1.690344 -1.74527,1.779588 -2.3576,3.112241 -2.58567,5.627503 -0.28572,3.151055 0.42762,5.253645 2.58223,7.611136 l 1.81295,1.98366 v 37.084631 37.08464 h 5.0514 5.0514 V 118.6175 81.431269 l 1.22565,-0.934852 c 2.47399,-1.887008 4.06517,-6.474433 3.29745,-9.506717 z m -4.43015,4.732629 c -0.96679,1.924261 -2.80006,3.001168 -5.10614,2.999475 -2.55903,-0.0026 -4.17074,-1.014704 -5.15483,-3.239426 -2.50362,-5.659808 3.98002,-10.63244 8.85912,-6.794526 1.99845,1.571968 2.60843,4.632907 1.40185,7.034477 z"
             id="path268-51-9-4-6-9" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 813.74008,15.190884 c -0.16505,-0.65196 -0.74891,-1.951196 -1.29742,-2.887186 -3.18923,-5.4420029 -10.64249,-6.2742497 -15.138,-1.690344 -1.74527,1.779588 -2.35759,3.112241 -2.58567,5.627503 -0.28572,3.151055 0.42762,5.253646 2.58223,7.611136 l 1.81295,1.983661 v 37.084634 37.084632 h 5.0514 5.0514 V 62.818688 25.632454 l 1.22566,-0.934853 c 2.47398,-1.887008 4.06516,-6.474433 3.29745,-9.506717 z m -4.43016,4.732629 c -0.96679,1.924261 -2.80006,3.001168 -5.10614,2.999475 -2.55903,-0.0026 -4.17074,-1.014703 -5.15483,-3.239426 -2.50362,-5.659808 3.98002,-10.6324398 8.85913,-6.794526 1.99845,1.571969 2.60842,4.632907 1.40184,7.034477 z"
             id="path268-51-9-8-7-0-0" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 828.76698,37.562833 c 0.57486,-0.349064 1.90217,-0.865875 2.94957,-1.148529 6.08987,-1.643274 11.98706,2.98995 11.97753,9.410356 -0.004,2.492586 -0.50165,3.872044 -2.10288,5.825146 -2.10235,2.564394 -4.06019,3.510041 -7.43651,3.591824 l -2.85435,0.06914 -11.03665,11.220397 -11.03664,11.22037 -0.11284,35.262843 -0.11282,35.26285 -4.92186,-0.07 c -2.70701,-0.0385 -4.96451,-0.14293 -5.01663,-0.23199 -0.0521,-0.089 -0.0512,-16.85716 0.003,-37.26246 l 0.0968,-37.100556 12.7335,-12.962863 12.7335,-12.962837 -0.20093,-1.269154 c -0.44333,-2.800217 1.75453,-7.285143 4.33917,-8.854519 z m -0.48895,6.955155 c -0.63243,2.759578 1.47103,5.971673 4.35152,6.644931 5.52154,1.290611 9.40001,-5.573739 5.38224,-9.52574 -3.40559,-3.349811 -8.66238,-1.793981 -9.73376,2.880809 z"
             id="path270-3-6-0-1-2-2-7-9" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 824.90285,222.18535 c -0.16505,0.65196 -0.74891,1.9512 -1.29741,2.88719 -3.18924,5.442 -10.6425,6.27425 -15.13801,1.69034 -1.74527,-1.77958 -2.35759,-3.11224 -2.58566,-5.6275 -0.28573,-3.15105 0.42761,-5.25365 2.58222,-7.61114 l 1.81295,-1.98366 v -37.08463 -37.08464 h 5.0514 5.0514 v 37.18624 37.18623 l 1.22566,0.93486 c 2.47398,1.887 4.06516,6.47443 3.29745,9.50671 z m -4.43016,-4.73263 c -0.96679,-1.92426 -2.80006,-3.00116 -5.10614,-2.99947 -2.55903,0.003 -4.17073,1.0147 -5.15483,3.23943 -2.50362,5.6598 3.98003,10.63244 8.85913,6.79452 1.99845,-1.57197 2.60842,-4.63291 1.40184,-7.03448 z"
             id="path268-51-92-5-4-6" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 719.73616,29.346824 c -0.33031,-0.58583 -0.80396,-1.929164 -1.05262,-2.985154 -1.4456,-6.139772 3.37579,-11.884146 9.79255,-11.667159 2.49113,0.08424 3.85379,0.626536 5.75413,2.29004 2.38072,2.083991 3.31486,4.098219 3.38151,7.291282 l 0.0561,2.686738 25.58415,26.846254 25.58415,26.846239 -3.65681,3.484906 -3.6568,3.48488 -25.65424,-26.919792 -25.65424,-26.91982 -1.53223,0.168805 c -3.09276,0.34073 -7.40944,-1.882458 -8.94561,-4.607219 z m 6.47202,0.369731 c 2.0274,0.726043 4.0975,0.240877 5.76575,-1.351272 1.85068,-1.767348 2.31923,-3.61189 1.49683,-5.901319 -2.09219,-5.82445 -10.21638,-4.951262 -11.10073,1.193096 -0.36224,2.51668 1.30789,5.153361 3.83815,6.059495 z"
             id="path268-51-9-4-1-7-0" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 799.27685,248.65196 c -0.16505,0.65196 -0.74891,1.9512 -1.29742,2.88719 -3.18923,5.442 -10.64249,6.27425 -15.138,1.69034 -1.74527,-1.77959 -2.35759,-3.11224 -2.58567,-5.6275 -0.28572,-3.15106 0.42762,-5.25365 2.58223,-7.61114 l 1.81295,-1.98366 v -37.08463 -37.08464 h 5.0514 5.0514 v 37.18624 37.18623 l 1.22566,0.93486 c 2.47398,1.887 4.06516,6.47443 3.29745,9.50671 z m -4.43016,-4.73263 c -0.96679,-1.92426 -2.80006,-3.00116 -5.10614,-2.99947 -2.55903,0.003 -4.17074,1.0147 -5.15483,3.23942 -2.50362,5.65981 3.98002,10.63244 8.85913,6.79453 1.99845,-1.57197 2.60842,-4.63291 1.40184,-7.03448 z"
             id="path268-51-9-8-7-9-52-6" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 738.58298,235.40478 c -0.57486,0.34906 -1.90216,0.86587 -2.94957,1.14852 -6.08986,1.64328 -11.98705,-2.98995 -11.97753,-9.41035 0.004,-2.49259 0.50165,-3.87205 2.10288,-5.82515 2.10236,-2.56439 4.06019,-3.51004 7.43651,-3.59182 l 2.85436,-0.0691 11.03664,-11.22039 11.03664,-11.22037 0.11285,-35.26285 0.11282,-35.26285 4.92185,0.07 c 2.70701,0.0386 4.96451,0.14293 5.01664,0.23199 0.0521,0.089 0.0512,16.85715 -0.003,37.26246 l -0.0968,37.10056 -12.7335,12.96286 -12.73349,12.96284 0.20092,1.26915 c 0.44334,2.80022 -1.75453,7.28515 -4.33916,8.85452 z m 0.48895,-6.95516 c 0.63244,-2.75958 -1.47103,-5.97167 -4.35152,-6.64493 -5.52154,-1.29061 -9.40001,5.57374 -5.38223,9.52574 3.40558,3.34981 8.66238,1.79398 9.73375,-2.88081 z"
             id="path270-3-6-0-1-5-7-4-6" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 835.8154,109.58368 c 0.65196,-0.16505 1.9512,-0.7489 2.88719,-1.29741 5.442,-3.18923 6.27425,-10.642494 1.69034,-15.138003 -1.77959,-1.745271 -3.11224,-2.357596 -5.6275,-2.585667 -3.15106,-0.285724 -5.25365,0.427619 -7.61114,2.582227 l -1.98366,1.812952 H 788.086 751.00136 v 5.051401 5.0514 h 37.18624 37.18623 l 0.93485,1.22565 c 1.88701,2.47399 6.47444,4.06517 9.50672,3.29745 z m -4.73263,-4.43016 c -1.92426,-0.96678 -3.00117,-2.80006 -2.99947,-5.10614 0.003,-2.55902 1.0147,-4.17073 3.23942,-5.154821 5.65981,-2.50362 10.63244,3.980021 6.79453,8.859121 -1.57197,1.99845 -4.63291,2.60842 -7.03448,1.40184 z"
             id="path268-51-9-4-1-6-1-5" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 891.25595,170.35995 c 0.65196,-0.16504 1.9512,-0.7489 2.88719,-1.29741 5.442,-3.18923 6.27425,-10.64249 1.69034,-15.138 -1.77958,-1.74527 -3.11224,-2.3576 -5.6275,-2.58567 -3.15105,-0.28572 -5.25365,0.42762 -7.61114,2.58223 l -1.98366,1.81295 h -37.08463 -37.08464 v 5.0514 5.0514 h 37.18624 37.18623 l 0.93486,1.22565 c 1.887,2.47399 6.47443,4.06517 9.50671,3.29745 z m -4.73263,-4.43015 c -1.92426,-0.96679 -3.00116,-2.80006 -2.99947,-5.10614 0.003,-2.55903 1.0147,-4.17074 3.23943,-5.15483 5.6598,-2.50362 10.63243,3.98002 6.79452,8.85912 -1.57197,1.99846 -4.63291,2.60843 -7.03448,1.40185 z"
             id="path268-51-9-8-7-9-5-2-2" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 892.34667,95.005457 c 0.34907,-0.574861 0.86588,-1.902169 1.14853,-2.949575 1.64328,-6.089862 -2.98995,-11.987054 -9.41035,-11.977529 -2.49259,0.0037 -3.87205,0.50165 -5.82515,2.102882 -2.5644,2.102353 -3.51004,4.06019 -3.59183,7.436511 l -0.0691,2.854352 -11.2204,11.036642 -11.22037,11.03665 -35.26284,0.11284 -35.26285,0.11282 0.07,4.92186 c 0.0385,2.707 0.14293,4.96451 0.23199,5.01663 0.089,0.0521 16.85716,0.0512 37.26246,-0.003 l 37.10056,-0.0968 12.96287,-12.73349 12.96284,-12.7335 1.26915,0.200925 c 2.80022,0.443336 7.28514,-1.754532 8.85452,-4.339167 z m -6.95515,0.48895 c -2.75958,0.632433 -5.97168,-1.471031 -6.64493,-4.351523 -1.29062,-5.521537 5.57373,-9.400011 9.52574,-5.382233 3.34981,3.405584 1.79398,8.662378 -2.88081,9.733756 z"
             id="path270-3-6-0-1-5-7-0-4-6" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 868.884,185.38686 c 0.34907,0.57486 0.86588,1.90217 1.14853,2.94957 1.64328,6.08986 -2.98995,11.98706 -9.41035,11.97753 -2.49259,-0.004 -3.87205,-0.50165 -5.82515,-2.10288 -2.56439,-2.10235 -3.51004,-4.06019 -3.59182,-7.43651 l -0.0691,-2.85435 -11.2204,-11.03665 -11.22037,-11.03664 -35.26284,-0.11285 -35.26285,-0.11281 0.07,-4.92186 c 0.0385,-2.70701 0.14293,-4.96451 0.23198,-5.01663 0.089,-0.0522 16.85716,-0.0512 37.26246,0.003 l 37.10057,0.0968 12.96286,12.7335 12.96284,12.73349 1.26915,-0.20092 c 2.80022,-0.44334 7.28514,1.75453 8.85452,4.33917 z m -6.95515,-0.48895 c -2.75958,-0.63244 -5.97167,1.47103 -6.64493,4.35152 -1.29061,5.52154 5.57374,9.40001 9.52574,5.38223 3.34981,-3.40558 1.79398,-8.66238 -2.88081,-9.73375 z"
             id="path270-3-6-0-1-2-2-1-9-3-8" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 683.75478,109.23639 c -0.65196,0.16505 -1.95119,0.74891 -2.88718,1.29741 -5.44201,3.18924 -6.27425,10.6425 -1.69035,15.13801 1.77959,1.74527 3.11224,2.35759 5.62751,2.58566 3.15105,0.28573 5.25364,-0.42761 7.61113,-2.58222 l 1.98366,-1.81295 h 37.08464 37.08463 v -5.0514 -5.0514 h -37.18623 -37.18624 l -0.93485,-1.22566 c -1.88701,-2.47398 -6.47443,-4.06516 -9.50672,-3.29745 z m 4.73263,4.43016 c 1.92426,0.96679 3.00117,2.80006 2.99948,5.10614 -0.003,2.55902 -1.01471,4.17073 -3.23943,5.15483 -5.65981,2.50362 -10.63244,-3.98003 -6.79453,-8.85913 1.57197,-1.99845 4.63291,-2.60842 7.03448,-1.40184 z"
             id="path268-51-92-9-4-3" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 715.09296,149.54715 c -0.65196,0.16504 -1.9512,0.7489 -2.88719,1.29741 -5.442,3.18923 -6.27425,10.64249 -1.69034,15.138 1.77959,1.74527 3.11224,2.3576 5.6275,2.58567 3.15106,0.28572 5.25365,-0.42762 7.61114,-2.58223 l 1.98366,-1.81295 h 37.08463 37.08464 v -5.0514 -5.0514 h -37.18624 -37.18623 l -0.93485,-1.22566 c -1.88701,-2.47398 -6.47444,-4.06516 -9.50672,-3.29744 z m 4.73263,4.43015 c 1.92426,0.96679 3.00117,2.80006 2.99947,5.10614 -0.003,2.55903 -1.0147,4.17074 -3.23942,5.15483 -5.65981,2.50362 -10.63244,-3.98002 -6.79453,-8.85913 1.57197,-1.99845 4.63291,-2.60842 7.03448,-1.40184 z"
             id="path268-51-9-4-10-1-5" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 658.93588,88.770873 c -0.65196,0.165047 -1.9512,0.748903 -2.88719,1.297411 -5.442,3.189235 -6.27425,10.642496 -1.69034,15.138006 1.77958,1.74527 3.11224,2.35759 5.6275,2.58566 3.15105,0.28573 5.25364,-0.42762 7.61113,-2.58222 l 1.98367,-1.81295 h 37.08463 37.08463 v -5.051403 -5.051399 h -37.18623 -37.18623 l -0.93486,-1.225656 c -1.88701,-2.473986 -6.47443,-4.065164 -9.50671,-3.297449 z m 4.73262,4.430157 c 1.92427,0.966788 3.00117,2.800059 2.99948,5.106141 -0.003,2.559019 -1.0147,4.170729 -3.23943,5.154819 -5.6598,2.50362 -10.63244,-3.980016 -6.79452,-8.859118 1.57197,-1.998451 4.6329,-2.608421 7.03447,-1.401842 z"
             id="path268-51-9-8-7-7-8-2" /><path
             style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
             d="m 658.56169,164.12537 c -0.34907,0.57486 -0.86588,1.90217 -1.14853,2.94957 -1.64328,6.08987 2.98995,11.98706 9.41035,11.97753 2.49259,-0.004 3.87205,-0.50165 5.82515,-2.10288 2.56439,-2.10235 3.51004,-4.06019 3.59182,-7.43651 l 0.0691,-2.85435 11.2204,-11.03665 11.22037,-11.03664 35.26284,-0.11284 35.26285,-0.11282 -0.07,-4.92186 c -0.0385,-2.70701 -0.14292,-4.96451 -0.23198,-5.01663 -0.089,-0.0522 -16.85716,-0.0512 -37.26246,0.003 l -37.10057,0.0968 -12.96286,12.7335 -12.96284,12.7335 -1.26915,-0.20093 c -2.80022,-0.44333 -7.28514,1.75453 -8.85452,4.33917 z m 6.95515,-0.48895 c 2.75958,-0.63243 5.97167,1.47103 6.64493,4.35152 1.29061,5.52154 -5.57374,9.40001 -9.52574,5.38224 -3.34981,-3.40559 -1.79398,-8.66238 2.88081,-9.73376 z"
             id="path270-3-6-0-1-5-2-3-5" /></g><rect
           style="mix-blend-mode:normal;fill:#18ff00;fill-opacity:1;fill-rule:nonzero;stroke-width:1.66773;filter:url(#filter275-9-9-8)"
           id="rect41-1-4-2-3"
           width="685.83972"
           height="676.04199"
           x="7207.8877"
           y="-3316.1125"
           ry="173.94908"
           rx="159.08235"
           transform="matrix(0.27936208,0,0,0.27410642,-1329.746,944.93374)" /></g><g
         id="g11401-4"
         transform="matrix(0.2121548,0,0,0.19641514,565.76416,50.704679)"
         style="fill:#ffffff;fill-opacity:1"><g
           clip-path="url(#484e6af075-2)"
           id="g11378-8"
           style="fill:#ffffff;fill-opacity:1"><path
             fill="#0753eb"
             d="m 701.5625,0 c 10.05469,50.335938 -15.11719,102.25781 -51.36328,138.50781 -36.25,36.32813 -82.63281,60.39063 -126.875,86.26953 -44.32031,25.88282 -88.56641,55.40235 -116.34375,98.53907 -24.22266,37.51562 -34.11328,82.47265 -39.17969,126.79296 -6.33203,53.82032 -5.46094,110.25391 11.63281,160.90625 12.42969,-30.55078 28.65235,-59.7539 47.09375,-87.0625 36.25,-53.73828 80.89063,-101.14843 125.28907,-148.32031 C 603.73828,320.54687 655.57812,265.53906 707.5,210.45312 653.75781,311.12891 570.49609,392.33203 500.13672,482.16406 429.77344,572.07422 369.78125,679.39844 376.34766,793.37109 381.57422,735.03906 428.90234,688.73828 480.26953,660.5625 531.63672,632.38672 589.17578,616.63672 639.75,587.19141 735.4375,531.47266 799.78516,425.25781 804.77344,314.60937 809.83594,202.69531 758.78906,96.242188 701.5625,0 Z m 0,0"
             fill-opacity="1"
             fill-rule="nonzero"
             id="path11376-8"
             style="fill:#ffffff;fill-opacity:1" /></g><g
           clip-path="url(#72fe526092-5)"
           id="g11384-0"
           style="fill:#ffffff;fill-opacity:1"><g
             clip-path="url(#f0aa310c86-6)"
             id="g11382-2"
             style="fill:#ffffff;fill-opacity:1"><path
               fill="#0753eb"
               d="M 339.78125,48.28125 V 649.40234 H 0.164062 V 48.28125 Z m 0,0"
               fill-opacity="1"
               fill-rule="nonzero"
               id="path11380-4"
               style="fill:#ffffff;fill-opacity:1" /></g></g></g></g><path
       fill="#231f20"
       d="m 149.92198,166.06845 -16.31594,-5.27432 14.37484,-44.05592 -36.56627,51.69173 15.68631,3.75219 -17.6274,42.58646 z m 0,0"
       fill-opacity="1"
       fill-rule="nonzero"
       id="path726"
       clip-path="url(#clipPath738)"
       style="fill:url(#linearGradient1312);fill-opacity:1;stroke-width:0.121467" /><g
       id="g11578"
       inkscape:export-filename=".\Name Logo.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96"
       transform="matrix(0.66500771,0,0,0.66500771,39.870353,94.645691)"><g
         id="g1284-5"
         transform="matrix(0.14492191,0,0,0.14492191,68.516962,236.35239)"><g
           id="g5335-6"
           transform="translate(-128.1012)"><g
             id="g4589-5"><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 793.27455,39.293261 c -0.16504,-0.651959 -0.7489,-1.951196 -1.29741,-2.887186 -3.18923,-5.442003 -10.64249,-6.27425 -15.138,-1.690343 -1.74527,1.779587 -2.3576,3.11224 -2.58567,5.627502 -0.28572,3.151055 0.42762,5.253646 2.58223,7.611136 l 1.81295,1.983661 V 87.022665 124.1073 h 5.0514 5.0514 V 86.921065 49.734831 l 1.22566,-0.934852 c 2.47398,-1.887009 4.06516,-6.474434 3.29744,-9.506718 z m -4.43015,4.732629 c -0.96679,1.924262 -2.80006,3.001169 -5.10614,2.999475 -2.55903,-0.0026 -4.17074,-1.014703 -5.15483,-3.239426 -2.50362,-5.659808 3.98002,-10.63244 8.85913,-6.794526 1.99845,1.571969 2.60842,4.632907 1.40184,7.034477 z"
               id="path268-51-92-7-5-6" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 756.18817,70.9897 c -0.16504,-0.65196 -0.7489,-1.951196 -1.29741,-2.887186 -3.18923,-5.442003 -10.64249,-6.27425 -15.138,-1.690344 -1.74527,1.779588 -2.3576,3.112241 -2.58567,5.627503 -0.28572,3.151055 0.42762,5.253645 2.58223,7.611136 l 1.81295,1.98366 v 37.084631 37.08464 h 5.0514 5.0514 V 118.6175 81.431269 l 1.22565,-0.934852 c 2.47399,-1.887008 4.06517,-6.474433 3.29745,-9.506717 z m -4.43015,4.732629 c -0.96679,1.924261 -2.80006,3.001168 -5.10614,2.999475 -2.55903,-0.0026 -4.17074,-1.014704 -5.15483,-3.239426 -2.50362,-5.659808 3.98002,-10.63244 8.85912,-6.794526 1.99845,1.571968 2.60843,4.632907 1.40185,7.034477 z"
               id="path268-51-9-4-6-9-3" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 813.74008,15.190884 c -0.16505,-0.65196 -0.74891,-1.951196 -1.29742,-2.887186 -3.18923,-5.4420029 -10.64249,-6.2742497 -15.138,-1.690344 -1.74527,1.779588 -2.35759,3.112241 -2.58567,5.627503 -0.28572,3.151055 0.42762,5.253646 2.58223,7.611136 l 1.81295,1.983661 v 37.084634 37.084632 h 5.0514 5.0514 V 62.818688 25.632454 l 1.22566,-0.934853 c 2.47398,-1.887008 4.06516,-6.474433 3.29745,-9.506717 z m -4.43016,4.732629 c -0.96679,1.924261 -2.80006,3.001168 -5.10614,2.999475 -2.55903,-0.0026 -4.17074,-1.014703 -5.15483,-3.239426 -2.50362,-5.659808 3.98002,-10.6324398 8.85913,-6.794526 1.99845,1.571969 2.60842,4.632907 1.40184,7.034477 z"
               id="path268-51-9-8-7-0-0-4" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 828.76698,37.562833 c 0.57486,-0.349064 1.90217,-0.865875 2.94957,-1.148529 6.08987,-1.643274 11.98706,2.98995 11.97753,9.410356 -0.004,2.492586 -0.50165,3.872044 -2.10288,5.825146 -2.10235,2.564394 -4.06019,3.510041 -7.43651,3.591824 l -2.85435,0.06914 -11.03665,11.220397 -11.03664,11.22037 -0.11284,35.262843 -0.11282,35.26285 -4.92186,-0.07 c -2.70701,-0.0385 -4.96451,-0.14293 -5.01663,-0.23199 -0.0521,-0.089 -0.0512,-16.85716 0.003,-37.26246 l 0.0968,-37.100556 12.7335,-12.962863 12.7335,-12.962837 -0.20093,-1.269154 c -0.44333,-2.800217 1.75453,-7.285143 4.33917,-8.854519 z m -0.48895,6.955155 c -0.63243,2.759578 1.47103,5.971673 4.35152,6.644931 5.52154,1.290611 9.40001,-5.573739 5.38224,-9.52574 -3.40559,-3.349811 -8.66238,-1.793981 -9.73376,2.880809 z"
               id="path270-3-6-0-1-2-2-7-9-3" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 824.90285,222.18535 c -0.16505,0.65196 -0.74891,1.9512 -1.29741,2.88719 -3.18924,5.442 -10.6425,6.27425 -15.13801,1.69034 -1.74527,-1.77958 -2.35759,-3.11224 -2.58566,-5.6275 -0.28573,-3.15105 0.42761,-5.25365 2.58222,-7.61114 l 1.81295,-1.98366 v -37.08463 -37.08464 h 5.0514 5.0514 v 37.18624 37.18623 l 1.22566,0.93486 c 2.47398,1.887 4.06516,6.47443 3.29745,9.50671 z m -4.43016,-4.73263 c -0.96679,-1.92426 -2.80006,-3.00116 -5.10614,-2.99947 -2.55903,0.003 -4.17073,1.0147 -5.15483,3.23943 -2.50362,5.6598 3.98003,10.63244 8.85913,6.79452 1.99845,-1.57197 2.60842,-4.63291 1.40184,-7.03448 z"
               id="path268-51-92-5-4-6-2" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 719.73616,29.346824 c -0.33031,-0.58583 -0.80396,-1.929164 -1.05262,-2.985154 -1.4456,-6.139772 3.37579,-11.884146 9.79255,-11.667159 2.49113,0.08424 3.85379,0.626536 5.75413,2.29004 2.38072,2.083991 3.31486,4.098219 3.38151,7.291282 l 0.0561,2.686738 25.58415,26.846254 25.58415,26.846239 -3.65681,3.484906 -3.6568,3.48488 -25.65424,-26.919792 -25.65424,-26.91982 -1.53223,0.168805 c -3.09276,0.34073 -7.40944,-1.882458 -8.94561,-4.607219 z m 6.47202,0.369731 c 2.0274,0.726043 4.0975,0.240877 5.76575,-1.351272 1.85068,-1.767348 2.31923,-3.61189 1.49683,-5.901319 -2.09219,-5.82445 -10.21638,-4.951262 -11.10073,1.193096 -0.36224,2.51668 1.30789,5.153361 3.83815,6.059495 z"
               id="path268-51-9-4-1-7-0-8" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 799.27685,248.65196 c -0.16505,0.65196 -0.74891,1.9512 -1.29742,2.88719 -3.18923,5.442 -10.64249,6.27425 -15.138,1.69034 -1.74527,-1.77959 -2.35759,-3.11224 -2.58567,-5.6275 -0.28572,-3.15106 0.42762,-5.25365 2.58223,-7.61114 l 1.81295,-1.98366 v -37.08463 -37.08464 h 5.0514 5.0514 v 37.18624 37.18623 l 1.22566,0.93486 c 2.47398,1.887 4.06516,6.47443 3.29745,9.50671 z m -4.43016,-4.73263 c -0.96679,-1.92426 -2.80006,-3.00116 -5.10614,-2.99947 -2.55903,0.003 -4.17074,1.0147 -5.15483,3.23942 -2.50362,5.65981 3.98002,10.63244 8.85913,6.79453 1.99845,-1.57197 2.60842,-4.63291 1.40184,-7.03448 z"
               id="path268-51-9-8-7-9-52-6-0" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 738.58298,235.40478 c -0.57486,0.34906 -1.90216,0.86587 -2.94957,1.14852 -6.08986,1.64328 -11.98705,-2.98995 -11.97753,-9.41035 0.004,-2.49259 0.50165,-3.87205 2.10288,-5.82515 2.10236,-2.56439 4.06019,-3.51004 7.43651,-3.59182 l 2.85436,-0.0691 11.03664,-11.22039 11.03664,-11.22037 0.11285,-35.26285 0.11282,-35.26285 4.92185,0.07 c 2.70701,0.0386 4.96451,0.14293 5.01664,0.23199 0.0521,0.089 0.0512,16.85715 -0.003,37.26246 l -0.0968,37.10056 -12.7335,12.96286 -12.73349,12.96284 0.20092,1.26915 c 0.44334,2.80022 -1.75453,7.28515 -4.33916,8.85452 z m 0.48895,-6.95516 c 0.63244,-2.75958 -1.47103,-5.97167 -4.35152,-6.64493 -5.52154,-1.29061 -9.40001,5.57374 -5.38223,9.52574 3.40558,3.34981 8.66238,1.79398 9.73375,-2.88081 z"
               id="path270-3-6-0-1-5-7-4-6-5" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 835.8154,109.58368 c 0.65196,-0.16505 1.9512,-0.7489 2.88719,-1.29741 5.442,-3.18923 6.27425,-10.642494 1.69034,-15.138003 -1.77959,-1.745271 -3.11224,-2.357596 -5.6275,-2.585667 -3.15106,-0.285724 -5.25365,0.427619 -7.61114,2.582227 l -1.98366,1.812952 H 788.086 751.00136 v 5.051401 5.0514 h 37.18624 37.18623 l 0.93485,1.22565 c 1.88701,2.47399 6.47444,4.06517 9.50672,3.29745 z m -4.73263,-4.43016 c -1.92426,-0.96678 -3.00117,-2.80006 -2.99947,-5.10614 0.003,-2.55902 1.0147,-4.17073 3.23942,-5.154821 5.65981,-2.50362 10.63244,3.980021 6.79453,8.859121 -1.57197,1.99845 -4.63291,2.60842 -7.03448,1.40184 z"
               id="path268-51-9-4-1-6-1-5-2" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 891.25595,170.35995 c 0.65196,-0.16504 1.9512,-0.7489 2.88719,-1.29741 5.442,-3.18923 6.27425,-10.64249 1.69034,-15.138 -1.77958,-1.74527 -3.11224,-2.3576 -5.6275,-2.58567 -3.15105,-0.28572 -5.25365,0.42762 -7.61114,2.58223 l -1.98366,1.81295 h -37.08463 -37.08464 v 5.0514 5.0514 h 37.18624 37.18623 l 0.93486,1.22565 c 1.887,2.47399 6.47443,4.06517 9.50671,3.29745 z m -4.73263,-4.43015 c -1.92426,-0.96679 -3.00116,-2.80006 -2.99947,-5.10614 0.003,-2.55903 1.0147,-4.17074 3.23943,-5.15483 5.6598,-2.50362 10.63243,3.98002 6.79452,8.85912 -1.57197,1.99846 -4.63291,2.60843 -7.03448,1.40185 z"
               id="path268-51-9-8-7-9-5-2-2-4" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 892.34667,95.005457 c 0.34907,-0.574861 0.86588,-1.902169 1.14853,-2.949575 1.64328,-6.089862 -2.98995,-11.987054 -9.41035,-11.977529 -2.49259,0.0037 -3.87205,0.50165 -5.82515,2.102882 -2.5644,2.102353 -3.51004,4.06019 -3.59183,7.436511 l -0.0691,2.854352 -11.2204,11.036642 -11.22037,11.03665 -35.26284,0.11284 -35.26285,0.11282 0.07,4.92186 c 0.0385,2.707 0.14293,4.96451 0.23199,5.01663 0.089,0.0521 16.85716,0.0512 37.26246,-0.003 l 37.10056,-0.0968 12.96287,-12.73349 12.96284,-12.7335 1.26915,0.200925 c 2.80022,0.443336 7.28514,-1.754532 8.85452,-4.339167 z m -6.95515,0.48895 c -2.75958,0.632433 -5.97168,-1.471031 -6.64493,-4.351523 -1.29062,-5.521537 5.57373,-9.400011 9.52574,-5.382233 3.34981,3.405584 1.79398,8.662378 -2.88081,9.733756 z"
               id="path270-3-6-0-1-5-7-0-4-6-2" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 868.884,185.38686 c 0.34907,0.57486 0.86588,1.90217 1.14853,2.94957 1.64328,6.08986 -2.98995,11.98706 -9.41035,11.97753 -2.49259,-0.004 -3.87205,-0.50165 -5.82515,-2.10288 -2.56439,-2.10235 -3.51004,-4.06019 -3.59182,-7.43651 l -0.0691,-2.85435 -11.2204,-11.03665 -11.22037,-11.03664 -35.26284,-0.11285 -35.26285,-0.11281 0.07,-4.92186 c 0.0385,-2.70701 0.14293,-4.96451 0.23198,-5.01663 0.089,-0.0522 16.85716,-0.0512 37.26246,0.003 l 37.10057,0.0968 12.96286,12.7335 12.96284,12.73349 1.26915,-0.20092 c 2.80022,-0.44334 7.28514,1.75453 8.85452,4.33917 z m -6.95515,-0.48895 c -2.75958,-0.63244 -5.97167,1.47103 -6.64493,4.35152 -1.29061,5.52154 5.57374,9.40001 9.52574,5.38223 3.34981,-3.40558 1.79398,-8.66238 -2.88081,-9.73375 z"
               id="path270-3-6-0-1-2-2-1-9-3-8-9" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 683.75478,109.23639 c -0.65196,0.16505 -1.95119,0.74891 -2.88718,1.29741 -5.44201,3.18924 -6.27425,10.6425 -1.69035,15.13801 1.77959,1.74527 3.11224,2.35759 5.62751,2.58566 3.15105,0.28573 5.25364,-0.42761 7.61113,-2.58222 l 1.98366,-1.81295 h 37.08464 37.08463 v -5.0514 -5.0514 h -37.18623 -37.18624 l -0.93485,-1.22566 c -1.88701,-2.47398 -6.47443,-4.06516 -9.50672,-3.29745 z m 4.73263,4.43016 c 1.92426,0.96679 3.00117,2.80006 2.99948,5.10614 -0.003,2.55902 -1.01471,4.17073 -3.23943,5.15483 -5.65981,2.50362 -10.63244,-3.98003 -6.79453,-8.85913 1.57197,-1.99845 4.63291,-2.60842 7.03448,-1.40184 z"
               id="path268-51-92-9-4-3-9" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 715.09296,149.54715 c -0.65196,0.16504 -1.9512,0.7489 -2.88719,1.29741 -5.442,3.18923 -6.27425,10.64249 -1.69034,15.138 1.77959,1.74527 3.11224,2.3576 5.6275,2.58567 3.15106,0.28572 5.25365,-0.42762 7.61114,-2.58223 l 1.98366,-1.81295 h 37.08463 37.08464 v -5.0514 -5.0514 h -37.18624 -37.18623 l -0.93485,-1.22566 c -1.88701,-2.47398 -6.47444,-4.06516 -9.50672,-3.29744 z m 4.73263,4.43015 c 1.92426,0.96679 3.00117,2.80006 2.99947,5.10614 -0.003,2.55903 -1.0147,4.17074 -3.23942,5.15483 -5.65981,2.50362 -10.63244,-3.98002 -6.79453,-8.85913 1.57197,-1.99845 4.63291,-2.60842 7.03448,-1.40184 z"
               id="path268-51-9-4-10-1-5-2" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 658.93588,88.770873 c -0.65196,0.165047 -1.9512,0.748903 -2.88719,1.297411 -5.442,3.189235 -6.27425,10.642496 -1.69034,15.138006 1.77958,1.74527 3.11224,2.35759 5.6275,2.58566 3.15105,0.28573 5.25364,-0.42762 7.61113,-2.58222 l 1.98367,-1.81295 h 37.08463 37.08463 v -5.051403 -5.051399 h -37.18623 -37.18623 l -0.93486,-1.225656 c -1.88701,-2.473986 -6.47443,-4.065164 -9.50671,-3.297449 z m 4.73262,4.430157 c 1.92427,0.966788 3.00117,2.800059 2.99948,5.106141 -0.003,2.559019 -1.0147,4.170729 -3.23943,5.154819 -5.6598,2.50362 -10.63244,-3.980016 -6.79452,-8.859118 1.57197,-1.998451 4.6329,-2.608421 7.03447,-1.401842 z"
               id="path268-51-9-8-7-7-8-2-4" /><path
               style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
               d="m 658.56169,164.12537 c -0.34907,0.57486 -0.86588,1.90217 -1.14853,2.94957 -1.64328,6.08987 2.98995,11.98706 9.41035,11.97753 2.49259,-0.004 3.87205,-0.50165 5.82515,-2.10288 2.56439,-2.10235 3.51004,-4.06019 3.59182,-7.43651 l 0.0691,-2.85435 11.2204,-11.03665 11.22037,-11.03664 35.26284,-0.11284 35.26285,-0.11282 -0.07,-4.92186 c -0.0385,-2.70701 -0.14292,-4.96451 -0.23198,-5.01663 -0.089,-0.0522 -16.85716,-0.0512 -37.26246,0.003 l -37.10057,0.0968 -12.96286,12.7335 -12.96284,12.7335 -1.26915,-0.20093 c -2.80022,-0.44333 -7.28514,1.75453 -8.85452,4.33917 z m 6.95515,-0.48895 c 2.75958,-0.63243 5.97167,1.47103 6.64493,4.35152 1.29061,5.52154 -5.57374,9.40001 -9.52574,5.38224 -3.34981,-3.40559 -1.79398,-8.66238 2.88081,-9.73376 z"
               id="path270-3-6-0-1-5-2-3-5-7" /></g><rect
             style="mix-blend-mode:normal;fill:#18ff00;fill-opacity:1;fill-rule:nonzero;stroke-width:1.66773;filter:url(#filter275-9-9-8-8)"
             id="rect41-1-4-2-3-7"
             width="685.83972"
             height="676.04199"
             x="7207.8877"
             y="-3316.1125"
             ry="173.94908"
             rx="159.08235"
             transform="matrix(0.27936208,0,0,0.27410642,-1329.746,944.93374)" /></g><g
           id="g11401-4-7"
           transform="matrix(0.2121548,0,0,0.19641514,565.76416,50.704679)"
           style="fill:#ffffff;fill-opacity:1"><g
             clip-path="url(#484e6af075-2-4)"
             id="g11378-8-4"
             style="fill:#ffffff;fill-opacity:1"><path
               fill="#0753eb"
               d="m 701.5625,0 c 10.05469,50.335938 -15.11719,102.25781 -51.36328,138.50781 -36.25,36.32813 -82.63281,60.39063 -126.875,86.26953 -44.32031,25.88282 -88.56641,55.40235 -116.34375,98.53907 -24.22266,37.51562 -34.11328,82.47265 -39.17969,126.79296 -6.33203,53.82032 -5.46094,110.25391 11.63281,160.90625 12.42969,-30.55078 28.65235,-59.7539 47.09375,-87.0625 36.25,-53.73828 80.89063,-101.14843 125.28907,-148.32031 C 603.73828,320.54687 655.57812,265.53906 707.5,210.45312 653.75781,311.12891 570.49609,392.33203 500.13672,482.16406 429.77344,572.07422 369.78125,679.39844 376.34766,793.37109 381.57422,735.03906 428.90234,688.73828 480.26953,660.5625 531.63672,632.38672 589.17578,616.63672 639.75,587.19141 735.4375,531.47266 799.78516,425.25781 804.77344,314.60937 809.83594,202.69531 758.78906,96.242188 701.5625,0 Z m 0,0"
               fill-opacity="1"
               fill-rule="nonzero"
               id="path11376-8-9"
               style="fill:#ffffff;fill-opacity:1" /></g><g
             clip-path="url(#72fe526092-5-8)"
             id="g11384-0-1"
             style="fill:#ffffff;fill-opacity:1"><g
               clip-path="url(#f0aa310c86-6-5)"
               id="g11382-2-5"
               style="fill:#ffffff;fill-opacity:1"><path
                 fill="#0753eb"
                 d="M 339.78125,48.28125 V 649.40234 H 0.164062 V 48.28125 Z m 0,0"
                 fill-opacity="1"
                 fill-rule="nonzero"
                 id="path11380-4-1"
                 style="fill:#ffffff;fill-opacity:1" /></g></g></g></g><g
         fill="#0753eb"
         fill-opacity="0.4"
         id="g3312"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(73.879601,75.826451)"
           id="g3310"><g
             id="g3308"><path
               d="m 26.296875,-27.71875 h 10.4375 l -5.28125,25.078125 c -0.386719,1.9375 -1.03125,3.71875 -1.9375,5.34375 -0.898437,1.632813 -2.152344,3.050781 -3.765625,4.25 -1.617188,1.207031 -3.636719,2.15625 -6.0625,2.84375 -2.429688,0.6875 -5.382812,1.03125 -8.859375,1.03125 -0.648437,0 -1.421875,-0.01172 -2.328125,-0.03125 -0.898438,-0.02344 -1.820312,-0.04297 -2.765625,-0.0625 -0.949219,-0.02344 -1.855469,-0.05469 -2.71875,-0.09375 C 2.160156,10.597656 1.476562,10.550781 0.96875,10.5 L 2.1875,5.859375 C 3.5625,6.078125 4.96875,6.195312 6.40625,6.21875 7.851562,6.238281 9.09375,6.25 10.125,6.25 c 1.28125,0 2.363281,-0.121094 3.25,-0.359375 0.882812,-0.230469 1.613281,-0.605469 2.1875,-1.125 0.582031,-0.511719 1.054688,-1.199219 1.421875,-2.0625 0.363281,-0.855469 0.65625,-1.90625 0.875,-3.15625 l 0.765625,-4.1875 h -0.453125 c -0.25,0.386719 -0.625,0.851563 -1.125,1.390625 -0.492187,0.53125 -1.125,1.046875 -1.90625,1.546875 -0.773437,0.492187 -1.683594,0.898437 -2.734375,1.21875 C 11.351562,-0.160156 10.160156,0 8.828125,0 7.328125,0 6.050781,-0.222656 5,-0.671875 3.945312,-1.128906 3.097656,-1.753906 2.453125,-2.546875 1.804688,-3.335938 1.332031,-4.28125 1.03125,-5.375 0.726562,-6.476562 0.578125,-7.671875 0.578125,-8.953125 c 0,-0.5625 0.039063,-1.421875 0.125,-2.578125 0.09375,-1.164062 0.300781,-2.476562 0.625,-3.9375 0.320313,-1.457031 0.789063,-2.945312 1.40625,-4.46875 0.625,-1.53125 1.460937,-2.914062 2.515625,-4.15625 1.050781,-1.25 2.359375,-2.28125 3.921875,-3.09375 1.570313,-0.820312 3.476563,-1.234375 5.71875,-1.234375 0.6875,0 1.4375,0.07031 2.25,0.203125 0.820313,0.125 1.617187,0.359375 2.390625,0.703125 0.769531,0.34375 1.457031,0.839844 2.0625,1.484375 0.601562,0.636719 1.078125,1.46875 1.421875,2.5 h 0.375 z m -7.21875,5.609375 c -1.03125,0 -1.890625,0.546875 -2.578125,1.640625 -0.6875,1.09375 -1.246094,2.375 -1.671875,3.84375 -0.429687,1.460938 -0.742187,2.90625 -0.9375,4.34375 -0.199219,1.4375 -0.296875,2.5 -0.296875,3.1875 0,0.867188 0.140625,1.589844 0.421875,2.171875 0.28125,0.574219 0.785156,0.859375 1.515625,0.859375 0.425781,0 0.84375,-0.101562 1.25,-0.3125 0.414062,-0.21875 0.804688,-0.46875 1.171875,-0.75 0.363281,-0.28125 0.6875,-0.566406 0.96875,-0.859375 0.28125,-0.300781 0.484375,-0.539063 0.609375,-0.71875 l 2.390625,-11.28125 c -0.34375,-0.46875 -0.746094,-0.9375 -1.203125,-1.40625 -0.449219,-0.476563 -0.996094,-0.71875 -1.640625,-0.71875 z m 0,0"
               id="path3306" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="0.4"
         id="g3320"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(111.13513,75.826451)"
           id="g3318"><g
             id="g3316"><path
               d="m 4.640625,-25.328125 c 2.1875,-1.070313 4.429687,-1.851563 6.734375,-2.34375 2.300781,-0.5 4.867188,-0.75 7.703125,-0.75 2.75,0 5.023437,0.214844 6.828125,0.640625 1.8125,0.429688 3.253906,1.054688 4.328125,1.875 1.070313,0.8125 1.820313,1.78125 2.25,2.90625 0.425781,1.117188 0.640625,2.382812 0.640625,3.796875 0,0.8125 -0.05469,1.695313 -0.15625,2.640625 -0.105469,0.949219 -0.226562,1.742188 -0.359375,2.375 L 29.578125,0 h -10.375 l -1.15625,-4.125 H 17.65625 c -1.375,1.5 -2.976562,2.652344 -4.796875,3.453125 C 11.035156,0.117188 9.21875,0.515625 7.40625,0.515625 6.375,0.515625 5.363281,0.363281 4.375,0.0625 3.394531,-0.238281 2.515625,-0.695312 1.734375,-1.3125 0.960938,-1.9375 0.34375,-2.734375 -0.125,-3.703125 -0.601562,-4.671875 -0.84375,-5.84375 -0.84375,-7.21875 c 0,-2.238281 0.617188,-4.007812 1.84375,-5.3125 1.226562,-1.3125 2.835938,-2.300781 4.828125,-2.96875 2,-0.664062 4.253906,-1.082031 6.765625,-1.25 2.519531,-0.175781 5.046875,-0.265625 7.578125,-0.265625 0.08203,-0.425781 0.1875,-1.035156 0.3125,-1.828125 0.132813,-0.800781 0.203125,-1.503906 0.203125,-2.109375 0,-0.769531 -0.203125,-1.488281 -0.609375,-2.15625 -0.40625,-0.664063 -1.257813,-1 -2.546875,-1 -1.5,0 -2.605469,0.445313 -3.3125,1.328125 -0.710938,0.875 -1.171875,1.9375 -1.390625,3.1875 h -9.40625 z m 14.828125,11.34375 H 18.3125 c -1.25,0 -2.320312,0.164063 -3.203125,0.484375 -0.875,0.324219 -1.585937,0.746094 -2.125,1.265625 -0.53125,0.511719 -0.929687,1.089844 -1.1875,1.734375 -0.261719,0.636719 -0.390625,1.277344 -0.390625,1.921875 0,1.03125 0.265625,1.808594 0.796875,2.328125 0.539063,0.511719 1.175781,0.765625 1.90625,0.765625 0.90625,0 1.796875,-0.316406 2.671875,-0.953125 0.882812,-0.644531 1.4375,-1.507812 1.65625,-2.59375 z m 0,0"
               id="path3314" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="0.4"
         id="g3328"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(146.7148,75.826451)"
           id="g3326"><g
             id="g3324"><path
               d="M 5.21875,-27.71875 H 15.734375 L 16.6875,-22.875 h 0.453125 c 0.988281,-1.550781 2.253906,-2.863281 3.796875,-3.9375 1.550781,-1.070312 3.597656,-1.609375 6.140625,-1.609375 0.164063,0 0.429687,0.01172 0.796875,0.03125 0.363281,0.02344 0.769531,0.08984 1.21875,0.203125 0.457031,0.105469 0.929688,0.257812 1.421875,0.453125 0.5,0.1875 0.984375,0.453125 1.453125,0.796875 l -2.828125,13.265625 h -7.03125 c -0.08594,-2.65625 -0.324219,-4.507813 -0.71875,-5.5625 -0.386719,-1.050781 -1.007813,-1.578125 -1.859375,-1.578125 -0.429688,0 -0.890625,0.101562 -1.390625,0.296875 -0.492187,0.1875 -0.996094,0.605469 -1.515625,1.25 L 12.5,0 H -0.640625 Z m 0,0"
               id="path3322" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="0.4"
         id="g3336"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(177.84701,75.826451)"
           id="g3334"><g
             id="g3332"><path
               d="M 26.8125,-43.3125 H 40.03125 L 30.8125,0 H 20.375 L 19.203125,-4.125 H 18.75 c -0.25,0.386719 -0.648438,0.851562 -1.1875,1.390625 -0.53125,0.53125 -1.210938,1.046875 -2.03125,1.546875 -0.8125,0.492188 -1.78125,0.898438 -2.90625,1.21875 -1.117188,0.320312 -2.402344,0.484375 -3.859375,0.484375 -1.5,0 -2.777344,-0.226563 -3.828125,-0.671875 C 3.882812,-0.613281 3.023438,-1.226562 2.359375,-2 1.691406,-2.769531 1.207031,-3.703125 0.90625,-4.796875 0.601562,-5.898438 0.453125,-7.09375 0.453125,-8.375 c 0,-0.5625 0.039063,-1.453125 0.125,-2.671875 0.082031,-1.226563 0.285156,-2.582031 0.609375,-4.0625 0.320312,-1.488281 0.796875,-3.015625 1.421875,-4.578125 0.625,-1.570312 1.460937,-3 2.515625,-4.28125 1.050781,-1.289062 2.347656,-2.351562 3.890625,-3.1875 C 10.566406,-28 12.4375,-28.421875 14.625,-28.421875 c 0.6875,0 1.414062,0.07031 2.1875,0.203125 0.78125,0.125 1.523438,0.359375 2.234375,0.703125 0.707031,0.34375 1.335937,0.839844 1.890625,1.484375 0.5625,0.636719 0.972656,1.46875 1.234375,2.5 H 22.625 Z m -7.859375,21.203125 c -1.03125,0 -1.890625,0.574219 -2.578125,1.71875 -0.6875,1.136719 -1.25,2.453125 -1.6875,3.953125 -0.429688,1.5 -0.742188,3.007812 -0.9375,4.515625 -0.1875,1.5 -0.28125,2.617187 -0.28125,3.34375 0,0.867187 0.128906,1.589844 0.390625,2.171875 0.257813,0.574219 0.753906,0.859375 1.484375,0.859375 0.425781,0 0.84375,-0.09375 1.25,-0.28125 0.40625,-0.195313 0.789062,-0.4375 1.15625,-0.71875 0.375,-0.28125 0.6875,-0.566406 0.9375,-0.859375 0.257812,-0.300781 0.476562,-0.5625 0.65625,-0.78125 l 2.5,-11.734375 c -0.292969,-0.46875 -0.6875,-0.945313 -1.1875,-1.4375 -0.492188,-0.5 -1.058594,-0.75 -1.703125,-0.75 z m 0,0"
               id="path3330" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="0.4"
         id="g3344"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(215.03808,75.826451)"
           id="g3342"><g
             id="g3340"><path
               d="m 14.046875,-12.953125 c -0.167969,0.949219 -0.289063,1.855469 -0.359375,2.71875 -0.0625,0.855469 -0.09375,1.625 -0.09375,2.3125 0,0.386719 0.01953,0.8125 0.0625,1.28125 0.05078,0.46875 0.148438,0.914063 0.296875,1.328125 0.15625,0.40625 0.367187,0.75 0.640625,1.03125 0.28125,0.273438 0.679688,0.40625 1.203125,0.40625 0.382813,0 0.820313,-0.125 1.3125,-0.375 0.5,-0.257812 0.992187,-0.625 1.484375,-1.09375 0.5,-0.476562 0.972656,-1.0625 1.421875,-1.75 0.445313,-0.6875 0.800781,-1.457031 1.0625,-2.3125 h 10.5625 L 29.96875,-2.515625 C 29.113281,-1.953125 28.125,-1.476562 27,-1.09375 c -1.117188,0.386719 -2.296875,0.699219 -3.546875,0.9375 -1.242187,0.2265625 -2.507813,0.394531 -3.796875,0.5 -1.292969,0.113281 -2.515625,0.171875 -3.671875,0.171875 -2.148437,0 -4.148437,-0.195313 -6,-0.578125 -1.84375,-0.382812 -3.453125,-1.050781 -4.828125,-2 -1.375,-0.945312 -2.464844,-2.203125 -3.265625,-3.765625 -0.792969,-1.570313 -1.1875,-3.519531 -1.1875,-5.84375 0,-2.101563 0.332031,-4.164063 1,-6.1875 0.664063,-2.019531 1.78125,-3.8125 3.34375,-5.375 C 6.617188,-24.804688 8.726562,-26.0625 11.375,-27 c 2.644531,-0.945312 5.941406,-1.421875 9.890625,-1.421875 4.300781,0 7.535156,0.667969 9.703125,2 2.164062,1.335937 3.25,3.417969 3.25,6.25 0,1.15625 -0.171875,2.414063 -0.515625,3.765625 -0.34375,1.355469 -0.859375,2.507812 -1.546875,3.453125 z M 22.625,-20.625 c 0,-1.332031 -0.21875,-2.234375 -0.65625,-2.703125 -0.429688,-0.476563 -0.9375,-0.71875 -1.53125,-0.71875 -0.6875,0 -1.324219,0.230469 -1.90625,0.6875 -0.585938,0.449219 -1.109375,1.046875 -1.578125,1.796875 -0.46875,0.75 -0.902344,1.609375 -1.296875,2.578125 -0.386719,0.96875 -0.703125,1.992187 -0.953125,3.0625 h 7.34375 c 0.08203,-0.507813 0.164063,-1.046875 0.25,-1.609375 0.09375,-0.46875 0.171875,-0.984375 0.234375,-1.546875 0.0625,-0.5625 0.09375,-1.078125 0.09375,-1.546875 z m 0,0"
               id="path3338" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="0.4"
         id="g3352"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(250.29546,75.826451)"
           id="g3350"><g
             id="g3348"><path
               d="m 17.28125,-23.59375 c 0.894531,-0.851562 1.898438,-1.644531 3.015625,-2.375 0.988281,-0.601562 2.148437,-1.160156 3.484375,-1.671875 1.332031,-0.519531 2.816406,-0.78125 4.453125,-0.78125 2.226563,0 4.070313,0.570313 5.53125,1.703125 1.46875,1.136719 2.203125,2.695312 2.203125,4.671875 0,0.5625 -0.07031,1.242187 -0.203125,2.03125 -0.125,0.792969 -0.277344,1.621094 -0.453125,2.484375 -0.167969,0.855469 -0.351562,1.726562 -0.546875,2.609375 -0.1875,0.886719 -0.34375,1.671875 -0.46875,2.359375 L 31.578125,0 H 18.5 l 3.546875,-16.828125 c 0.08203,-0.550781 0.1875,-1.117187 0.3125,-1.703125 0.132813,-0.582031 0.203125,-1.109375 0.203125,-1.578125 0,-0.644531 -0.164062,-1.171875 -0.484375,-1.578125 -0.324219,-0.40625 -0.808594,-0.609375 -1.453125,-0.609375 -0.773438,0 -1.511719,0.28125 -2.21875,0.84375 -0.710938,0.554687 -1.257812,1.023437 -1.640625,1.40625 L 12.5,0 H -0.640625 L 5.21875,-27.71875 h 10.515625 l 1.15625,4.125 z m 0,0"
               id="path3346" /></g></g></g><g
         fill="#18b400"
         fill-opacity="1"
         id="g3360"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#1c9712;fill-opacity:1"><g
           transform="translate(71.03089,72.97774)"
           id="g3358"
           style="fill:#1c9712;fill-opacity:1"><g
             id="g3356"
             style="fill:#1c9712;fill-opacity:1"><path
               d="m 26.296875,-27.71875 h 10.4375 l -5.28125,25.078125 c -0.386719,1.9375 -1.03125,3.71875 -1.9375,5.34375 -0.898437,1.632813 -2.152344,3.050781 -3.765625,4.25 -1.617188,1.207031 -3.636719,2.15625 -6.0625,2.84375 -2.429688,0.6875 -5.382812,1.03125 -8.859375,1.03125 -0.648437,0 -1.421875,-0.01172 -2.328125,-0.03125 -0.898438,-0.02344 -1.820312,-0.04297 -2.765625,-0.0625 -0.949219,-0.02344 -1.855469,-0.05469 -2.71875,-0.09375 C 2.160156,10.597656 1.476562,10.550781 0.96875,10.5 L 2.1875,5.859375 C 3.5625,6.078125 4.96875,6.195312 6.40625,6.21875 7.851562,6.238281 9.09375,6.25 10.125,6.25 c 1.28125,0 2.363281,-0.121094 3.25,-0.359375 0.882812,-0.230469 1.613281,-0.605469 2.1875,-1.125 0.582031,-0.511719 1.054688,-1.199219 1.421875,-2.0625 0.363281,-0.855469 0.65625,-1.90625 0.875,-3.15625 l 0.765625,-4.1875 h -0.453125 c -0.25,0.386719 -0.625,0.851563 -1.125,1.390625 -0.492187,0.53125 -1.125,1.046875 -1.90625,1.546875 -0.773437,0.492187 -1.683594,0.898437 -2.734375,1.21875 C 11.351562,-0.160156 10.160156,0 8.828125,0 7.328125,0 6.050781,-0.222656 5,-0.671875 3.945312,-1.128906 3.097656,-1.753906 2.453125,-2.546875 1.804688,-3.335938 1.332031,-4.28125 1.03125,-5.375 0.726562,-6.476562 0.578125,-7.671875 0.578125,-8.953125 c 0,-0.5625 0.039063,-1.421875 0.125,-2.578125 0.09375,-1.164062 0.300781,-2.476562 0.625,-3.9375 0.320313,-1.457031 0.789063,-2.945312 1.40625,-4.46875 0.625,-1.53125 1.460937,-2.914062 2.515625,-4.15625 1.050781,-1.25 2.359375,-2.28125 3.921875,-3.09375 1.570313,-0.820312 3.476563,-1.234375 5.71875,-1.234375 0.6875,0 1.4375,0.07031 2.25,0.203125 0.820313,0.125 1.617187,0.359375 2.390625,0.703125 0.769531,0.34375 1.457031,0.839844 2.0625,1.484375 0.601562,0.636719 1.078125,1.46875 1.421875,2.5 h 0.375 z m -7.21875,5.609375 c -1.03125,0 -1.890625,0.546875 -2.578125,1.640625 -0.6875,1.09375 -1.246094,2.375 -1.671875,3.84375 -0.429687,1.460938 -0.742187,2.90625 -0.9375,4.34375 -0.199219,1.4375 -0.296875,2.5 -0.296875,3.1875 0,0.867188 0.140625,1.589844 0.421875,2.171875 0.28125,0.574219 0.785156,0.859375 1.515625,0.859375 0.425781,0 0.84375,-0.101562 1.25,-0.3125 0.414062,-0.21875 0.804688,-0.46875 1.171875,-0.75 0.363281,-0.28125 0.6875,-0.566406 0.96875,-0.859375 0.28125,-0.300781 0.484375,-0.539063 0.609375,-0.71875 l 2.390625,-11.28125 c -0.34375,-0.46875 -0.746094,-0.9375 -1.203125,-1.40625 -0.449219,-0.476563 -0.996094,-0.71875 -1.640625,-0.71875 z m 0,0"
               id="path3354"
               style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
         fill="#18b400"
         fill-opacity="1"
         id="g3368"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#1c9712;fill-opacity:1"><g
           transform="translate(108.28642,72.97774)"
           id="g3366"
           style="fill:#1c9712;fill-opacity:1"><g
             id="g3364"
             style="fill:#1c9712;fill-opacity:1"><path
               d="m 4.640625,-25.328125 c 2.1875,-1.070313 4.429687,-1.851563 6.734375,-2.34375 2.300781,-0.5 4.867188,-0.75 7.703125,-0.75 2.75,0 5.023437,0.214844 6.828125,0.640625 1.8125,0.429688 3.253906,1.054688 4.328125,1.875 1.070313,0.8125 1.820313,1.78125 2.25,2.90625 0.425781,1.117188 0.640625,2.382812 0.640625,3.796875 0,0.8125 -0.05469,1.695313 -0.15625,2.640625 -0.105469,0.949219 -0.226562,1.742188 -0.359375,2.375 L 29.578125,0 h -10.375 l -1.15625,-4.125 H 17.65625 c -1.375,1.5 -2.976562,2.652344 -4.796875,3.453125 C 11.035156,0.117188 9.21875,0.515625 7.40625,0.515625 6.375,0.515625 5.363281,0.363281 4.375,0.0625 3.394531,-0.238281 2.515625,-0.695312 1.734375,-1.3125 0.960938,-1.9375 0.34375,-2.734375 -0.125,-3.703125 -0.601562,-4.671875 -0.84375,-5.84375 -0.84375,-7.21875 c 0,-2.238281 0.617188,-4.007812 1.84375,-5.3125 1.226562,-1.3125 2.835938,-2.300781 4.828125,-2.96875 2,-0.664062 4.253906,-1.082031 6.765625,-1.25 2.519531,-0.175781 5.046875,-0.265625 7.578125,-0.265625 0.08203,-0.425781 0.1875,-1.035156 0.3125,-1.828125 0.132813,-0.800781 0.203125,-1.503906 0.203125,-2.109375 0,-0.769531 -0.203125,-1.488281 -0.609375,-2.15625 -0.40625,-0.664063 -1.257813,-1 -2.546875,-1 -1.5,0 -2.605469,0.445313 -3.3125,1.328125 -0.710938,0.875 -1.171875,1.9375 -1.390625,3.1875 h -9.40625 z m 14.828125,11.34375 H 18.3125 c -1.25,0 -2.320312,0.164063 -3.203125,0.484375 -0.875,0.324219 -1.585937,0.746094 -2.125,1.265625 -0.53125,0.511719 -0.929687,1.089844 -1.1875,1.734375 -0.261719,0.636719 -0.390625,1.277344 -0.390625,1.921875 0,1.03125 0.265625,1.808594 0.796875,2.328125 0.539063,0.511719 1.175781,0.765625 1.90625,0.765625 0.90625,0 1.796875,-0.316406 2.671875,-0.953125 0.882812,-0.644531 1.4375,-1.507812 1.65625,-2.59375 z m 0,0"
               id="path3362"
               style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
         fill="#18b400"
         fill-opacity="1"
         id="g3376"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#1c9712;fill-opacity:1"><g
           transform="translate(143.86609,72.97774)"
           id="g3374"
           style="fill:#1c9712;fill-opacity:1"><g
             id="g3372"
             style="fill:#1c9712;fill-opacity:1"><path
               d="M 5.21875,-27.71875 H 15.734375 L 16.6875,-22.875 h 0.453125 c 0.988281,-1.550781 2.253906,-2.863281 3.796875,-3.9375 1.550781,-1.070312 3.597656,-1.609375 6.140625,-1.609375 0.164063,0 0.429687,0.01172 0.796875,0.03125 0.363281,0.02344 0.769531,0.08984 1.21875,0.203125 0.457031,0.105469 0.929688,0.257812 1.421875,0.453125 0.5,0.1875 0.984375,0.453125 1.453125,0.796875 l -2.828125,13.265625 h -7.03125 c -0.08594,-2.65625 -0.324219,-4.507813 -0.71875,-5.5625 -0.386719,-1.050781 -1.007813,-1.578125 -1.859375,-1.578125 -0.429688,0 -0.890625,0.101562 -1.390625,0.296875 -0.492187,0.1875 -0.996094,0.605469 -1.515625,1.25 L 12.5,0 H -0.640625 Z m 0,0"
               id="path3370"
               style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
         fill="#18b400"
         fill-opacity="1"
         id="g3384"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#1c9712;fill-opacity:1"><g
           transform="translate(174.9983,72.97774)"
           id="g3382"
           style="fill:#1c9712;fill-opacity:1"><g
             id="g3380"
             style="fill:#1c9712;fill-opacity:1"><path
               d="M 26.8125,-43.3125 H 40.03125 L 30.8125,0 H 20.375 L 19.203125,-4.125 H 18.75 c -0.25,0.386719 -0.648438,0.851562 -1.1875,1.390625 -0.53125,0.53125 -1.210938,1.046875 -2.03125,1.546875 -0.8125,0.492188 -1.78125,0.898438 -2.90625,1.21875 -1.117188,0.320312 -2.402344,0.484375 -3.859375,0.484375 -1.5,0 -2.777344,-0.226563 -3.828125,-0.671875 C 3.882812,-0.613281 3.023438,-1.226562 2.359375,-2 1.691406,-2.769531 1.207031,-3.703125 0.90625,-4.796875 0.601562,-5.898438 0.453125,-7.09375 0.453125,-8.375 c 0,-0.5625 0.039063,-1.453125 0.125,-2.671875 0.082031,-1.226563 0.285156,-2.582031 0.609375,-4.0625 0.320312,-1.488281 0.796875,-3.015625 1.421875,-4.578125 0.625,-1.570312 1.460937,-3 2.515625,-4.28125 1.050781,-1.289062 2.347656,-2.351562 3.890625,-3.1875 C 10.566406,-28 12.4375,-28.421875 14.625,-28.421875 c 0.6875,0 1.414062,0.07031 2.1875,0.203125 0.78125,0.125 1.523438,0.359375 2.234375,0.703125 0.707031,0.34375 1.335937,0.839844 1.890625,1.484375 0.5625,0.636719 0.972656,1.46875 1.234375,2.5 H 22.625 Z m -7.859375,21.203125 c -1.03125,0 -1.890625,0.574219 -2.578125,1.71875 -0.6875,1.136719 -1.25,2.453125 -1.6875,3.953125 -0.429688,1.5 -0.742188,3.007812 -0.9375,4.515625 -0.1875,1.5 -0.28125,2.617187 -0.28125,3.34375 0,0.867187 0.128906,1.589844 0.390625,2.171875 0.257813,0.574219 0.753906,0.859375 1.484375,0.859375 0.425781,0 0.84375,-0.09375 1.25,-0.28125 0.40625,-0.195313 0.789062,-0.4375 1.15625,-0.71875 0.375,-0.28125 0.6875,-0.566406 0.9375,-0.859375 0.257812,-0.300781 0.476562,-0.5625 0.65625,-0.78125 l 2.5,-11.734375 c -0.292969,-0.46875 -0.6875,-0.945313 -1.1875,-1.4375 -0.492188,-0.5 -1.058594,-0.75 -1.703125,-0.75 z m 0,0"
               id="path3378"
               style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
         fill="#18b400"
         fill-opacity="1"
         id="g3392"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#1c9712;fill-opacity:1"><g
           transform="translate(212.18937,72.97774)"
           id="g3390"
           style="fill:#1c9712;fill-opacity:1"><g
             id="g3388"
             style="fill:#1c9712;fill-opacity:1"><path
               d="m 14.046875,-12.953125 c -0.167969,0.949219 -0.289063,1.855469 -0.359375,2.71875 -0.0625,0.855469 -0.09375,1.625 -0.09375,2.3125 0,0.386719 0.01953,0.8125 0.0625,1.28125 0.05078,0.46875 0.148438,0.914063 0.296875,1.328125 0.15625,0.40625 0.367187,0.75 0.640625,1.03125 0.28125,0.273438 0.679688,0.40625 1.203125,0.40625 0.382813,0 0.820313,-0.125 1.3125,-0.375 0.5,-0.257812 0.992187,-0.625 1.484375,-1.09375 0.5,-0.476562 0.972656,-1.0625 1.421875,-1.75 0.445313,-0.6875 0.800781,-1.457031 1.0625,-2.3125 h 10.5625 L 29.96875,-2.515625 C 29.113281,-1.953125 28.125,-1.476562 27,-1.09375 c -1.117188,0.386719 -2.296875,0.699219 -3.546875,0.9375 -1.242187,0.2265625 -2.507813,0.394531 -3.796875,0.5 -1.292969,0.113281 -2.515625,0.171875 -3.671875,0.171875 -2.148437,0 -4.148437,-0.195313 -6,-0.578125 -1.84375,-0.382812 -3.453125,-1.050781 -4.828125,-2 -1.375,-0.945312 -2.464844,-2.203125 -3.265625,-3.765625 -0.792969,-1.570313 -1.1875,-3.519531 -1.1875,-5.84375 0,-2.101563 0.332031,-4.164063 1,-6.1875 0.664063,-2.019531 1.78125,-3.8125 3.34375,-5.375 C 6.617188,-24.804688 8.726562,-26.0625 11.375,-27 c 2.644531,-0.945312 5.941406,-1.421875 9.890625,-1.421875 4.300781,0 7.535156,0.667969 9.703125,2 2.164062,1.335937 3.25,3.417969 3.25,6.25 0,1.15625 -0.171875,2.414063 -0.515625,3.765625 -0.34375,1.355469 -0.859375,2.507812 -1.546875,3.453125 z M 22.625,-20.625 c 0,-1.332031 -0.21875,-2.234375 -0.65625,-2.703125 -0.429688,-0.476563 -0.9375,-0.71875 -1.53125,-0.71875 -0.6875,0 -1.324219,0.230469 -1.90625,0.6875 -0.585938,0.449219 -1.109375,1.046875 -1.578125,1.796875 -0.46875,0.75 -0.902344,1.609375 -1.296875,2.578125 -0.386719,0.96875 -0.703125,1.992187 -0.953125,3.0625 h 7.34375 c 0.08203,-0.507813 0.164063,-1.046875 0.25,-1.609375 0.09375,-0.46875 0.171875,-0.984375 0.234375,-1.546875 0.0625,-0.5625 0.09375,-1.078125 0.09375,-1.546875 z m 0,0"
               id="path3386"
               style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
         fill="#18b400"
         fill-opacity="1"
         id="g3400"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#1c9712;fill-opacity:1"><g
           transform="translate(247.44675,72.97774)"
           id="g3398"
           style="fill:#1c9712;fill-opacity:1"><g
             id="g3396"
             style="fill:#1c9712;fill-opacity:1"><path
               d="m 17.28125,-23.59375 c 0.894531,-0.851562 1.898438,-1.644531 3.015625,-2.375 0.988281,-0.601562 2.148437,-1.160156 3.484375,-1.671875 1.332031,-0.519531 2.816406,-0.78125 4.453125,-0.78125 2.226563,0 4.070313,0.570313 5.53125,1.703125 1.46875,1.136719 2.203125,2.695312 2.203125,4.671875 0,0.5625 -0.07031,1.242187 -0.203125,2.03125 -0.125,0.792969 -0.277344,1.621094 -0.453125,2.484375 -0.167969,0.855469 -0.351562,1.726562 -0.546875,2.609375 -0.1875,0.886719 -0.34375,1.671875 -0.46875,2.359375 L 31.578125,0 H 18.5 l 3.546875,-16.828125 c 0.08203,-0.550781 0.1875,-1.117187 0.3125,-1.703125 0.132813,-0.582031 0.203125,-1.109375 0.203125,-1.578125 0,-0.644531 -0.164062,-1.171875 -0.484375,-1.578125 -0.324219,-0.40625 -0.808594,-0.609375 -1.453125,-0.609375 -0.773438,0 -1.511719,0.28125 -2.21875,0.84375 -0.710938,0.554687 -1.257812,1.023437 -1.640625,1.40625 L 12.5,0 H -0.640625 L 5.21875,-27.71875 h 10.515625 l 1.15625,4.125 z m 0,0"
               id="path3394"
               style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
         fill="#18b400"
         fill-opacity="0.4"
         id="g3408"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(284.83897,76.449865)"
           id="g3406"><g
             id="g3404"><path
               d="M 41.5,-38.09375 H 30.53125 L 22.421875,0 H 7.703125 L 15.8125,-38.09375 H 4.96875 l 1.234375,-5.171875 H 42.65625 Z m 0,0"
               id="path3402" /></g></g></g><g
         fill="#18b400"
         fill-opacity="0.4"
         id="g3416"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(322.65713,76.449865)"
           id="g3414"><g
             id="g3412"><path
               d="m 9.203125,-43.265625 h 28.6875 l -1.09375,5.171875 H 22.890625 L 20.03125,-24.9375 H 31.6875 l -1.09375,5.109375 H 18.9375 L 15.8125,-5.25 H 29.703125 L 28.6875,0 H 0 Z m 0,0"
               id="path3410" /></g></g></g><g
         fill="#18b400"
         fill-opacity="0.4"
         id="g3424"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(356.93197,76.449865)"
           id="g3422"><g
             id="g3420"><path
               d="m 19.96875,-24.46875 16.828125,-18.875 H 44.5 L 29.234375,-26.78125 39.59375,0 H 24.734375 l -6,-19.015625 L 14.71875,0 H 0 l 9.203125,-43.265625 h 14.78125 z m 0,0"
               id="path3418" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="1"
         id="g3432"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#0859d7;fill-opacity:1"><g
           transform="translate(281.82746,73.438347)"
           id="g3430"
           style="fill:#0859d7;fill-opacity:1"><g
             id="g3428"
             style="fill:#0859d7;fill-opacity:1"><path
               d="M 41.5,-38.09375 H 30.53125 L 22.421875,0 H 7.703125 L 15.8125,-38.09375 H 4.96875 l 1.234375,-5.171875 H 42.65625 Z m 0,0"
               id="path3426"
               style="fill:#0859d7;fill-opacity:1" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="1"
         id="g3440"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#0859d7;fill-opacity:1"><g
           transform="translate(319.64562,73.438347)"
           id="g3438"
           style="fill:#0859d7;fill-opacity:1"><g
             id="g3436"
             style="fill:#0859d7;fill-opacity:1"><path
               d="m 9.203125,-43.265625 h 28.6875 l -1.09375,5.171875 H 22.890625 L 20.03125,-24.9375 H 31.6875 l -1.09375,5.109375 H 18.9375 L 15.8125,-5.25 H 29.703125 L 28.6875,0 H 0 Z m 0,0"
               id="path3434"
               style="fill:#0859d7;fill-opacity:1" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="1"
         id="g3448"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#0859d7;fill-opacity:1"><g
           transform="translate(353.92046,73.438347)"
           id="g3446"
           style="fill:#0859d7;fill-opacity:1"><g
             id="g3444"
             style="fill:#0859d7;fill-opacity:1"><path
               d="m 19.96875,-24.46875 16.828125,-18.875 H 44.5 L 29.234375,-26.78125 39.59375,0 H 24.734375 l -6,-19.015625 L 14.71875,0 H 0 l 9.203125,-43.265625 h 14.78125 z m 0,0"
               id="path3442"
               style="fill:#0859d7;fill-opacity:1" /></g></g></g><g
         fill="#18b400"
         fill-opacity="0.4"
         id="g3456"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(183.08102,114.72709)"
           id="g3454"><g
             id="g3452"><path
               d="m 11.359375,-9.28125 h 8.28125 L 17.796875,0 h -3.78125 L 13.40625,-2.046875 h -0.125 c -0.554688,0.636719 -1.210938,1.179687 -1.96875,1.625 C 10.550781,0.0234375 9.566406,0.25 8.359375,0.25 7.410156,0.25 6.503906,0.0976562 5.640625,-0.203125 4.785156,-0.515625 4.019531,-1.003906 3.34375,-1.671875 2.675781,-2.347656 2.140625,-3.226562 1.734375,-4.3125 1.328125,-5.40625 1.125,-6.71875 1.125,-8.25 c 0,-1.664062 0.253906,-3.242188 0.765625,-4.734375 0.507813,-1.5 1.273437,-2.816406 2.296875,-3.953125 1.03125,-1.144531 2.3125,-2.046875 3.84375,-2.703125 1.539062,-0.664063 3.332031,-1 5.375,-1 1.582031,0 2.957031,0.183594 4.125,0.546875 1.175781,0.367188 2.285156,0.773438 3.328125,1.21875 l -1.21875,6.203125 h -5.40625 c 0.01953,-0.238281 0.05078,-0.515625 0.09375,-0.828125 0.05078,-0.320312 0.08594,-0.660156 0.109375,-1.015625 0.01953,-0.351563 0.03906,-0.695313 0.0625,-1.03125 0.01953,-0.34375 0.03125,-0.644531 0.03125,-0.90625 0,-0.164063 -0.01172,-0.359375 -0.03125,-0.578125 -0.02344,-0.226562 -0.07813,-0.445312 -0.171875,-0.65625 -0.08594,-0.21875 -0.210937,-0.394531 -0.375,-0.53125 -0.167969,-0.144531 -0.414063,-0.21875 -0.734375,-0.21875 -0.554688,0 -1.058594,0.230469 -1.515625,0.6875 -0.460937,0.460938 -0.871094,1.070312 -1.234375,1.828125 -0.367188,0.761719 -0.683594,1.621094 -0.953125,2.578125 -0.261719,0.960938 -0.484375,1.9375 -0.671875,2.9375 C 8.664062,-9.414062 8.523438,-8.445312 8.421875,-7.5 8.328125,-6.550781 8.28125,-5.726562 8.28125,-5.03125 c 0,0.21875 0.00781,0.492188 0.03125,0.8125 0.03125,0.3125 0.101562,0.625 0.21875,0.9375 0.113281,0.3125 0.28125,0.585938 0.5,0.8125 0.226562,0.21875 0.554688,0.328125 0.984375,0.328125 0.707031,0 1.390625,-0.382813 2.046875,-1.15625 0.664062,-0.769531 1.164062,-2.050781 1.5,-3.84375 H 10.875 Z m 0,0"
               id="path3450" /></g></g></g><g
         fill="#18b400"
         fill-opacity="0.4"
         id="g3464"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(203.61997,114.72709)"
           id="g3462"><g
             id="g3460"><path
               d="m 19.9375,-15.484375 c 0,1.261719 -0.355469,2.421875 -1.0625,3.484375 -0.699219,1.0625 -1.859375,1.875 -3.484375,2.4375 L 19.109375,0 H 11.96875 L 9.15625,-8.859375 H 8.796875 L 6.90625,0 H 0 l 4.3125,-20.3125 h 8.421875 c 0.976563,0 1.90625,0.05859 2.78125,0.171875 0.875,0.117187 1.632813,0.351563 2.28125,0.703125 0.65625,0.355469 1.175781,0.84375 1.5625,1.46875 0.382813,0.625 0.578125,1.453125 0.578125,2.484375 z m -9.21875,4.578125 c 0.550781,0 1.023438,-0.1875 1.421875,-0.5625 0.394531,-0.375 0.710937,-0.828125 0.953125,-1.359375 0.25,-0.53125 0.425781,-1.097656 0.53125,-1.703125 0.113281,-0.613281 0.171875,-1.144531 0.171875,-1.59375 0,-0.550781 -0.101563,-1.023438 -0.296875,-1.421875 -0.1875,-0.394531 -0.605469,-0.59375 -1.25,-0.59375 h -1.4375 l -1.59375,7.234375 z m 0,0"
               id="path3458" /></g></g></g><g
         fill="#18b400"
         fill-opacity="0.4"
         id="g3472"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(223.87098,114.72709)"
           id="g3470"><g
             id="g3468"><path
               d="m 13.15625,-20.640625 c 1.832031,0 3.316406,0.234375 4.453125,0.703125 1.144531,0.46875 2.046875,1.195312 2.703125,2.171875 0.425781,0.667969 0.753906,1.417969 0.984375,2.25 0.238281,0.835937 0.359375,1.792969 0.359375,2.875 0,0.9375 -0.08594,1.875 -0.25,2.8125 C 21.238281,-8.890625 21,-7.988281 20.6875,-7.125 20.375,-6.257812 20,-5.445312 19.5625,-4.6875 c -0.4375,0.761719 -0.921875,1.429688 -1.453125,2 -1,1.085938 -2.15625,1.84375 -3.46875,2.28125 C 13.328125,0.03125 11.710938,0.25 9.796875,0.25 7.941406,0.25 6.445312,0.0625 5.3125,-0.3125 4.175781,-0.695312 3.28125,-1.316406 2.625,-2.171875 2.15625,-2.773438 1.785156,-3.535156 1.515625,-4.453125 1.253906,-5.367188 1.125,-6.519531 1.125,-7.90625 c 0,-2.363281 0.414062,-4.476562 1.25,-6.34375 0.84375,-1.875 2.046875,-3.351562 3.609375,-4.4375 0.9375,-0.664062 1.976563,-1.15625 3.125,-1.46875 1.15625,-0.320312 2.503906,-0.484375 4.046875,-0.484375 z m -3.625,18.65625 c 0.488281,0 0.953125,-0.21875 1.390625,-0.65625 0.4375,-0.4375 0.84375,-1.019531 1.21875,-1.75 0.375,-0.738281 0.710937,-1.578125 1.015625,-2.515625 0.3125,-0.9375 0.570312,-1.90625 0.78125,-2.90625 0.21875,-1.007812 0.382812,-2.007812 0.5,-3 0.125,-0.988281 0.1875,-1.890625 0.1875,-2.703125 0,-1.113281 -0.117188,-1.878906 -0.34375,-2.296875 -0.21875,-0.414062 -0.542969,-0.625 -0.96875,-0.625 -0.492188,0 -0.960938,0.214844 -1.40625,0.640625 -0.449219,0.429687 -0.871094,1 -1.265625,1.71875 -0.398437,0.710937 -0.75,1.53125 -1.0625,2.46875 C 9.273438,-12.679688 9.007812,-11.726562 8.78125,-10.75 8.5625,-9.769531 8.390625,-8.800781 8.265625,-7.84375 8.148438,-6.882812 8.09375,-6 8.09375,-5.1875 c 0,1.21875 0.128906,2.058594 0.390625,2.515625 0.269531,0.460937 0.617187,0.6875 1.046875,0.6875 z m 0,0"
               id="path3466" /></g></g></g><g
         fill="#18b400"
         fill-opacity="0.4"
         id="g3480"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(245.78559,114.72709)"
           id="g3478"><g
             id="g3476"><path
               d="m 2.5,-20.3125 h 7.796875 L 10.84375,-6.46875 16.1875,-20.3125 h 6.34375 l 0.828125,13.84375 5.375,-13.84375 H 32.09375 L 24.1875,0 H 16.984375 L 16.3125,-11.484375 11.515625,0 H 3.84375 Z m 0,0"
               id="path3474" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="1"
         id="g3488"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#0859d7;fill-opacity:1"><g
           transform="translate(181.6668,113.31288)"
           id="g3486"
           style="fill:#0859d7;fill-opacity:1"><g
             id="g3484"
             style="fill:#0859d7;fill-opacity:1"><path
               d="m 11.359375,-9.28125 h 8.28125 L 17.796875,0 h -3.78125 L 13.40625,-2.046875 h -0.125 c -0.554688,0.636719 -1.210938,1.179687 -1.96875,1.625 C 10.550781,0.0234375 9.566406,0.25 8.359375,0.25 7.410156,0.25 6.503906,0.0976562 5.640625,-0.203125 4.785156,-0.515625 4.019531,-1.003906 3.34375,-1.671875 2.675781,-2.347656 2.140625,-3.226562 1.734375,-4.3125 1.328125,-5.40625 1.125,-6.71875 1.125,-8.25 c 0,-1.664062 0.253906,-3.242188 0.765625,-4.734375 0.507813,-1.5 1.273437,-2.816406 2.296875,-3.953125 1.03125,-1.144531 2.3125,-2.046875 3.84375,-2.703125 1.539062,-0.664063 3.332031,-1 5.375,-1 1.582031,0 2.957031,0.183594 4.125,0.546875 1.175781,0.367188 2.285156,0.773438 3.328125,1.21875 l -1.21875,6.203125 h -5.40625 c 0.01953,-0.238281 0.05078,-0.515625 0.09375,-0.828125 0.05078,-0.320312 0.08594,-0.660156 0.109375,-1.015625 0.01953,-0.351563 0.03906,-0.695313 0.0625,-1.03125 0.01953,-0.34375 0.03125,-0.644531 0.03125,-0.90625 0,-0.164063 -0.01172,-0.359375 -0.03125,-0.578125 -0.02344,-0.226562 -0.07813,-0.445312 -0.171875,-0.65625 -0.08594,-0.21875 -0.210937,-0.394531 -0.375,-0.53125 -0.167969,-0.144531 -0.414063,-0.21875 -0.734375,-0.21875 -0.554688,0 -1.058594,0.230469 -1.515625,0.6875 -0.460937,0.460938 -0.871094,1.070312 -1.234375,1.828125 -0.367188,0.761719 -0.683594,1.621094 -0.953125,2.578125 -0.261719,0.960938 -0.484375,1.9375 -0.671875,2.9375 C 8.664062,-9.414062 8.523438,-8.445312 8.421875,-7.5 8.328125,-6.550781 8.28125,-5.726562 8.28125,-5.03125 c 0,0.21875 0.00781,0.492188 0.03125,0.8125 0.03125,0.3125 0.101562,0.625 0.21875,0.9375 0.113281,0.3125 0.28125,0.585938 0.5,0.8125 0.226562,0.21875 0.554688,0.328125 0.984375,0.328125 0.707031,0 1.390625,-0.382813 2.046875,-1.15625 0.664062,-0.769531 1.164062,-2.050781 1.5,-3.84375 H 10.875 Z m 0,0"
               id="path3482"
               style="fill:#0859d7;fill-opacity:1" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="1"
         id="g3496"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#0859d7;fill-opacity:1"><g
           transform="translate(202.20575,113.31288)"
           id="g3494"
           style="fill:#0859d7;fill-opacity:1"><g
             id="g3492"
             style="fill:#0859d7;fill-opacity:1"><path
               d="m 19.9375,-15.484375 c 0,1.261719 -0.355469,2.421875 -1.0625,3.484375 -0.699219,1.0625 -1.859375,1.875 -3.484375,2.4375 L 19.109375,0 H 11.96875 L 9.15625,-8.859375 H 8.796875 L 6.90625,0 H 0 l 4.3125,-20.3125 h 8.421875 c 0.976563,0 1.90625,0.05859 2.78125,0.171875 0.875,0.117187 1.632813,0.351563 2.28125,0.703125 0.65625,0.355469 1.175781,0.84375 1.5625,1.46875 0.382813,0.625 0.578125,1.453125 0.578125,2.484375 z m -9.21875,4.578125 c 0.550781,0 1.023438,-0.1875 1.421875,-0.5625 0.394531,-0.375 0.710937,-0.828125 0.953125,-1.359375 0.25,-0.53125 0.425781,-1.097656 0.53125,-1.703125 0.113281,-0.613281 0.171875,-1.144531 0.171875,-1.59375 0,-0.550781 -0.101563,-1.023438 -0.296875,-1.421875 -0.1875,-0.394531 -0.605469,-0.59375 -1.25,-0.59375 h -1.4375 l -1.59375,7.234375 z m 0,0"
               id="path3490"
               style="fill:#0859d7;fill-opacity:1" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="1"
         id="g3504"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#0859d7;fill-opacity:1"><g
           transform="translate(222.45676,113.31288)"
           id="g3502"
           style="fill:#0859d7;fill-opacity:1"><g
             id="g3500"
             style="fill:#0859d7;fill-opacity:1"><path
               d="m 13.15625,-20.640625 c 1.832031,0 3.316406,0.234375 4.453125,0.703125 1.144531,0.46875 2.046875,1.195312 2.703125,2.171875 0.425781,0.667969 0.753906,1.417969 0.984375,2.25 0.238281,0.835937 0.359375,1.792969 0.359375,2.875 0,0.9375 -0.08594,1.875 -0.25,2.8125 C 21.238281,-8.890625 21,-7.988281 20.6875,-7.125 20.375,-6.257812 20,-5.445312 19.5625,-4.6875 c -0.4375,0.761719 -0.921875,1.429688 -1.453125,2 -1,1.085938 -2.15625,1.84375 -3.46875,2.28125 C 13.328125,0.03125 11.710938,0.25 9.796875,0.25 7.941406,0.25 6.445312,0.0625 5.3125,-0.3125 4.175781,-0.695312 3.28125,-1.316406 2.625,-2.171875 2.15625,-2.773438 1.785156,-3.535156 1.515625,-4.453125 1.253906,-5.367188 1.125,-6.519531 1.125,-7.90625 c 0,-2.363281 0.414062,-4.476562 1.25,-6.34375 0.84375,-1.875 2.046875,-3.351562 3.609375,-4.4375 0.9375,-0.664062 1.976563,-1.15625 3.125,-1.46875 1.15625,-0.320312 2.503906,-0.484375 4.046875,-0.484375 z m -3.625,18.65625 c 0.488281,0 0.953125,-0.21875 1.390625,-0.65625 0.4375,-0.4375 0.84375,-1.019531 1.21875,-1.75 0.375,-0.738281 0.710937,-1.578125 1.015625,-2.515625 0.3125,-0.9375 0.570312,-1.90625 0.78125,-2.90625 0.21875,-1.007812 0.382812,-2.007812 0.5,-3 0.125,-0.988281 0.1875,-1.890625 0.1875,-2.703125 0,-1.113281 -0.117188,-1.878906 -0.34375,-2.296875 -0.21875,-0.414062 -0.542969,-0.625 -0.96875,-0.625 -0.492188,0 -0.960938,0.214844 -1.40625,0.640625 -0.449219,0.429687 -0.871094,1 -1.265625,1.71875 -0.398437,0.710937 -0.75,1.53125 -1.0625,2.46875 C 9.273438,-12.679688 9.007812,-11.726562 8.78125,-10.75 8.5625,-9.769531 8.390625,-8.800781 8.265625,-7.84375 8.148438,-6.882812 8.09375,-6 8.09375,-5.1875 c 0,1.21875 0.128906,2.058594 0.390625,2.515625 0.269531,0.460937 0.617187,0.6875 1.046875,0.6875 z m 0,0"
               id="path3498"
               style="fill:#0859d7;fill-opacity:1" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="1"
         id="g3512"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#0859d7;fill-opacity:1"><g
           transform="translate(244.37137,113.31288)"
           id="g3510"
           style="fill:#0859d7;fill-opacity:1"><g
             id="g3508"
             style="fill:#0859d7;fill-opacity:1"><path
               d="m 2.5,-20.3125 h 7.796875 L 10.84375,-6.46875 16.1875,-20.3125 h 6.34375 l 0.828125,13.84375 5.375,-13.84375 H 32.09375 L 24.1875,0 H 16.984375 L 16.3125,-11.484375 11.515625,0 H 3.84375 Z m 0,0"
               id="path3506"
               style="fill:#0859d7;fill-opacity:1" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="0.4"
         id="g3520"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(281.54146,114.72709)"
           id="g3518"><g
             id="g3516"><path
               d="m 12.609375,-14.4375 c 0.0625,-0.3125 0.09375,-0.75 0.09375,-1.3125 0,-0.3125 -0.02344,-0.625 -0.0625,-0.9375 -0.04297,-0.3125 -0.121094,-0.585938 -0.234375,-0.828125 -0.105469,-0.25 -0.265625,-0.441406 -0.484375,-0.578125 -0.210937,-0.132812 -0.480469,-0.203125 -0.8125,-0.203125 -0.386719,0 -0.742187,0.08594 -1.0625,0.25 -0.324219,0.167969 -0.609375,0.386719 -0.859375,0.65625 -0.242188,0.273437 -0.429688,0.585937 -0.5625,0.9375 -0.136719,0.34375 -0.203125,0.710937 -0.203125,1.09375 0,0.554687 0.140625,0.980469 0.421875,1.28125 0.289062,0.304687 0.671875,0.546875 1.140625,0.734375 0.46875,0.1875 1,0.351562 1.59375,0.484375 0.601563,0.125 1.222656,0.273437 1.859375,0.4375 0.53125,0.15625 1.0625,0.355469 1.59375,0.59375 0.539062,0.230469 1.019531,0.542969 1.4375,0.9375 0.414062,0.398437 0.75,0.90625 1,1.53125 0.257812,0.625 0.390625,1.40625 0.390625,2.34375 0,1.355469 -0.273437,2.492187 -0.8125,3.40625 C 16.515625,-2.691406 15.78125,-1.945312 14.84375,-1.375 13.90625,-0.800781 12.789062,-0.382812 11.5,-0.125 10.207031,0.125 8.804688,0.25 7.296875,0.25 5.753906,0.25 4.5,0.148438 3.53125,-0.046875 2.5625,-0.253906 1.800781,-0.472656 1.25,-0.703125 0.582031,-0.984375 0.09375,-1.300781 -0.21875,-1.65625 L 0.859375,-6.046875 H 6.5 c -0.023438,0.1875 -0.042969,0.449219 -0.0625,0.78125 -0.023438,0.335937 -0.03125,0.59375 -0.03125,0.78125 0,0.261719 0.03125,0.53125 0.09375,0.8125 0.0625,0.273437 0.160156,0.527344 0.296875,0.765625 0.144531,0.230469 0.34375,0.421875 0.59375,0.578125 0.257813,0.148437 0.582031,0.21875 0.96875,0.21875 0.414063,0 0.789063,-0.09375 1.125,-0.28125 0.332031,-0.195313 0.609375,-0.4375 0.828125,-0.71875 0.226562,-0.289063 0.398438,-0.613281 0.515625,-0.96875 0.125,-0.351563 0.1875,-0.703125 0.1875,-1.046875 0,-0.46875 -0.117187,-0.859375 -0.34375,-1.171875 -0.21875,-0.320313 -0.523437,-0.59375 -0.90625,-0.8125 C 9.378906,-7.335938 8.9375,-7.53125 8.4375,-7.6875 7.9375,-7.851562 7.414062,-8.019531 6.875,-8.1875 6.363281,-8.34375 5.828125,-8.523438 5.265625,-8.734375 4.703125,-8.953125 4.1875,-9.25 3.71875,-9.625 3.25,-10.007812 2.859375,-10.492188 2.546875,-11.078125 c -0.3125,-0.59375 -0.46875,-1.347656 -0.46875,-2.265625 0,-1.363281 0.34375,-2.507812 1.03125,-3.4375 0.695313,-0.925781 1.570313,-1.675781 2.625,-2.25 1.0625,-0.582031 2.222656,-0.992188 3.484375,-1.234375 1.257812,-0.25 2.453125,-0.375 3.578125,-0.375 1.5,0 2.785156,0.179687 3.859375,0.53125 1.070312,0.355469 1.890625,0.765625 2.453125,1.234375 l -1.1875,4.4375 z m 0,0"
               id="path3514" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="0.4"
         id="g3528"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(300.32085,114.72709)"
           id="g3526"><g
             id="g3524"><path
               d="m 23.484375,0 h -7.09375 l 2.9375,-13.828125 L 11.75,0 H 7.390625 L 5.953125,-14.296875 2.875,0 H 0 l 4.3125,-20.3125 h 8.171875 L 13.46875,-8.859375 19.609375,-20.3125 h 8.234375 z m 0,0"
               id="path3522" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="0.4"
         id="g3536"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(327.32221,114.72709)"
           id="g3534"><g
             id="g3532"><path
               d="m 17.734375,0 h -7.5 l -0.4375,-5.09375 H 3.875 L 1.59375,0 H -1.5 l 9.4375,-20.3125 h 7.578125 z M 4.921875,-7.421875 H 9.5625 L 8.828125,-16.125 Z m 0,0"
               id="path3530" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="0.4"
         id="g3544"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(346.58147,114.72709)"
           id="g3542"><g
             id="g3540"><path
               d="m 19.9375,-15.484375 c 0,1.261719 -0.355469,2.421875 -1.0625,3.484375 -0.699219,1.0625 -1.859375,1.875 -3.484375,2.4375 L 19.109375,0 H 11.96875 L 9.15625,-8.859375 H 8.796875 L 6.90625,0 H 0 l 4.3125,-20.3125 h 8.421875 c 0.976563,0 1.90625,0.05859 2.78125,0.171875 0.875,0.117187 1.632813,0.351563 2.28125,0.703125 0.65625,0.355469 1.175781,0.84375 1.5625,1.46875 0.382813,0.625 0.578125,1.453125 0.578125,2.484375 z m -9.21875,4.578125 c 0.550781,0 1.023438,-0.1875 1.421875,-0.5625 0.394531,-0.375 0.710937,-0.828125 0.953125,-1.359375 0.25,-0.53125 0.425781,-1.097656 0.53125,-1.703125 0.113281,-0.613281 0.171875,-1.144531 0.171875,-1.59375 0,-0.550781 -0.101563,-1.023438 -0.296875,-1.421875 -0.1875,-0.394531 -0.605469,-0.59375 -1.25,-0.59375 h -1.4375 l -1.59375,7.234375 z m 0,0"
               id="path3538" /></g></g></g><g
         fill="#0753eb"
         fill-opacity="0.4"
         id="g3552"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"><g
           transform="translate(366.83249,114.72709)"
           id="g3550"><g
             id="g3548"><path
               d="M 19.484375,-17.890625 H 14.34375 L 10.53125,0 H 3.609375 l 3.8125,-17.890625 H 2.34375 l 0.5625,-2.421875 h 17.125 z m 0,0"
               id="path3546" /></g></g></g><g
         fill="#18b400"
         fill-opacity="1"
         id="g3560"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#1c9712;fill-opacity:1"><g
           transform="translate(280.12725,113.31288)"
           id="g3558"
           style="fill:#1c9712;fill-opacity:1"><g
             id="g3556"
             style="fill:#1c9712;fill-opacity:1"><path
               d="m 12.609375,-14.4375 c 0.0625,-0.3125 0.09375,-0.75 0.09375,-1.3125 0,-0.3125 -0.02344,-0.625 -0.0625,-0.9375 -0.04297,-0.3125 -0.121094,-0.585938 -0.234375,-0.828125 -0.105469,-0.25 -0.265625,-0.441406 -0.484375,-0.578125 -0.210937,-0.132812 -0.480469,-0.203125 -0.8125,-0.203125 -0.386719,0 -0.742187,0.08594 -1.0625,0.25 -0.324219,0.167969 -0.609375,0.386719 -0.859375,0.65625 -0.242188,0.273437 -0.429688,0.585937 -0.5625,0.9375 -0.136719,0.34375 -0.203125,0.710937 -0.203125,1.09375 0,0.554687 0.140625,0.980469 0.421875,1.28125 0.289062,0.304687 0.671875,0.546875 1.140625,0.734375 0.46875,0.1875 1,0.351562 1.59375,0.484375 0.601563,0.125 1.222656,0.273437 1.859375,0.4375 0.53125,0.15625 1.0625,0.355469 1.59375,0.59375 0.539062,0.230469 1.019531,0.542969 1.4375,0.9375 0.414062,0.398437 0.75,0.90625 1,1.53125 0.257812,0.625 0.390625,1.40625 0.390625,2.34375 0,1.355469 -0.273437,2.492187 -0.8125,3.40625 C 16.515625,-2.691406 15.78125,-1.945312 14.84375,-1.375 13.90625,-0.800781 12.789062,-0.382812 11.5,-0.125 10.207031,0.125 8.804688,0.25 7.296875,0.25 5.753906,0.25 4.5,0.148438 3.53125,-0.046875 2.5625,-0.253906 1.800781,-0.472656 1.25,-0.703125 0.582031,-0.984375 0.09375,-1.300781 -0.21875,-1.65625 L 0.859375,-6.046875 H 6.5 c -0.023438,0.1875 -0.042969,0.449219 -0.0625,0.78125 -0.023438,0.335937 -0.03125,0.59375 -0.03125,0.78125 0,0.261719 0.03125,0.53125 0.09375,0.8125 0.0625,0.273437 0.160156,0.527344 0.296875,0.765625 0.144531,0.230469 0.34375,0.421875 0.59375,0.578125 0.257813,0.148437 0.582031,0.21875 0.96875,0.21875 0.414063,0 0.789063,-0.09375 1.125,-0.28125 0.332031,-0.195313 0.609375,-0.4375 0.828125,-0.71875 0.226562,-0.289063 0.398438,-0.613281 0.515625,-0.96875 0.125,-0.351563 0.1875,-0.703125 0.1875,-1.046875 0,-0.46875 -0.117187,-0.859375 -0.34375,-1.171875 -0.21875,-0.320313 -0.523437,-0.59375 -0.90625,-0.8125 C 9.378906,-7.335938 8.9375,-7.53125 8.4375,-7.6875 7.9375,-7.851562 7.414062,-8.019531 6.875,-8.1875 6.363281,-8.34375 5.828125,-8.523438 5.265625,-8.734375 4.703125,-8.953125 4.1875,-9.25 3.71875,-9.625 3.25,-10.007812 2.859375,-10.492188 2.546875,-11.078125 c -0.3125,-0.59375 -0.46875,-1.347656 -0.46875,-2.265625 0,-1.363281 0.34375,-2.507812 1.03125,-3.4375 0.695313,-0.925781 1.570313,-1.675781 2.625,-2.25 1.0625,-0.582031 2.222656,-0.992188 3.484375,-1.234375 1.257812,-0.25 2.453125,-0.375 3.578125,-0.375 1.5,0 2.785156,0.179687 3.859375,0.53125 1.070312,0.355469 1.890625,0.765625 2.453125,1.234375 l -1.1875,4.4375 z m 0,0"
               id="path3554"
               style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
         fill="#18b400"
         fill-opacity="1"
         id="g3568"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#1c9712;fill-opacity:1"><g
           transform="translate(298.90663,113.31288)"
           id="g3566"
           style="fill:#1c9712;fill-opacity:1"><g
             id="g3564"
             style="fill:#1c9712;fill-opacity:1"><path
               d="m 23.484375,0 h -7.09375 l 2.9375,-13.828125 L 11.75,0 H 7.390625 L 5.953125,-14.296875 2.875,0 H 0 l 4.3125,-20.3125 h 8.171875 L 13.46875,-8.859375 19.609375,-20.3125 h 8.234375 z m 0,0"
               id="path3562"
               style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
         fill="#18b400"
         fill-opacity="1"
         id="g3576"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#1c9712;fill-opacity:1"><g
           transform="translate(325.90799,113.31288)"
           id="g3574"
           style="fill:#1c9712;fill-opacity:1"><g
             id="g3572"
             style="fill:#1c9712;fill-opacity:1"><path
               d="m 17.734375,0 h -7.5 l -0.4375,-5.09375 H 3.875 L 1.59375,0 H -1.5 l 9.4375,-20.3125 h 7.578125 z M 4.921875,-7.421875 H 9.5625 L 8.828125,-16.125 Z m 0,0"
               id="path3570"
               style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
         fill="#18b400"
         fill-opacity="1"
         id="g3584"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#1c9712;fill-opacity:1"><g
           transform="translate(345.16725,113.31288)"
           id="g3582"
           style="fill:#1c9712;fill-opacity:1"><g
             id="g3580"
             style="fill:#1c9712;fill-opacity:1"><path
               d="m 19.9375,-15.484375 c 0,1.261719 -0.355469,2.421875 -1.0625,3.484375 -0.699219,1.0625 -1.859375,1.875 -3.484375,2.4375 L 19.109375,0 H 11.96875 L 9.15625,-8.859375 H 8.796875 L 6.90625,0 H 0 l 4.3125,-20.3125 h 8.421875 c 0.976563,0 1.90625,0.05859 2.78125,0.171875 0.875,0.117187 1.632813,0.351563 2.28125,0.703125 0.65625,0.355469 1.175781,0.84375 1.5625,1.46875 0.382813,0.625 0.578125,1.453125 0.578125,2.484375 z m -9.21875,4.578125 c 0.550781,0 1.023438,-0.1875 1.421875,-0.5625 0.394531,-0.375 0.710937,-0.828125 0.953125,-1.359375 0.25,-0.53125 0.425781,-1.097656 0.53125,-1.703125 0.113281,-0.613281 0.171875,-1.144531 0.171875,-1.59375 0,-0.550781 -0.101563,-1.023438 -0.296875,-1.421875 -0.1875,-0.394531 -0.605469,-0.59375 -1.25,-0.59375 h -1.4375 l -1.59375,7.234375 z m 0,0"
               id="path3578"
               style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
         fill="#18b400"
         fill-opacity="1"
         id="g3592"
         transform="matrix(0.35277778,0,0,0.35277778,3.6322264,228.93684)"
         style="fill:#1c9712;fill-opacity:1"><g
           transform="translate(365.41827,113.31288)"
           id="g3590"
           style="fill:#1c9712;fill-opacity:1"><g
             id="g3588"
             style="fill:#1c9712;fill-opacity:1"><path
               d="M 19.484375,-17.890625 H 14.34375 L 10.53125,0 H 3.609375 l 3.8125,-17.890625 H 2.34375 l 0.5625,-2.421875 h 17.125 z m 0,0"
               id="path3586"
               style="fill:#1c9712;fill-opacity:1" /></g></g></g></g><g
       id="g5335-6-0"
       transform="matrix(0.09637419,0,0,0.09637419,45.730924,311.60503)"
       style="opacity:0.96350365"><g
         id="g4589-5-1"><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 793.27455,39.293261 c -0.16504,-0.651959 -0.7489,-1.951196 -1.29741,-2.887186 -3.18923,-5.442003 -10.64249,-6.27425 -15.138,-1.690343 -1.74527,1.779587 -2.3576,3.11224 -2.58567,5.627502 -0.28572,3.151055 0.42762,5.253646 2.58223,7.611136 l 1.81295,1.983661 V 87.022665 124.1073 h 5.0514 5.0514 V 86.921065 49.734831 l 1.22566,-0.934852 c 2.47398,-1.887009 4.06516,-6.474434 3.29744,-9.506718 z m -4.43015,4.732629 c -0.96679,1.924262 -2.80006,3.001169 -5.10614,2.999475 -2.55903,-0.0026 -4.17074,-1.014703 -5.15483,-3.239426 -2.50362,-5.659808 3.98002,-10.63244 8.85913,-6.794526 1.99845,1.571969 2.60842,4.632907 1.40184,7.034477 z"
           id="path268-51-92-7-5-6-2" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 756.18817,70.9897 c -0.16504,-0.65196 -0.7489,-1.951196 -1.29741,-2.887186 -3.18923,-5.442003 -10.64249,-6.27425 -15.138,-1.690344 -1.74527,1.779588 -2.3576,3.112241 -2.58567,5.627503 -0.28572,3.151055 0.42762,5.253645 2.58223,7.611136 l 1.81295,1.98366 v 37.084631 37.08464 h 5.0514 5.0514 V 118.6175 81.431269 l 1.22565,-0.934852 c 2.47399,-1.887008 4.06517,-6.474433 3.29745,-9.506717 z m -4.43015,4.732629 c -0.96679,1.924261 -2.80006,3.001168 -5.10614,2.999475 -2.55903,-0.0026 -4.17074,-1.014704 -5.15483,-3.239426 -2.50362,-5.659808 3.98002,-10.63244 8.85912,-6.794526 1.99845,1.571968 2.60843,4.632907 1.40185,7.034477 z"
           id="path268-51-9-4-6-9-3-6" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 813.74008,15.190884 c -0.16505,-0.65196 -0.74891,-1.951196 -1.29742,-2.887186 -3.18923,-5.4420029 -10.64249,-6.2742497 -15.138,-1.690344 -1.74527,1.779588 -2.35759,3.112241 -2.58567,5.627503 -0.28572,3.151055 0.42762,5.253646 2.58223,7.611136 l 1.81295,1.983661 v 37.084634 37.084632 h 5.0514 5.0514 V 62.818688 25.632454 l 1.22566,-0.934853 c 2.47398,-1.887008 4.06516,-6.474433 3.29745,-9.506717 z m -4.43016,4.732629 c -0.96679,1.924261 -2.80006,3.001168 -5.10614,2.999475 -2.55903,-0.0026 -4.17074,-1.014703 -5.15483,-3.239426 -2.50362,-5.659808 3.98002,-10.6324398 8.85913,-6.794526 1.99845,1.571969 2.60842,4.632907 1.40184,7.034477 z"
           id="path268-51-9-8-7-0-0-4-3" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 828.76698,37.562833 c 0.57486,-0.349064 1.90217,-0.865875 2.94957,-1.148529 6.08987,-1.643274 11.98706,2.98995 11.97753,9.410356 -0.004,2.492586 -0.50165,3.872044 -2.10288,5.825146 -2.10235,2.564394 -4.06019,3.510041 -7.43651,3.591824 l -2.85435,0.06914 -11.03665,11.220397 -11.03664,11.22037 -0.11284,35.262843 -0.11282,35.26285 -4.92186,-0.07 c -2.70701,-0.0385 -4.96451,-0.14293 -5.01663,-0.23199 -0.0521,-0.089 -0.0512,-16.85716 0.003,-37.26246 l 0.0968,-37.100556 12.7335,-12.962863 12.7335,-12.962837 -0.20093,-1.269154 c -0.44333,-2.800217 1.75453,-7.285143 4.33917,-8.854519 z m -0.48895,6.955155 c -0.63243,2.759578 1.47103,5.971673 4.35152,6.644931 5.52154,1.290611 9.40001,-5.573739 5.38224,-9.52574 -3.40559,-3.349811 -8.66238,-1.793981 -9.73376,2.880809 z"
           id="path270-3-6-0-1-2-2-7-9-3-5" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 824.90285,222.18535 c -0.16505,0.65196 -0.74891,1.9512 -1.29741,2.88719 -3.18924,5.442 -10.6425,6.27425 -15.13801,1.69034 -1.74527,-1.77958 -2.35759,-3.11224 -2.58566,-5.6275 -0.28573,-3.15105 0.42761,-5.25365 2.58222,-7.61114 l 1.81295,-1.98366 v -37.08463 -37.08464 h 5.0514 5.0514 v 37.18624 37.18623 l 1.22566,0.93486 c 2.47398,1.887 4.06516,6.47443 3.29745,9.50671 z m -4.43016,-4.73263 c -0.96679,-1.92426 -2.80006,-3.00116 -5.10614,-2.99947 -2.55903,0.003 -4.17073,1.0147 -5.15483,3.23943 -2.50362,5.6598 3.98003,10.63244 8.85913,6.79452 1.99845,-1.57197 2.60842,-4.63291 1.40184,-7.03448 z"
           id="path268-51-92-5-4-6-2-0" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 719.73616,29.346824 c -0.33031,-0.58583 -0.80396,-1.929164 -1.05262,-2.985154 -1.4456,-6.139772 3.37579,-11.884146 9.79255,-11.667159 2.49113,0.08424 3.85379,0.626536 5.75413,2.29004 2.38072,2.083991 3.31486,4.098219 3.38151,7.291282 l 0.0561,2.686738 25.58415,26.846254 25.58415,26.846239 -3.65681,3.484906 -3.6568,3.48488 -25.65424,-26.919792 -25.65424,-26.91982 -1.53223,0.168805 c -3.09276,0.34073 -7.40944,-1.882458 -8.94561,-4.607219 z m 6.47202,0.369731 c 2.0274,0.726043 4.0975,0.240877 5.76575,-1.351272 1.85068,-1.767348 2.31923,-3.61189 1.49683,-5.901319 -2.09219,-5.82445 -10.21638,-4.951262 -11.10073,1.193096 -0.36224,2.51668 1.30789,5.153361 3.83815,6.059495 z"
           id="path268-51-9-4-1-7-0-8-2" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 799.27685,248.65196 c -0.16505,0.65196 -0.74891,1.9512 -1.29742,2.88719 -3.18923,5.442 -10.64249,6.27425 -15.138,1.69034 -1.74527,-1.77959 -2.35759,-3.11224 -2.58567,-5.6275 -0.28572,-3.15106 0.42762,-5.25365 2.58223,-7.61114 l 1.81295,-1.98366 v -37.08463 -37.08464 h 5.0514 5.0514 v 37.18624 37.18623 l 1.22566,0.93486 c 2.47398,1.887 4.06516,6.47443 3.29745,9.50671 z m -4.43016,-4.73263 c -0.96679,-1.92426 -2.80006,-3.00116 -5.10614,-2.99947 -2.55903,0.003 -4.17074,1.0147 -5.15483,3.23942 -2.50362,5.65981 3.98002,10.63244 8.85913,6.79453 1.99845,-1.57197 2.60842,-4.63291 1.40184,-7.03448 z"
           id="path268-51-9-8-7-9-52-6-0-7" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 738.58298,235.40478 c -0.57486,0.34906 -1.90216,0.86587 -2.94957,1.14852 -6.08986,1.64328 -11.98705,-2.98995 -11.97753,-9.41035 0.004,-2.49259 0.50165,-3.87205 2.10288,-5.82515 2.10236,-2.56439 4.06019,-3.51004 7.43651,-3.59182 l 2.85436,-0.0691 11.03664,-11.22039 11.03664,-11.22037 0.11285,-35.26285 0.11282,-35.26285 4.92185,0.07 c 2.70701,0.0386 4.96451,0.14293 5.01664,0.23199 0.0521,0.089 0.0512,16.85715 -0.003,37.26246 l -0.0968,37.10056 -12.7335,12.96286 -12.73349,12.96284 0.20092,1.26915 c 0.44334,2.80022 -1.75453,7.28515 -4.33916,8.85452 z m 0.48895,-6.95516 c 0.63244,-2.75958 -1.47103,-5.97167 -4.35152,-6.64493 -5.52154,-1.29061 -9.40001,5.57374 -5.38223,9.52574 3.40558,3.34981 8.66238,1.79398 9.73375,-2.88081 z"
           id="path270-3-6-0-1-5-7-4-6-5-0" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 835.8154,109.58368 c 0.65196,-0.16505 1.9512,-0.7489 2.88719,-1.29741 5.442,-3.18923 6.27425,-10.642494 1.69034,-15.138003 -1.77959,-1.745271 -3.11224,-2.357596 -5.6275,-2.585667 -3.15106,-0.285724 -5.25365,0.427619 -7.61114,2.582227 l -1.98366,1.812952 H 788.086 751.00136 v 5.051401 5.0514 h 37.18624 37.18623 l 0.93485,1.22565 c 1.88701,2.47399 6.47444,4.06517 9.50672,3.29745 z m -4.73263,-4.43016 c -1.92426,-0.96678 -3.00117,-2.80006 -2.99947,-5.10614 0.003,-2.55902 1.0147,-4.17073 3.23942,-5.154821 5.65981,-2.50362 10.63244,3.980021 6.79453,8.859121 -1.57197,1.99845 -4.63291,2.60842 -7.03448,1.40184 z"
           id="path268-51-9-4-1-6-1-5-2-4" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 891.25595,170.35995 c 0.65196,-0.16504 1.9512,-0.7489 2.88719,-1.29741 5.442,-3.18923 6.27425,-10.64249 1.69034,-15.138 -1.77958,-1.74527 -3.11224,-2.3576 -5.6275,-2.58567 -3.15105,-0.28572 -5.25365,0.42762 -7.61114,2.58223 l -1.98366,1.81295 h -37.08463 -37.08464 v 5.0514 5.0514 h 37.18624 37.18623 l 0.93486,1.22565 c 1.887,2.47399 6.47443,4.06517 9.50671,3.29745 z m -4.73263,-4.43015 c -1.92426,-0.96679 -3.00116,-2.80006 -2.99947,-5.10614 0.003,-2.55903 1.0147,-4.17074 3.23943,-5.15483 5.6598,-2.50362 10.63243,3.98002 6.79452,8.85912 -1.57197,1.99846 -4.63291,2.60843 -7.03448,1.40185 z"
           id="path268-51-9-8-7-9-5-2-2-4-0" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 892.34667,95.005457 c 0.34907,-0.574861 0.86588,-1.902169 1.14853,-2.949575 1.64328,-6.089862 -2.98995,-11.987054 -9.41035,-11.977529 -2.49259,0.0037 -3.87205,0.50165 -5.82515,2.102882 -2.5644,2.102353 -3.51004,4.06019 -3.59183,7.436511 l -0.0691,2.854352 -11.2204,11.036642 -11.22037,11.03665 -35.26284,0.11284 -35.26285,0.11282 0.07,4.92186 c 0.0385,2.707 0.14293,4.96451 0.23199,5.01663 0.089,0.0521 16.85716,0.0512 37.26246,-0.003 l 37.10056,-0.0968 12.96287,-12.73349 12.96284,-12.7335 1.26915,0.200925 c 2.80022,0.443336 7.28514,-1.754532 8.85452,-4.339167 z m -6.95515,0.48895 c -2.75958,0.632433 -5.97168,-1.471031 -6.64493,-4.351523 -1.29062,-5.521537 5.57373,-9.400011 9.52574,-5.382233 3.34981,3.405584 1.79398,8.662378 -2.88081,9.733756 z"
           id="path270-3-6-0-1-5-7-0-4-6-2-4" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 868.884,185.38686 c 0.34907,0.57486 0.86588,1.90217 1.14853,2.94957 1.64328,6.08986 -2.98995,11.98706 -9.41035,11.97753 -2.49259,-0.004 -3.87205,-0.50165 -5.82515,-2.10288 -2.56439,-2.10235 -3.51004,-4.06019 -3.59182,-7.43651 l -0.0691,-2.85435 -11.2204,-11.03665 -11.22037,-11.03664 -35.26284,-0.11285 -35.26285,-0.11281 0.07,-4.92186 c 0.0385,-2.70701 0.14293,-4.96451 0.23198,-5.01663 0.089,-0.0522 16.85716,-0.0512 37.26246,0.003 l 37.10057,0.0968 12.96286,12.7335 12.96284,12.73349 1.26915,-0.20092 c 2.80022,-0.44334 7.28514,1.75453 8.85452,4.33917 z m -6.95515,-0.48895 c -2.75958,-0.63244 -5.97167,1.47103 -6.64493,4.35152 -1.29061,5.52154 5.57374,9.40001 9.52574,5.38223 3.34981,-3.40558 1.79398,-8.66238 -2.88081,-9.73375 z"
           id="path270-3-6-0-1-2-2-1-9-3-8-9-0" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 683.75478,109.23639 c -0.65196,0.16505 -1.95119,0.74891 -2.88718,1.29741 -5.44201,3.18924 -6.27425,10.6425 -1.69035,15.13801 1.77959,1.74527 3.11224,2.35759 5.62751,2.58566 3.15105,0.28573 5.25364,-0.42761 7.61113,-2.58222 l 1.98366,-1.81295 h 37.08464 37.08463 v -5.0514 -5.0514 h -37.18623 -37.18624 l -0.93485,-1.22566 c -1.88701,-2.47398 -6.47443,-4.06516 -9.50672,-3.29745 z m 4.73263,4.43016 c 1.92426,0.96679 3.00117,2.80006 2.99948,5.10614 -0.003,2.55902 -1.01471,4.17073 -3.23943,5.15483 -5.65981,2.50362 -10.63244,-3.98003 -6.79453,-8.85913 1.57197,-1.99845 4.63291,-2.60842 7.03448,-1.40184 z"
           id="path268-51-92-9-4-3-9-3" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 715.09296,149.54715 c -0.65196,0.16504 -1.9512,0.7489 -2.88719,1.29741 -5.442,3.18923 -6.27425,10.64249 -1.69034,15.138 1.77959,1.74527 3.11224,2.3576 5.6275,2.58567 3.15106,0.28572 5.25365,-0.42762 7.61114,-2.58223 l 1.98366,-1.81295 h 37.08463 37.08464 v -5.0514 -5.0514 h -37.18624 -37.18623 l -0.93485,-1.22566 c -1.88701,-2.47398 -6.47444,-4.06516 -9.50672,-3.29744 z m 4.73263,4.43015 c 1.92426,0.96679 3.00117,2.80006 2.99947,5.10614 -0.003,2.55903 -1.0147,4.17074 -3.23942,5.15483 -5.65981,2.50362 -10.63244,-3.98002 -6.79453,-8.85913 1.57197,-1.99845 4.63291,-2.60842 7.03448,-1.40184 z"
           id="path268-51-9-4-10-1-5-2-7" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 658.93588,88.770873 c -0.65196,0.165047 -1.9512,0.748903 -2.88719,1.297411 -5.442,3.189235 -6.27425,10.642496 -1.69034,15.138006 1.77958,1.74527 3.11224,2.35759 5.6275,2.58566 3.15105,0.28573 5.25364,-0.42762 7.61113,-2.58222 l 1.98367,-1.81295 h 37.08463 37.08463 v -5.051403 -5.051399 h -37.18623 -37.18623 l -0.93486,-1.225656 c -1.88701,-2.473986 -6.47443,-4.065164 -9.50671,-3.297449 z m 4.73262,4.430157 c 1.92427,0.966788 3.00117,2.800059 2.99948,5.106141 -0.003,2.559019 -1.0147,4.170729 -3.23943,5.154819 -5.6598,2.50362 -10.63244,-3.980016 -6.79452,-8.859118 1.57197,-1.998451 4.6329,-2.608421 7.03447,-1.401842 z"
           id="path268-51-9-8-7-7-8-2-4-0" /><path
           style="mix-blend-mode:normal;fill:#0753eb;fill-opacity:1;stroke-width:0.374176"
           d="m 658.56169,164.12537 c -0.34907,0.57486 -0.86588,1.90217 -1.14853,2.94957 -1.64328,6.08987 2.98995,11.98706 9.41035,11.97753 2.49259,-0.004 3.87205,-0.50165 5.82515,-2.10288 2.56439,-2.10235 3.51004,-4.06019 3.59182,-7.43651 l 0.0691,-2.85435 11.2204,-11.03665 11.22037,-11.03664 35.26284,-0.11284 35.26285,-0.11282 -0.07,-4.92186 c -0.0385,-2.70701 -0.14292,-4.96451 -0.23198,-5.01663 -0.089,-0.0522 -16.85716,-0.0512 -37.26246,0.003 l -37.10057,0.0968 -12.96286,12.7335 -12.96284,12.7335 -1.26915,-0.20093 c -2.80022,-0.44333 -7.28514,1.75453 -8.85452,4.33917 z m 6.95515,-0.48895 c 2.75958,-0.63243 5.97167,1.47103 6.64493,4.35152 1.29061,5.52154 -5.57374,9.40001 -9.52574,5.38224 -3.34981,-3.40559 -1.79398,-8.66238 2.88081,-9.73376 z"
           id="path270-3-6-0-1-5-2-3-5-7-0" /></g><rect
         style="mix-blend-mode:normal;fill:#18ff00;fill-opacity:1;fill-rule:nonzero;stroke-width:1.66773;filter:url(#filter275-9-9-8-8-7)"
         id="rect41-1-4-2-3-7-0"
         width="685.83972"
         height="676.04199"
         x="7207.8877"
         y="-3316.1125"
         ry="173.94908"
         rx="159.08235"
         transform="matrix(0.27936208,0,0,0.27410642,-1329.746,944.93374)" /></g><g
       id="g11401-4-7-6"
       transform="matrix(0.01709348,0,0,0.01689728,114.22625,317.38731)"
       style="fill:#ffffff;fill-opacity:1"><g
         clip-path="url(#484e6af075-2-4-4)"
         id="g11378-8-4-0"
         style="fill:#ffffff;fill-opacity:1"><path
           fill="#0753eb"
           d="m 701.5625,0 c 10.05469,50.335938 -15.11719,102.25781 -51.36328,138.50781 -36.25,36.32813 -82.63281,60.39063 -126.875,86.26953 -44.32031,25.88282 -88.56641,55.40235 -116.34375,98.53907 -24.22266,37.51562 -34.11328,82.47265 -39.17969,126.79296 -6.33203,53.82032 -5.46094,110.25391 11.63281,160.90625 12.42969,-30.55078 28.65235,-59.7539 47.09375,-87.0625 36.25,-53.73828 80.89063,-101.14843 125.28907,-148.32031 C 603.73828,320.54687 655.57812,265.53906 707.5,210.45312 653.75781,311.12891 570.49609,392.33203 500.13672,482.16406 429.77344,572.07422 369.78125,679.39844 376.34766,793.37109 381.57422,735.03906 428.90234,688.73828 480.26953,660.5625 531.63672,632.38672 589.17578,616.63672 639.75,587.19141 735.4375,531.47266 799.78516,425.25781 804.77344,314.60937 809.83594,202.69531 758.78906,96.242188 701.5625,0 Z m 0,0"
           fill-opacity="1"
           fill-rule="nonzero"
           id="path11376-8-9-6"
           style="fill:#ffffff;fill-opacity:1" /></g><g
         clip-path="url(#72fe526092-5-8-4)"
         id="g11384-0-1-2"
         style="fill:#ffffff;fill-opacity:1"><g
           clip-path="url(#f0aa310c86-6-5-0)"
           id="g11382-2-5-8"
           style="fill:#ffffff;fill-opacity:1"><path
             fill="#0753eb"
             d="M 339.78125,48.28125 V 649.40234 H 0.164062 V 48.28125 Z m 0,0"
             fill-opacity="1"
             fill-rule="nonzero"
             id="path11380-4-1-9"
             style="fill:#ffffff;fill-opacity:1" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="0.4"
       id="g3312-6"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(73.879601,75.826451)"
         id="g3310-3"><g
           id="g3308-0"><path
             d="m 26.296875,-27.71875 h 10.4375 l -5.28125,25.078125 c -0.386719,1.9375 -1.03125,3.71875 -1.9375,5.34375 -0.898437,1.632813 -2.152344,3.050781 -3.765625,4.25 -1.617188,1.207031 -3.636719,2.15625 -6.0625,2.84375 -2.429688,0.6875 -5.382812,1.03125 -8.859375,1.03125 -0.648437,0 -1.421875,-0.01172 -2.328125,-0.03125 -0.898438,-0.02344 -1.820312,-0.04297 -2.765625,-0.0625 -0.949219,-0.02344 -1.855469,-0.05469 -2.71875,-0.09375 C 2.160156,10.597656 1.476562,10.550781 0.96875,10.5 L 2.1875,5.859375 C 3.5625,6.078125 4.96875,6.195312 6.40625,6.21875 7.851562,6.238281 9.09375,6.25 10.125,6.25 c 1.28125,0 2.363281,-0.121094 3.25,-0.359375 0.882812,-0.230469 1.613281,-0.605469 2.1875,-1.125 0.582031,-0.511719 1.054688,-1.199219 1.421875,-2.0625 0.363281,-0.855469 0.65625,-1.90625 0.875,-3.15625 l 0.765625,-4.1875 h -0.453125 c -0.25,0.386719 -0.625,0.851563 -1.125,1.390625 -0.492187,0.53125 -1.125,1.046875 -1.90625,1.546875 -0.773437,0.492187 -1.683594,0.898437 -2.734375,1.21875 C 11.351562,-0.160156 10.160156,0 8.828125,0 7.328125,0 6.050781,-0.222656 5,-0.671875 3.945312,-1.128906 3.097656,-1.753906 2.453125,-2.546875 1.804688,-3.335938 1.332031,-4.28125 1.03125,-5.375 0.726562,-6.476562 0.578125,-7.671875 0.578125,-8.953125 c 0,-0.5625 0.039063,-1.421875 0.125,-2.578125 0.09375,-1.164062 0.300781,-2.476562 0.625,-3.9375 0.320313,-1.457031 0.789063,-2.945312 1.40625,-4.46875 0.625,-1.53125 1.460937,-2.914062 2.515625,-4.15625 1.050781,-1.25 2.359375,-2.28125 3.921875,-3.09375 1.570313,-0.820312 3.476563,-1.234375 5.71875,-1.234375 0.6875,0 1.4375,0.07031 2.25,0.203125 0.820313,0.125 1.617187,0.359375 2.390625,0.703125 0.769531,0.34375 1.457031,0.839844 2.0625,1.484375 0.601562,0.636719 1.078125,1.46875 1.421875,2.5 h 0.375 z m -7.21875,5.609375 c -1.03125,0 -1.890625,0.546875 -2.578125,1.640625 -0.6875,1.09375 -1.246094,2.375 -1.671875,3.84375 -0.429687,1.460938 -0.742187,2.90625 -0.9375,4.34375 -0.199219,1.4375 -0.296875,2.5 -0.296875,3.1875 0,0.867188 0.140625,1.589844 0.421875,2.171875 0.28125,0.574219 0.785156,0.859375 1.515625,0.859375 0.425781,0 0.84375,-0.101562 1.25,-0.3125 0.414062,-0.21875 0.804688,-0.46875 1.171875,-0.75 0.363281,-0.28125 0.6875,-0.566406 0.96875,-0.859375 0.28125,-0.300781 0.484375,-0.539063 0.609375,-0.71875 l 2.390625,-11.28125 c -0.34375,-0.46875 -0.746094,-0.9375 -1.203125,-1.40625 -0.449219,-0.476563 -0.996094,-0.71875 -1.640625,-0.71875 z m 0,0"
             id="path3306-6" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="0.4"
       id="g3320-4"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(111.13513,75.826451)"
         id="g3318-3"><g
           id="g3316-3"><path
             d="m 4.640625,-25.328125 c 2.1875,-1.070313 4.429687,-1.851563 6.734375,-2.34375 2.300781,-0.5 4.867188,-0.75 7.703125,-0.75 2.75,0 5.023437,0.214844 6.828125,0.640625 1.8125,0.429688 3.253906,1.054688 4.328125,1.875 1.070313,0.8125 1.820313,1.78125 2.25,2.90625 0.425781,1.117188 0.640625,2.382812 0.640625,3.796875 0,0.8125 -0.05469,1.695313 -0.15625,2.640625 -0.105469,0.949219 -0.226562,1.742188 -0.359375,2.375 L 29.578125,0 h -10.375 l -1.15625,-4.125 H 17.65625 c -1.375,1.5 -2.976562,2.652344 -4.796875,3.453125 C 11.035156,0.117188 9.21875,0.515625 7.40625,0.515625 6.375,0.515625 5.363281,0.363281 4.375,0.0625 3.394531,-0.238281 2.515625,-0.695312 1.734375,-1.3125 0.960938,-1.9375 0.34375,-2.734375 -0.125,-3.703125 -0.601562,-4.671875 -0.84375,-5.84375 -0.84375,-7.21875 c 0,-2.238281 0.617188,-4.007812 1.84375,-5.3125 1.226562,-1.3125 2.835938,-2.300781 4.828125,-2.96875 2,-0.664062 4.253906,-1.082031 6.765625,-1.25 2.519531,-0.175781 5.046875,-0.265625 7.578125,-0.265625 0.08203,-0.425781 0.1875,-1.035156 0.3125,-1.828125 0.132813,-0.800781 0.203125,-1.503906 0.203125,-2.109375 0,-0.769531 -0.203125,-1.488281 -0.609375,-2.15625 -0.40625,-0.664063 -1.257813,-1 -2.546875,-1 -1.5,0 -2.605469,0.445313 -3.3125,1.328125 -0.710938,0.875 -1.171875,1.9375 -1.390625,3.1875 h -9.40625 z m 14.828125,11.34375 H 18.3125 c -1.25,0 -2.320312,0.164063 -3.203125,0.484375 -0.875,0.324219 -1.585937,0.746094 -2.125,1.265625 -0.53125,0.511719 -0.929687,1.089844 -1.1875,1.734375 -0.261719,0.636719 -0.390625,1.277344 -0.390625,1.921875 0,1.03125 0.265625,1.808594 0.796875,2.328125 0.539063,0.511719 1.175781,0.765625 1.90625,0.765625 0.90625,0 1.796875,-0.316406 2.671875,-0.953125 0.882812,-0.644531 1.4375,-1.507812 1.65625,-2.59375 z m 0,0"
             id="path3314-3" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="0.4"
       id="g3328-9"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(146.7148,75.826451)"
         id="g3326-1"><g
           id="g3324-8"><path
             d="M 5.21875,-27.71875 H 15.734375 L 16.6875,-22.875 h 0.453125 c 0.988281,-1.550781 2.253906,-2.863281 3.796875,-3.9375 1.550781,-1.070312 3.597656,-1.609375 6.140625,-1.609375 0.164063,0 0.429687,0.01172 0.796875,0.03125 0.363281,0.02344 0.769531,0.08984 1.21875,0.203125 0.457031,0.105469 0.929688,0.257812 1.421875,0.453125 0.5,0.1875 0.984375,0.453125 1.453125,0.796875 l -2.828125,13.265625 h -7.03125 c -0.08594,-2.65625 -0.324219,-4.507813 -0.71875,-5.5625 -0.386719,-1.050781 -1.007813,-1.578125 -1.859375,-1.578125 -0.429688,0 -0.890625,0.101562 -1.390625,0.296875 -0.492187,0.1875 -0.996094,0.605469 -1.515625,1.25 L 12.5,0 H -0.640625 Z m 0,0"
             id="path3322-0" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="0.4"
       id="g3336-7"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(177.84701,75.826451)"
         id="g3334-2"><g
           id="g3332-7"><path
             d="M 26.8125,-43.3125 H 40.03125 L 30.8125,0 H 20.375 L 19.203125,-4.125 H 18.75 c -0.25,0.386719 -0.648438,0.851562 -1.1875,1.390625 -0.53125,0.53125 -1.210938,1.046875 -2.03125,1.546875 -0.8125,0.492188 -1.78125,0.898438 -2.90625,1.21875 -1.117188,0.320312 -2.402344,0.484375 -3.859375,0.484375 -1.5,0 -2.777344,-0.226563 -3.828125,-0.671875 C 3.882812,-0.613281 3.023438,-1.226562 2.359375,-2 1.691406,-2.769531 1.207031,-3.703125 0.90625,-4.796875 0.601562,-5.898438 0.453125,-7.09375 0.453125,-8.375 c 0,-0.5625 0.039063,-1.453125 0.125,-2.671875 0.082031,-1.226563 0.285156,-2.582031 0.609375,-4.0625 0.320312,-1.488281 0.796875,-3.015625 1.421875,-4.578125 0.625,-1.570312 1.460937,-3 2.515625,-4.28125 1.050781,-1.289062 2.347656,-2.351562 3.890625,-3.1875 C 10.566406,-28 12.4375,-28.421875 14.625,-28.421875 c 0.6875,0 1.414062,0.07031 2.1875,0.203125 0.78125,0.125 1.523438,0.359375 2.234375,0.703125 0.707031,0.34375 1.335937,0.839844 1.890625,1.484375 0.5625,0.636719 0.972656,1.46875 1.234375,2.5 H 22.625 Z m -7.859375,21.203125 c -1.03125,0 -1.890625,0.574219 -2.578125,1.71875 -0.6875,1.136719 -1.25,2.453125 -1.6875,3.953125 -0.429688,1.5 -0.742188,3.007812 -0.9375,4.515625 -0.1875,1.5 -0.28125,2.617187 -0.28125,3.34375 0,0.867187 0.128906,1.589844 0.390625,2.171875 0.257813,0.574219 0.753906,0.859375 1.484375,0.859375 0.425781,0 0.84375,-0.09375 1.25,-0.28125 0.40625,-0.195313 0.789062,-0.4375 1.15625,-0.71875 0.375,-0.28125 0.6875,-0.566406 0.9375,-0.859375 0.257812,-0.300781 0.476562,-0.5625 0.65625,-0.78125 l 2.5,-11.734375 c -0.292969,-0.46875 -0.6875,-0.945313 -1.1875,-1.4375 -0.492188,-0.5 -1.058594,-0.75 -1.703125,-0.75 z m 0,0"
             id="path3330-6" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="0.4"
       id="g3344-6"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(215.03808,75.826451)"
         id="g3342-2"><g
           id="g3340-5"><path
             d="m 14.046875,-12.953125 c -0.167969,0.949219 -0.289063,1.855469 -0.359375,2.71875 -0.0625,0.855469 -0.09375,1.625 -0.09375,2.3125 0,0.386719 0.01953,0.8125 0.0625,1.28125 0.05078,0.46875 0.148438,0.914063 0.296875,1.328125 0.15625,0.40625 0.367187,0.75 0.640625,1.03125 0.28125,0.273438 0.679688,0.40625 1.203125,0.40625 0.382813,0 0.820313,-0.125 1.3125,-0.375 0.5,-0.257812 0.992187,-0.625 1.484375,-1.09375 0.5,-0.476562 0.972656,-1.0625 1.421875,-1.75 0.445313,-0.6875 0.800781,-1.457031 1.0625,-2.3125 h 10.5625 L 29.96875,-2.515625 C 29.113281,-1.953125 28.125,-1.476562 27,-1.09375 c -1.117188,0.386719 -2.296875,0.699219 -3.546875,0.9375 -1.242187,0.2265625 -2.507813,0.394531 -3.796875,0.5 -1.292969,0.113281 -2.515625,0.171875 -3.671875,0.171875 -2.148437,0 -4.148437,-0.195313 -6,-0.578125 -1.84375,-0.382812 -3.453125,-1.050781 -4.828125,-2 -1.375,-0.945312 -2.464844,-2.203125 -3.265625,-3.765625 -0.792969,-1.570313 -1.1875,-3.519531 -1.1875,-5.84375 0,-2.101563 0.332031,-4.164063 1,-6.1875 0.664063,-2.019531 1.78125,-3.8125 3.34375,-5.375 C 6.617188,-24.804688 8.726562,-26.0625 11.375,-27 c 2.644531,-0.945312 5.941406,-1.421875 9.890625,-1.421875 4.300781,0 7.535156,0.667969 9.703125,2 2.164062,1.335937 3.25,3.417969 3.25,6.25 0,1.15625 -0.171875,2.414063 -0.515625,3.765625 -0.34375,1.355469 -0.859375,2.507812 -1.546875,3.453125 z M 22.625,-20.625 c 0,-1.332031 -0.21875,-2.234375 -0.65625,-2.703125 -0.429688,-0.476563 -0.9375,-0.71875 -1.53125,-0.71875 -0.6875,0 -1.324219,0.230469 -1.90625,0.6875 -0.585938,0.449219 -1.109375,1.046875 -1.578125,1.796875 -0.46875,0.75 -0.902344,1.609375 -1.296875,2.578125 -0.386719,0.96875 -0.703125,1.992187 -0.953125,3.0625 h 7.34375 c 0.08203,-0.507813 0.164063,-1.046875 0.25,-1.609375 0.09375,-0.46875 0.171875,-0.984375 0.234375,-1.546875 0.0625,-0.5625 0.09375,-1.078125 0.09375,-1.546875 z m 0,0"
             id="path3338-1" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="0.4"
       id="g3352-6"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(250.29546,75.826451)"
         id="g3350-1"><g
           id="g3348-5"><path
             d="m 17.28125,-23.59375 c 0.894531,-0.851562 1.898438,-1.644531 3.015625,-2.375 0.988281,-0.601562 2.148437,-1.160156 3.484375,-1.671875 1.332031,-0.519531 2.816406,-0.78125 4.453125,-0.78125 2.226563,0 4.070313,0.570313 5.53125,1.703125 1.46875,1.136719 2.203125,2.695312 2.203125,4.671875 0,0.5625 -0.07031,1.242187 -0.203125,2.03125 -0.125,0.792969 -0.277344,1.621094 -0.453125,2.484375 -0.167969,0.855469 -0.351562,1.726562 -0.546875,2.609375 -0.1875,0.886719 -0.34375,1.671875 -0.46875,2.359375 L 31.578125,0 H 18.5 l 3.546875,-16.828125 c 0.08203,-0.550781 0.1875,-1.117187 0.3125,-1.703125 0.132813,-0.582031 0.203125,-1.109375 0.203125,-1.578125 0,-0.644531 -0.164062,-1.171875 -0.484375,-1.578125 -0.324219,-0.40625 -0.808594,-0.609375 -1.453125,-0.609375 -0.773438,0 -1.511719,0.28125 -2.21875,0.84375 -0.710938,0.554687 -1.257812,1.023437 -1.640625,1.40625 L 12.5,0 H -0.640625 L 5.21875,-27.71875 h 10.515625 l 1.15625,4.125 z m 0,0"
             id="path3346-4" /></g></g></g><g
       fill="#18b400"
       fill-opacity="1"
       id="g3360-8"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#1c9712;fill-opacity:1"><g
         transform="translate(71.03089,72.97774)"
         id="g3358-8"
         style="fill:#1c9712;fill-opacity:1"><g
           id="g3356-5"
           style="fill:#1c9712;fill-opacity:1"><path
             d="m 26.296875,-27.71875 h 10.4375 l -5.28125,25.078125 c -0.386719,1.9375 -1.03125,3.71875 -1.9375,5.34375 -0.898437,1.632813 -2.152344,3.050781 -3.765625,4.25 -1.617188,1.207031 -3.636719,2.15625 -6.0625,2.84375 -2.429688,0.6875 -5.382812,1.03125 -8.859375,1.03125 -0.648437,0 -1.421875,-0.01172 -2.328125,-0.03125 -0.898438,-0.02344 -1.820312,-0.04297 -2.765625,-0.0625 -0.949219,-0.02344 -1.855469,-0.05469 -2.71875,-0.09375 C 2.160156,10.597656 1.476562,10.550781 0.96875,10.5 L 2.1875,5.859375 C 3.5625,6.078125 4.96875,6.195312 6.40625,6.21875 7.851562,6.238281 9.09375,6.25 10.125,6.25 c 1.28125,0 2.363281,-0.121094 3.25,-0.359375 0.882812,-0.230469 1.613281,-0.605469 2.1875,-1.125 0.582031,-0.511719 1.054688,-1.199219 1.421875,-2.0625 0.363281,-0.855469 0.65625,-1.90625 0.875,-3.15625 l 0.765625,-4.1875 h -0.453125 c -0.25,0.386719 -0.625,0.851563 -1.125,1.390625 -0.492187,0.53125 -1.125,1.046875 -1.90625,1.546875 -0.773437,0.492187 -1.683594,0.898437 -2.734375,1.21875 C 11.351562,-0.160156 10.160156,0 8.828125,0 7.328125,0 6.050781,-0.222656 5,-0.671875 3.945312,-1.128906 3.097656,-1.753906 2.453125,-2.546875 1.804688,-3.335938 1.332031,-4.28125 1.03125,-5.375 0.726562,-6.476562 0.578125,-7.671875 0.578125,-8.953125 c 0,-0.5625 0.039063,-1.421875 0.125,-2.578125 0.09375,-1.164062 0.300781,-2.476562 0.625,-3.9375 0.320313,-1.457031 0.789063,-2.945312 1.40625,-4.46875 0.625,-1.53125 1.460937,-2.914062 2.515625,-4.15625 1.050781,-1.25 2.359375,-2.28125 3.921875,-3.09375 1.570313,-0.820312 3.476563,-1.234375 5.71875,-1.234375 0.6875,0 1.4375,0.07031 2.25,0.203125 0.820313,0.125 1.617187,0.359375 2.390625,0.703125 0.769531,0.34375 1.457031,0.839844 2.0625,1.484375 0.601562,0.636719 1.078125,1.46875 1.421875,2.5 h 0.375 z m -7.21875,5.609375 c -1.03125,0 -1.890625,0.546875 -2.578125,1.640625 -0.6875,1.09375 -1.246094,2.375 -1.671875,3.84375 -0.429687,1.460938 -0.742187,2.90625 -0.9375,4.34375 -0.199219,1.4375 -0.296875,2.5 -0.296875,3.1875 0,0.867188 0.140625,1.589844 0.421875,2.171875 0.28125,0.574219 0.785156,0.859375 1.515625,0.859375 0.425781,0 0.84375,-0.101562 1.25,-0.3125 0.414062,-0.21875 0.804688,-0.46875 1.171875,-0.75 0.363281,-0.28125 0.6875,-0.566406 0.96875,-0.859375 0.28125,-0.300781 0.484375,-0.539063 0.609375,-0.71875 l 2.390625,-11.28125 c -0.34375,-0.46875 -0.746094,-0.9375 -1.203125,-1.40625 -0.449219,-0.476563 -0.996094,-0.71875 -1.640625,-0.71875 z m 0,0"
             id="path3354-9"
             style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
       fill="#18b400"
       fill-opacity="1"
       id="g3368-1"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#1c9712;fill-opacity:1"><g
         transform="translate(108.28642,72.97774)"
         id="g3366-5"
         style="fill:#1c9712;fill-opacity:1"><g
           id="g3364-7"
           style="fill:#1c9712;fill-opacity:1"><path
             d="m 4.640625,-25.328125 c 2.1875,-1.070313 4.429687,-1.851563 6.734375,-2.34375 2.300781,-0.5 4.867188,-0.75 7.703125,-0.75 2.75,0 5.023437,0.214844 6.828125,0.640625 1.8125,0.429688 3.253906,1.054688 4.328125,1.875 1.070313,0.8125 1.820313,1.78125 2.25,2.90625 0.425781,1.117188 0.640625,2.382812 0.640625,3.796875 0,0.8125 -0.05469,1.695313 -0.15625,2.640625 -0.105469,0.949219 -0.226562,1.742188 -0.359375,2.375 L 29.578125,0 h -10.375 l -1.15625,-4.125 H 17.65625 c -1.375,1.5 -2.976562,2.652344 -4.796875,3.453125 C 11.035156,0.117188 9.21875,0.515625 7.40625,0.515625 6.375,0.515625 5.363281,0.363281 4.375,0.0625 3.394531,-0.238281 2.515625,-0.695312 1.734375,-1.3125 0.960938,-1.9375 0.34375,-2.734375 -0.125,-3.703125 -0.601562,-4.671875 -0.84375,-5.84375 -0.84375,-7.21875 c 0,-2.238281 0.617188,-4.007812 1.84375,-5.3125 1.226562,-1.3125 2.835938,-2.300781 4.828125,-2.96875 2,-0.664062 4.253906,-1.082031 6.765625,-1.25 2.519531,-0.175781 5.046875,-0.265625 7.578125,-0.265625 0.08203,-0.425781 0.1875,-1.035156 0.3125,-1.828125 0.132813,-0.800781 0.203125,-1.503906 0.203125,-2.109375 0,-0.769531 -0.203125,-1.488281 -0.609375,-2.15625 -0.40625,-0.664063 -1.257813,-1 -2.546875,-1 -1.5,0 -2.605469,0.445313 -3.3125,1.328125 -0.710938,0.875 -1.171875,1.9375 -1.390625,3.1875 h -9.40625 z m 14.828125,11.34375 H 18.3125 c -1.25,0 -2.320312,0.164063 -3.203125,0.484375 -0.875,0.324219 -1.585937,0.746094 -2.125,1.265625 -0.53125,0.511719 -0.929687,1.089844 -1.1875,1.734375 -0.261719,0.636719 -0.390625,1.277344 -0.390625,1.921875 0,1.03125 0.265625,1.808594 0.796875,2.328125 0.539063,0.511719 1.175781,0.765625 1.90625,0.765625 0.90625,0 1.796875,-0.316406 2.671875,-0.953125 0.882812,-0.644531 1.4375,-1.507812 1.65625,-2.59375 z m 0,0"
             id="path3362-5"
             style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
       fill="#18b400"
       fill-opacity="1"
       id="g3376-0"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#1c9712;fill-opacity:1"><g
         transform="translate(143.86609,72.97774)"
         id="g3374-6"
         style="fill:#1c9712;fill-opacity:1"><g
           id="g3372-0"
           style="fill:#1c9712;fill-opacity:1"><path
             d="M 5.21875,-27.71875 H 15.734375 L 16.6875,-22.875 h 0.453125 c 0.988281,-1.550781 2.253906,-2.863281 3.796875,-3.9375 1.550781,-1.070312 3.597656,-1.609375 6.140625,-1.609375 0.164063,0 0.429687,0.01172 0.796875,0.03125 0.363281,0.02344 0.769531,0.08984 1.21875,0.203125 0.457031,0.105469 0.929688,0.257812 1.421875,0.453125 0.5,0.1875 0.984375,0.453125 1.453125,0.796875 l -2.828125,13.265625 h -7.03125 c -0.08594,-2.65625 -0.324219,-4.507813 -0.71875,-5.5625 -0.386719,-1.050781 -1.007813,-1.578125 -1.859375,-1.578125 -0.429688,0 -0.890625,0.101562 -1.390625,0.296875 -0.492187,0.1875 -0.996094,0.605469 -1.515625,1.25 L 12.5,0 H -0.640625 Z m 0,0"
             id="path3370-8"
             style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
       fill="#18b400"
       fill-opacity="1"
       id="g3384-4"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#1c9712;fill-opacity:1"><g
         transform="translate(174.9983,72.97774)"
         id="g3382-5"
         style="fill:#1c9712;fill-opacity:1"><g
           id="g3380-3"
           style="fill:#1c9712;fill-opacity:1"><path
             d="M 26.8125,-43.3125 H 40.03125 L 30.8125,0 H 20.375 L 19.203125,-4.125 H 18.75 c -0.25,0.386719 -0.648438,0.851562 -1.1875,1.390625 -0.53125,0.53125 -1.210938,1.046875 -2.03125,1.546875 -0.8125,0.492188 -1.78125,0.898438 -2.90625,1.21875 -1.117188,0.320312 -2.402344,0.484375 -3.859375,0.484375 -1.5,0 -2.777344,-0.226563 -3.828125,-0.671875 C 3.882812,-0.613281 3.023438,-1.226562 2.359375,-2 1.691406,-2.769531 1.207031,-3.703125 0.90625,-4.796875 0.601562,-5.898438 0.453125,-7.09375 0.453125,-8.375 c 0,-0.5625 0.039063,-1.453125 0.125,-2.671875 0.082031,-1.226563 0.285156,-2.582031 0.609375,-4.0625 0.320312,-1.488281 0.796875,-3.015625 1.421875,-4.578125 0.625,-1.570312 1.460937,-3 2.515625,-4.28125 1.050781,-1.289062 2.347656,-2.351562 3.890625,-3.1875 C 10.566406,-28 12.4375,-28.421875 14.625,-28.421875 c 0.6875,0 1.414062,0.07031 2.1875,0.203125 0.78125,0.125 1.523438,0.359375 2.234375,0.703125 0.707031,0.34375 1.335937,0.839844 1.890625,1.484375 0.5625,0.636719 0.972656,1.46875 1.234375,2.5 H 22.625 Z m -7.859375,21.203125 c -1.03125,0 -1.890625,0.574219 -2.578125,1.71875 -0.6875,1.136719 -1.25,2.453125 -1.6875,3.953125 -0.429688,1.5 -0.742188,3.007812 -0.9375,4.515625 -0.1875,1.5 -0.28125,2.617187 -0.28125,3.34375 0,0.867187 0.128906,1.589844 0.390625,2.171875 0.257813,0.574219 0.753906,0.859375 1.484375,0.859375 0.425781,0 0.84375,-0.09375 1.25,-0.28125 0.40625,-0.195313 0.789062,-0.4375 1.15625,-0.71875 0.375,-0.28125 0.6875,-0.566406 0.9375,-0.859375 0.257812,-0.300781 0.476562,-0.5625 0.65625,-0.78125 l 2.5,-11.734375 c -0.292969,-0.46875 -0.6875,-0.945313 -1.1875,-1.4375 -0.492188,-0.5 -1.058594,-0.75 -1.703125,-0.75 z m 0,0"
             id="path3378-7"
             style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
       fill="#18b400"
       fill-opacity="1"
       id="g3392-4"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#1c9712;fill-opacity:1"><g
         transform="translate(212.18937,72.97774)"
         id="g3390-9"
         style="fill:#1c9712;fill-opacity:1"><g
           id="g3388-7"
           style="fill:#1c9712;fill-opacity:1"><path
             d="m 14.046875,-12.953125 c -0.167969,0.949219 -0.289063,1.855469 -0.359375,2.71875 -0.0625,0.855469 -0.09375,1.625 -0.09375,2.3125 0,0.386719 0.01953,0.8125 0.0625,1.28125 0.05078,0.46875 0.148438,0.914063 0.296875,1.328125 0.15625,0.40625 0.367187,0.75 0.640625,1.03125 0.28125,0.273438 0.679688,0.40625 1.203125,0.40625 0.382813,0 0.820313,-0.125 1.3125,-0.375 0.5,-0.257812 0.992187,-0.625 1.484375,-1.09375 0.5,-0.476562 0.972656,-1.0625 1.421875,-1.75 0.445313,-0.6875 0.800781,-1.457031 1.0625,-2.3125 h 10.5625 L 29.96875,-2.515625 C 29.113281,-1.953125 28.125,-1.476562 27,-1.09375 c -1.117188,0.386719 -2.296875,0.699219 -3.546875,0.9375 -1.242187,0.2265625 -2.507813,0.394531 -3.796875,0.5 -1.292969,0.113281 -2.515625,0.171875 -3.671875,0.171875 -2.148437,0 -4.148437,-0.195313 -6,-0.578125 -1.84375,-0.382812 -3.453125,-1.050781 -4.828125,-2 -1.375,-0.945312 -2.464844,-2.203125 -3.265625,-3.765625 -0.792969,-1.570313 -1.1875,-3.519531 -1.1875,-5.84375 0,-2.101563 0.332031,-4.164063 1,-6.1875 0.664063,-2.019531 1.78125,-3.8125 3.34375,-5.375 C 6.617188,-24.804688 8.726562,-26.0625 11.375,-27 c 2.644531,-0.945312 5.941406,-1.421875 9.890625,-1.421875 4.300781,0 7.535156,0.667969 9.703125,2 2.164062,1.335937 3.25,3.417969 3.25,6.25 0,1.15625 -0.171875,2.414063 -0.515625,3.765625 -0.34375,1.355469 -0.859375,2.507812 -1.546875,3.453125 z M 22.625,-20.625 c 0,-1.332031 -0.21875,-2.234375 -0.65625,-2.703125 -0.429688,-0.476563 -0.9375,-0.71875 -1.53125,-0.71875 -0.6875,0 -1.324219,0.230469 -1.90625,0.6875 -0.585938,0.449219 -1.109375,1.046875 -1.578125,1.796875 -0.46875,0.75 -0.902344,1.609375 -1.296875,2.578125 -0.386719,0.96875 -0.703125,1.992187 -0.953125,3.0625 h 7.34375 c 0.08203,-0.507813 0.164063,-1.046875 0.25,-1.609375 0.09375,-0.46875 0.171875,-0.984375 0.234375,-1.546875 0.0625,-0.5625 0.09375,-1.078125 0.09375,-1.546875 z m 0,0"
             id="path3386-0"
             style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
       fill="#18b400"
       fill-opacity="1"
       id="g3400-9"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#1c9712;fill-opacity:1"><g
         transform="translate(247.44675,72.97774)"
         id="g3398-5"
         style="fill:#1c9712;fill-opacity:1"><g
           id="g3396-8"
           style="fill:#1c9712;fill-opacity:1"><path
             d="m 17.28125,-23.59375 c 0.894531,-0.851562 1.898438,-1.644531 3.015625,-2.375 0.988281,-0.601562 2.148437,-1.160156 3.484375,-1.671875 1.332031,-0.519531 2.816406,-0.78125 4.453125,-0.78125 2.226563,0 4.070313,0.570313 5.53125,1.703125 1.46875,1.136719 2.203125,2.695312 2.203125,4.671875 0,0.5625 -0.07031,1.242187 -0.203125,2.03125 -0.125,0.792969 -0.277344,1.621094 -0.453125,2.484375 -0.167969,0.855469 -0.351562,1.726562 -0.546875,2.609375 -0.1875,0.886719 -0.34375,1.671875 -0.46875,2.359375 L 31.578125,0 H 18.5 l 3.546875,-16.828125 c 0.08203,-0.550781 0.1875,-1.117187 0.3125,-1.703125 0.132813,-0.582031 0.203125,-1.109375 0.203125,-1.578125 0,-0.644531 -0.164062,-1.171875 -0.484375,-1.578125 -0.324219,-0.40625 -0.808594,-0.609375 -1.453125,-0.609375 -0.773438,0 -1.511719,0.28125 -2.21875,0.84375 -0.710938,0.554687 -1.257812,1.023437 -1.640625,1.40625 L 12.5,0 H -0.640625 L 5.21875,-27.71875 h 10.515625 l 1.15625,4.125 z m 0,0"
             id="path3394-8"
             style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
       fill="#18b400"
       fill-opacity="0.4"
       id="g3408-4"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(284.83897,76.449865)"
         id="g3406-8"><g
           id="g3404-1"><path
             d="M 41.5,-38.09375 H 30.53125 L 22.421875,0 H 7.703125 L 15.8125,-38.09375 H 4.96875 l 1.234375,-5.171875 H 42.65625 Z m 0,0"
             id="path3402-4" /></g></g></g><g
       fill="#18b400"
       fill-opacity="0.4"
       id="g3416-3"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(322.65713,76.449865)"
         id="g3414-6"><g
           id="g3412-1"><path
             d="m 9.203125,-43.265625 h 28.6875 l -1.09375,5.171875 H 22.890625 L 20.03125,-24.9375 H 31.6875 l -1.09375,5.109375 H 18.9375 L 15.8125,-5.25 H 29.703125 L 28.6875,0 H 0 Z m 0,0"
             id="path3410-9" /></g></g></g><g
       fill="#18b400"
       fill-opacity="0.4"
       id="g3424-9"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(356.93197,76.449865)"
         id="g3422-2"><g
           id="g3420-6"><path
             d="m 19.96875,-24.46875 16.828125,-18.875 H 44.5 L 29.234375,-26.78125 39.59375,0 H 24.734375 l -6,-19.015625 L 14.71875,0 H 0 l 9.203125,-43.265625 h 14.78125 z m 0,0"
             id="path3418-6" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="1"
       id="g3432-4"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#0859d7;fill-opacity:1"><g
         transform="translate(281.82746,73.438347)"
         id="g3430-9"
         style="fill:#0859d7;fill-opacity:1"><g
           id="g3428-5"
           style="fill:#0859d7;fill-opacity:1"><path
             d="M 41.5,-38.09375 H 30.53125 L 22.421875,0 H 7.703125 L 15.8125,-38.09375 H 4.96875 l 1.234375,-5.171875 H 42.65625 Z m 0,0"
             id="path3426-2"
             style="fill:#0859d7;fill-opacity:1" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="1"
       id="g3440-5"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#0859d7;fill-opacity:1"><g
         transform="translate(319.64562,73.438347)"
         id="g3438-3"
         style="fill:#0859d7;fill-opacity:1"><g
           id="g3436-6"
           style="fill:#0859d7;fill-opacity:1"><path
             d="m 9.203125,-43.265625 h 28.6875 l -1.09375,5.171875 H 22.890625 L 20.03125,-24.9375 H 31.6875 l -1.09375,5.109375 H 18.9375 L 15.8125,-5.25 H 29.703125 L 28.6875,0 H 0 Z m 0,0"
             id="path3434-9"
             style="fill:#0859d7;fill-opacity:1" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="1"
       id="g3448-5"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#0859d7;fill-opacity:1"><g
         transform="translate(353.92046,73.438347)"
         id="g3446-7"
         style="fill:#0859d7;fill-opacity:1"><g
           id="g3444-0"
           style="fill:#0859d7;fill-opacity:1"><path
             d="m 19.96875,-24.46875 16.828125,-18.875 H 44.5 L 29.234375,-26.78125 39.59375,0 H 24.734375 l -6,-19.015625 L 14.71875,0 H 0 l 9.203125,-43.265625 h 14.78125 z m 0,0"
             id="path3442-7"
             style="fill:#0859d7;fill-opacity:1" /></g></g></g><g
       fill="#18b400"
       fill-opacity="0.4"
       id="g3456-3"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(183.08102,114.72709)"
         id="g3454-6"><g
           id="g3452-8"><path
             d="m 11.359375,-9.28125 h 8.28125 L 17.796875,0 h -3.78125 L 13.40625,-2.046875 h -0.125 c -0.554688,0.636719 -1.210938,1.179687 -1.96875,1.625 C 10.550781,0.0234375 9.566406,0.25 8.359375,0.25 7.410156,0.25 6.503906,0.0976562 5.640625,-0.203125 4.785156,-0.515625 4.019531,-1.003906 3.34375,-1.671875 2.675781,-2.347656 2.140625,-3.226562 1.734375,-4.3125 1.328125,-5.40625 1.125,-6.71875 1.125,-8.25 c 0,-1.664062 0.253906,-3.242188 0.765625,-4.734375 0.507813,-1.5 1.273437,-2.816406 2.296875,-3.953125 1.03125,-1.144531 2.3125,-2.046875 3.84375,-2.703125 1.539062,-0.664063 3.332031,-1 5.375,-1 1.582031,0 2.957031,0.183594 4.125,0.546875 1.175781,0.367188 2.285156,0.773438 3.328125,1.21875 l -1.21875,6.203125 h -5.40625 c 0.01953,-0.238281 0.05078,-0.515625 0.09375,-0.828125 0.05078,-0.320312 0.08594,-0.660156 0.109375,-1.015625 0.01953,-0.351563 0.03906,-0.695313 0.0625,-1.03125 0.01953,-0.34375 0.03125,-0.644531 0.03125,-0.90625 0,-0.164063 -0.01172,-0.359375 -0.03125,-0.578125 -0.02344,-0.226562 -0.07813,-0.445312 -0.171875,-0.65625 -0.08594,-0.21875 -0.210937,-0.394531 -0.375,-0.53125 -0.167969,-0.144531 -0.414063,-0.21875 -0.734375,-0.21875 -0.554688,0 -1.058594,0.230469 -1.515625,0.6875 -0.460937,0.460938 -0.871094,1.070312 -1.234375,1.828125 -0.367188,0.761719 -0.683594,1.621094 -0.953125,2.578125 -0.261719,0.960938 -0.484375,1.9375 -0.671875,2.9375 C 8.664062,-9.414062 8.523438,-8.445312 8.421875,-7.5 8.328125,-6.550781 8.28125,-5.726562 8.28125,-5.03125 c 0,0.21875 0.00781,0.492188 0.03125,0.8125 0.03125,0.3125 0.101562,0.625 0.21875,0.9375 0.113281,0.3125 0.28125,0.585938 0.5,0.8125 0.226562,0.21875 0.554688,0.328125 0.984375,0.328125 0.707031,0 1.390625,-0.382813 2.046875,-1.15625 0.664062,-0.769531 1.164062,-2.050781 1.5,-3.84375 H 10.875 Z m 0,0"
             id="path3450-1" /></g></g></g><g
       fill="#18b400"
       fill-opacity="0.4"
       id="g3464-2"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(203.61997,114.72709)"
         id="g3462-6"><g
           id="g3460-1"><path
             d="m 19.9375,-15.484375 c 0,1.261719 -0.355469,2.421875 -1.0625,3.484375 -0.699219,1.0625 -1.859375,1.875 -3.484375,2.4375 L 19.109375,0 H 11.96875 L 9.15625,-8.859375 H 8.796875 L 6.90625,0 H 0 l 4.3125,-20.3125 h 8.421875 c 0.976563,0 1.90625,0.05859 2.78125,0.171875 0.875,0.117187 1.632813,0.351563 2.28125,0.703125 0.65625,0.355469 1.175781,0.84375 1.5625,1.46875 0.382813,0.625 0.578125,1.453125 0.578125,2.484375 z m -9.21875,4.578125 c 0.550781,0 1.023438,-0.1875 1.421875,-0.5625 0.394531,-0.375 0.710937,-0.828125 0.953125,-1.359375 0.25,-0.53125 0.425781,-1.097656 0.53125,-1.703125 0.113281,-0.613281 0.171875,-1.144531 0.171875,-1.59375 0,-0.550781 -0.101563,-1.023438 -0.296875,-1.421875 -0.1875,-0.394531 -0.605469,-0.59375 -1.25,-0.59375 h -1.4375 l -1.59375,7.234375 z m 0,0"
             id="path3458-7" /></g></g></g><g
       fill="#18b400"
       fill-opacity="0.4"
       id="g3472-7"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(223.87098,114.72709)"
         id="g3470-8"><g
           id="g3468-6"><path
             d="m 13.15625,-20.640625 c 1.832031,0 3.316406,0.234375 4.453125,0.703125 1.144531,0.46875 2.046875,1.195312 2.703125,2.171875 0.425781,0.667969 0.753906,1.417969 0.984375,2.25 0.238281,0.835937 0.359375,1.792969 0.359375,2.875 0,0.9375 -0.08594,1.875 -0.25,2.8125 C 21.238281,-8.890625 21,-7.988281 20.6875,-7.125 20.375,-6.257812 20,-5.445312 19.5625,-4.6875 c -0.4375,0.761719 -0.921875,1.429688 -1.453125,2 -1,1.085938 -2.15625,1.84375 -3.46875,2.28125 C 13.328125,0.03125 11.710938,0.25 9.796875,0.25 7.941406,0.25 6.445312,0.0625 5.3125,-0.3125 4.175781,-0.695312 3.28125,-1.316406 2.625,-2.171875 2.15625,-2.773438 1.785156,-3.535156 1.515625,-4.453125 1.253906,-5.367188 1.125,-6.519531 1.125,-7.90625 c 0,-2.363281 0.414062,-4.476562 1.25,-6.34375 0.84375,-1.875 2.046875,-3.351562 3.609375,-4.4375 0.9375,-0.664062 1.976563,-1.15625 3.125,-1.46875 1.15625,-0.320312 2.503906,-0.484375 4.046875,-0.484375 z m -3.625,18.65625 c 0.488281,0 0.953125,-0.21875 1.390625,-0.65625 0.4375,-0.4375 0.84375,-1.019531 1.21875,-1.75 0.375,-0.738281 0.710937,-1.578125 1.015625,-2.515625 0.3125,-0.9375 0.570312,-1.90625 0.78125,-2.90625 0.21875,-1.007812 0.382812,-2.007812 0.5,-3 0.125,-0.988281 0.1875,-1.890625 0.1875,-2.703125 0,-1.113281 -0.117188,-1.878906 -0.34375,-2.296875 -0.21875,-0.414062 -0.542969,-0.625 -0.96875,-0.625 -0.492188,0 -0.960938,0.214844 -1.40625,0.640625 -0.449219,0.429687 -0.871094,1 -1.265625,1.71875 -0.398437,0.710937 -0.75,1.53125 -1.0625,2.46875 C 9.273438,-12.679688 9.007812,-11.726562 8.78125,-10.75 8.5625,-9.769531 8.390625,-8.800781 8.265625,-7.84375 8.148438,-6.882812 8.09375,-6 8.09375,-5.1875 c 0,1.21875 0.128906,2.058594 0.390625,2.515625 0.269531,0.460937 0.617187,0.6875 1.046875,0.6875 z m 0,0"
             id="path3466-0" /></g></g></g><g
       fill="#18b400"
       fill-opacity="0.4"
       id="g3480-4"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(245.78559,114.72709)"
         id="g3478-6"><g
           id="g3476-4"><path
             d="m 2.5,-20.3125 h 7.796875 L 10.84375,-6.46875 16.1875,-20.3125 h 6.34375 l 0.828125,13.84375 5.375,-13.84375 H 32.09375 L 24.1875,0 H 16.984375 L 16.3125,-11.484375 11.515625,0 H 3.84375 Z m 0,0"
             id="path3474-2" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="1"
       id="g3488-5"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#0859d7;fill-opacity:1"><g
         transform="translate(181.6668,113.31288)"
         id="g3486-9"
         style="fill:#0859d7;fill-opacity:1"><g
           id="g3484-9"
           style="fill:#0859d7;fill-opacity:1"><path
             d="m 11.359375,-9.28125 h 8.28125 L 17.796875,0 h -3.78125 L 13.40625,-2.046875 h -0.125 c -0.554688,0.636719 -1.210938,1.179687 -1.96875,1.625 C 10.550781,0.0234375 9.566406,0.25 8.359375,0.25 7.410156,0.25 6.503906,0.0976562 5.640625,-0.203125 4.785156,-0.515625 4.019531,-1.003906 3.34375,-1.671875 2.675781,-2.347656 2.140625,-3.226562 1.734375,-4.3125 1.328125,-5.40625 1.125,-6.71875 1.125,-8.25 c 0,-1.664062 0.253906,-3.242188 0.765625,-4.734375 0.507813,-1.5 1.273437,-2.816406 2.296875,-3.953125 1.03125,-1.144531 2.3125,-2.046875 3.84375,-2.703125 1.539062,-0.664063 3.332031,-1 5.375,-1 1.582031,0 2.957031,0.183594 4.125,0.546875 1.175781,0.367188 2.285156,0.773438 3.328125,1.21875 l -1.21875,6.203125 h -5.40625 c 0.01953,-0.238281 0.05078,-0.515625 0.09375,-0.828125 0.05078,-0.320312 0.08594,-0.660156 0.109375,-1.015625 0.01953,-0.351563 0.03906,-0.695313 0.0625,-1.03125 0.01953,-0.34375 0.03125,-0.644531 0.03125,-0.90625 0,-0.164063 -0.01172,-0.359375 -0.03125,-0.578125 -0.02344,-0.226562 -0.07813,-0.445312 -0.171875,-0.65625 -0.08594,-0.21875 -0.210937,-0.394531 -0.375,-0.53125 -0.167969,-0.144531 -0.414063,-0.21875 -0.734375,-0.21875 -0.554688,0 -1.058594,0.230469 -1.515625,0.6875 -0.460937,0.460938 -0.871094,1.070312 -1.234375,1.828125 -0.367188,0.761719 -0.683594,1.621094 -0.953125,2.578125 -0.261719,0.960938 -0.484375,1.9375 -0.671875,2.9375 C 8.664062,-9.414062 8.523438,-8.445312 8.421875,-7.5 8.328125,-6.550781 8.28125,-5.726562 8.28125,-5.03125 c 0,0.21875 0.00781,0.492188 0.03125,0.8125 0.03125,0.3125 0.101562,0.625 0.21875,0.9375 0.113281,0.3125 0.28125,0.585938 0.5,0.8125 0.226562,0.21875 0.554688,0.328125 0.984375,0.328125 0.707031,0 1.390625,-0.382813 2.046875,-1.15625 0.664062,-0.769531 1.164062,-2.050781 1.5,-3.84375 H 10.875 Z m 0,0"
             id="path3482-9"
             style="fill:#0859d7;fill-opacity:1" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="1"
       id="g3496-2"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#0859d7;fill-opacity:1"><g
         transform="translate(202.20575,113.31288)"
         id="g3494-8"
         style="fill:#0859d7;fill-opacity:1"><g
           id="g3492-6"
           style="fill:#0859d7;fill-opacity:1"><path
             d="m 19.9375,-15.484375 c 0,1.261719 -0.355469,2.421875 -1.0625,3.484375 -0.699219,1.0625 -1.859375,1.875 -3.484375,2.4375 L 19.109375,0 H 11.96875 L 9.15625,-8.859375 H 8.796875 L 6.90625,0 H 0 l 4.3125,-20.3125 h 8.421875 c 0.976563,0 1.90625,0.05859 2.78125,0.171875 0.875,0.117187 1.632813,0.351563 2.28125,0.703125 0.65625,0.355469 1.175781,0.84375 1.5625,1.46875 0.382813,0.625 0.578125,1.453125 0.578125,2.484375 z m -9.21875,4.578125 c 0.550781,0 1.023438,-0.1875 1.421875,-0.5625 0.394531,-0.375 0.710937,-0.828125 0.953125,-1.359375 0.25,-0.53125 0.425781,-1.097656 0.53125,-1.703125 0.113281,-0.613281 0.171875,-1.144531 0.171875,-1.59375 0,-0.550781 -0.101563,-1.023438 -0.296875,-1.421875 -0.1875,-0.394531 -0.605469,-0.59375 -1.25,-0.59375 h -1.4375 l -1.59375,7.234375 z m 0,0"
             id="path3490-6"
             style="fill:#0859d7;fill-opacity:1" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="1"
       id="g3504-9"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#0859d7;fill-opacity:1"><g
         transform="translate(222.45676,113.31288)"
         id="g3502-9"
         style="fill:#0859d7;fill-opacity:1"><g
           id="g3500-2"
           style="fill:#0859d7;fill-opacity:1"><path
             d="m 13.15625,-20.640625 c 1.832031,0 3.316406,0.234375 4.453125,0.703125 1.144531,0.46875 2.046875,1.195312 2.703125,2.171875 0.425781,0.667969 0.753906,1.417969 0.984375,2.25 0.238281,0.835937 0.359375,1.792969 0.359375,2.875 0,0.9375 -0.08594,1.875 -0.25,2.8125 C 21.238281,-8.890625 21,-7.988281 20.6875,-7.125 20.375,-6.257812 20,-5.445312 19.5625,-4.6875 c -0.4375,0.761719 -0.921875,1.429688 -1.453125,2 -1,1.085938 -2.15625,1.84375 -3.46875,2.28125 C 13.328125,0.03125 11.710938,0.25 9.796875,0.25 7.941406,0.25 6.445312,0.0625 5.3125,-0.3125 4.175781,-0.695312 3.28125,-1.316406 2.625,-2.171875 2.15625,-2.773438 1.785156,-3.535156 1.515625,-4.453125 1.253906,-5.367188 1.125,-6.519531 1.125,-7.90625 c 0,-2.363281 0.414062,-4.476562 1.25,-6.34375 0.84375,-1.875 2.046875,-3.351562 3.609375,-4.4375 0.9375,-0.664062 1.976563,-1.15625 3.125,-1.46875 1.15625,-0.320312 2.503906,-0.484375 4.046875,-0.484375 z m -3.625,18.65625 c 0.488281,0 0.953125,-0.21875 1.390625,-0.65625 0.4375,-0.4375 0.84375,-1.019531 1.21875,-1.75 0.375,-0.738281 0.710937,-1.578125 1.015625,-2.515625 0.3125,-0.9375 0.570312,-1.90625 0.78125,-2.90625 0.21875,-1.007812 0.382812,-2.007812 0.5,-3 0.125,-0.988281 0.1875,-1.890625 0.1875,-2.703125 0,-1.113281 -0.117188,-1.878906 -0.34375,-2.296875 -0.21875,-0.414062 -0.542969,-0.625 -0.96875,-0.625 -0.492188,0 -0.960938,0.214844 -1.40625,0.640625 -0.449219,0.429687 -0.871094,1 -1.265625,1.71875 -0.398437,0.710937 -0.75,1.53125 -1.0625,2.46875 C 9.273438,-12.679688 9.007812,-11.726562 8.78125,-10.75 8.5625,-9.769531 8.390625,-8.800781 8.265625,-7.84375 8.148438,-6.882812 8.09375,-6 8.09375,-5.1875 c 0,1.21875 0.128906,2.058594 0.390625,2.515625 0.269531,0.460937 0.617187,0.6875 1.046875,0.6875 z m 0,0"
             id="path3498-7"
             style="fill:#0859d7;fill-opacity:1" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="1"
       id="g3512-5"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#0859d7;fill-opacity:1"><g
         transform="translate(244.37137,113.31288)"
         id="g3510-2"
         style="fill:#0859d7;fill-opacity:1"><g
           id="g3508-1"
           style="fill:#0859d7;fill-opacity:1"><path
             d="m 2.5,-20.3125 h 7.796875 L 10.84375,-6.46875 16.1875,-20.3125 h 6.34375 l 0.828125,13.84375 5.375,-13.84375 H 32.09375 L 24.1875,0 H 16.984375 L 16.3125,-11.484375 11.515625,0 H 3.84375 Z m 0,0"
             id="path3506-2"
             style="fill:#0859d7;fill-opacity:1" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="0.4"
       id="g3520-3"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(281.54146,114.72709)"
         id="g3518-9"><g
           id="g3516-5"><path
             d="m 12.609375,-14.4375 c 0.0625,-0.3125 0.09375,-0.75 0.09375,-1.3125 0,-0.3125 -0.02344,-0.625 -0.0625,-0.9375 -0.04297,-0.3125 -0.121094,-0.585938 -0.234375,-0.828125 -0.105469,-0.25 -0.265625,-0.441406 -0.484375,-0.578125 -0.210937,-0.132812 -0.480469,-0.203125 -0.8125,-0.203125 -0.386719,0 -0.742187,0.08594 -1.0625,0.25 -0.324219,0.167969 -0.609375,0.386719 -0.859375,0.65625 -0.242188,0.273437 -0.429688,0.585937 -0.5625,0.9375 -0.136719,0.34375 -0.203125,0.710937 -0.203125,1.09375 0,0.554687 0.140625,0.980469 0.421875,1.28125 0.289062,0.304687 0.671875,0.546875 1.140625,0.734375 0.46875,0.1875 1,0.351562 1.59375,0.484375 0.601563,0.125 1.222656,0.273437 1.859375,0.4375 0.53125,0.15625 1.0625,0.355469 1.59375,0.59375 0.539062,0.230469 1.019531,0.542969 1.4375,0.9375 0.414062,0.398437 0.75,0.90625 1,1.53125 0.257812,0.625 0.390625,1.40625 0.390625,2.34375 0,1.355469 -0.273437,2.492187 -0.8125,3.40625 C 16.515625,-2.691406 15.78125,-1.945312 14.84375,-1.375 13.90625,-0.800781 12.789062,-0.382812 11.5,-0.125 10.207031,0.125 8.804688,0.25 7.296875,0.25 5.753906,0.25 4.5,0.148438 3.53125,-0.046875 2.5625,-0.253906 1.800781,-0.472656 1.25,-0.703125 0.582031,-0.984375 0.09375,-1.300781 -0.21875,-1.65625 L 0.859375,-6.046875 H 6.5 c -0.023438,0.1875 -0.042969,0.449219 -0.0625,0.78125 -0.023438,0.335937 -0.03125,0.59375 -0.03125,0.78125 0,0.261719 0.03125,0.53125 0.09375,0.8125 0.0625,0.273437 0.160156,0.527344 0.296875,0.765625 0.144531,0.230469 0.34375,0.421875 0.59375,0.578125 0.257813,0.148437 0.582031,0.21875 0.96875,0.21875 0.414063,0 0.789063,-0.09375 1.125,-0.28125 0.332031,-0.195313 0.609375,-0.4375 0.828125,-0.71875 0.226562,-0.289063 0.398438,-0.613281 0.515625,-0.96875 0.125,-0.351563 0.1875,-0.703125 0.1875,-1.046875 0,-0.46875 -0.117187,-0.859375 -0.34375,-1.171875 -0.21875,-0.320313 -0.523437,-0.59375 -0.90625,-0.8125 C 9.378906,-7.335938 8.9375,-7.53125 8.4375,-7.6875 7.9375,-7.851562 7.414062,-8.019531 6.875,-8.1875 6.363281,-8.34375 5.828125,-8.523438 5.265625,-8.734375 4.703125,-8.953125 4.1875,-9.25 3.71875,-9.625 3.25,-10.007812 2.859375,-10.492188 2.546875,-11.078125 c -0.3125,-0.59375 -0.46875,-1.347656 -0.46875,-2.265625 0,-1.363281 0.34375,-2.507812 1.03125,-3.4375 0.695313,-0.925781 1.570313,-1.675781 2.625,-2.25 1.0625,-0.582031 2.222656,-0.992188 3.484375,-1.234375 1.257812,-0.25 2.453125,-0.375 3.578125,-0.375 1.5,0 2.785156,0.179687 3.859375,0.53125 1.070312,0.355469 1.890625,0.765625 2.453125,1.234375 l -1.1875,4.4375 z m 0,0"
             id="path3514-6" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="0.4"
       id="g3528-5"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(300.32085,114.72709)"
         id="g3526-4"><g
           id="g3524-8"><path
             d="m 23.484375,0 h -7.09375 l 2.9375,-13.828125 L 11.75,0 H 7.390625 L 5.953125,-14.296875 2.875,0 H 0 l 4.3125,-20.3125 h 8.171875 L 13.46875,-8.859375 19.609375,-20.3125 h 8.234375 z m 0,0"
             id="path3522-9" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="0.4"
       id="g3536-9"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(327.32221,114.72709)"
         id="g3534-0"><g
           id="g3532-3"><path
             d="m 17.734375,0 h -7.5 l -0.4375,-5.09375 H 3.875 L 1.59375,0 H -1.5 l 9.4375,-20.3125 h 7.578125 z M 4.921875,-7.421875 H 9.5625 L 8.828125,-16.125 Z m 0,0"
             id="path3530-6" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="0.4"
       id="g3544-6"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(346.58147,114.72709)"
         id="g3542-2"><g
           id="g3540-2"><path
             d="m 19.9375,-15.484375 c 0,1.261719 -0.355469,2.421875 -1.0625,3.484375 -0.699219,1.0625 -1.859375,1.875 -3.484375,2.4375 L 19.109375,0 H 11.96875 L 9.15625,-8.859375 H 8.796875 L 6.90625,0 H 0 l 4.3125,-20.3125 h 8.421875 c 0.976563,0 1.90625,0.05859 2.78125,0.171875 0.875,0.117187 1.632813,0.351563 2.28125,0.703125 0.65625,0.355469 1.175781,0.84375 1.5625,1.46875 0.382813,0.625 0.578125,1.453125 0.578125,2.484375 z m -9.21875,4.578125 c 0.550781,0 1.023438,-0.1875 1.421875,-0.5625 0.394531,-0.375 0.710937,-0.828125 0.953125,-1.359375 0.25,-0.53125 0.425781,-1.097656 0.53125,-1.703125 0.113281,-0.613281 0.171875,-1.144531 0.171875,-1.59375 0,-0.550781 -0.101563,-1.023438 -0.296875,-1.421875 -0.1875,-0.394531 -0.605469,-0.59375 -1.25,-0.59375 h -1.4375 l -1.59375,7.234375 z m 0,0"
             id="path3538-8" /></g></g></g><g
       fill="#0753eb"
       fill-opacity="0.4"
       id="g3552-5"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"><g
         transform="translate(366.83249,114.72709)"
         id="g3550-8"><g
           id="g3548-8"><path
             d="M 19.484375,-17.890625 H 14.34375 L 10.53125,0 H 3.609375 l 3.8125,-17.890625 H 2.34375 l 0.5625,-2.421875 h 17.125 z m 0,0"
             id="path3546-3" /></g></g></g><g
       fill="#18b400"
       fill-opacity="1"
       id="g3560-4"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#1c9712;fill-opacity:1"><g
         transform="translate(280.12725,113.31288)"
         id="g3558-0"
         style="fill:#1c9712;fill-opacity:1"><g
           id="g3556-1"
           style="fill:#1c9712;fill-opacity:1"><path
             d="m 12.609375,-14.4375 c 0.0625,-0.3125 0.09375,-0.75 0.09375,-1.3125 0,-0.3125 -0.02344,-0.625 -0.0625,-0.9375 -0.04297,-0.3125 -0.121094,-0.585938 -0.234375,-0.828125 -0.105469,-0.25 -0.265625,-0.441406 -0.484375,-0.578125 -0.210937,-0.132812 -0.480469,-0.203125 -0.8125,-0.203125 -0.386719,0 -0.742187,0.08594 -1.0625,0.25 -0.324219,0.167969 -0.609375,0.386719 -0.859375,0.65625 -0.242188,0.273437 -0.429688,0.585937 -0.5625,0.9375 -0.136719,0.34375 -0.203125,0.710937 -0.203125,1.09375 0,0.554687 0.140625,0.980469 0.421875,1.28125 0.289062,0.304687 0.671875,0.546875 1.140625,0.734375 0.46875,0.1875 1,0.351562 1.59375,0.484375 0.601563,0.125 1.222656,0.273437 1.859375,0.4375 0.53125,0.15625 1.0625,0.355469 1.59375,0.59375 0.539062,0.230469 1.019531,0.542969 1.4375,0.9375 0.414062,0.398437 0.75,0.90625 1,1.53125 0.257812,0.625 0.390625,1.40625 0.390625,2.34375 0,1.355469 -0.273437,2.492187 -0.8125,3.40625 C 16.515625,-2.691406 15.78125,-1.945312 14.84375,-1.375 13.90625,-0.800781 12.789062,-0.382812 11.5,-0.125 10.207031,0.125 8.804688,0.25 7.296875,0.25 5.753906,0.25 4.5,0.148438 3.53125,-0.046875 2.5625,-0.253906 1.800781,-0.472656 1.25,-0.703125 0.582031,-0.984375 0.09375,-1.300781 -0.21875,-1.65625 L 0.859375,-6.046875 H 6.5 c -0.023438,0.1875 -0.042969,0.449219 -0.0625,0.78125 -0.023438,0.335937 -0.03125,0.59375 -0.03125,0.78125 0,0.261719 0.03125,0.53125 0.09375,0.8125 0.0625,0.273437 0.160156,0.527344 0.296875,0.765625 0.144531,0.230469 0.34375,0.421875 0.59375,0.578125 0.257813,0.148437 0.582031,0.21875 0.96875,0.21875 0.414063,0 0.789063,-0.09375 1.125,-0.28125 0.332031,-0.195313 0.609375,-0.4375 0.828125,-0.71875 0.226562,-0.289063 0.398438,-0.613281 0.515625,-0.96875 0.125,-0.351563 0.1875,-0.703125 0.1875,-1.046875 0,-0.46875 -0.117187,-0.859375 -0.34375,-1.171875 -0.21875,-0.320313 -0.523437,-0.59375 -0.90625,-0.8125 C 9.378906,-7.335938 8.9375,-7.53125 8.4375,-7.6875 7.9375,-7.851562 7.414062,-8.019531 6.875,-8.1875 6.363281,-8.34375 5.828125,-8.523438 5.265625,-8.734375 4.703125,-8.953125 4.1875,-9.25 3.71875,-9.625 3.25,-10.007812 2.859375,-10.492188 2.546875,-11.078125 c -0.3125,-0.59375 -0.46875,-1.347656 -0.46875,-2.265625 0,-1.363281 0.34375,-2.507812 1.03125,-3.4375 0.695313,-0.925781 1.570313,-1.675781 2.625,-2.25 1.0625,-0.582031 2.222656,-0.992188 3.484375,-1.234375 1.257812,-0.25 2.453125,-0.375 3.578125,-0.375 1.5,0 2.785156,0.179687 3.859375,0.53125 1.070312,0.355469 1.890625,0.765625 2.453125,1.234375 l -1.1875,4.4375 z m 0,0"
             id="path3554-2"
             style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
       fill="#18b400"
       fill-opacity="1"
       id="g3568-2"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#1c9712;fill-opacity:1"><g
         transform="translate(298.90663,113.31288)"
         id="g3566-6"
         style="fill:#1c9712;fill-opacity:1"><g
           id="g3564-6"
           style="fill:#1c9712;fill-opacity:1"><path
             d="m 23.484375,0 h -7.09375 l 2.9375,-13.828125 L 11.75,0 H 7.390625 L 5.953125,-14.296875 2.875,0 H 0 l 4.3125,-20.3125 h 8.171875 L 13.46875,-8.859375 19.609375,-20.3125 h 8.234375 z m 0,0"
             id="path3562-2"
             style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
       fill="#18b400"
       fill-opacity="1"
       id="g3576-9"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#1c9712;fill-opacity:1"><g
         transform="translate(325.90799,113.31288)"
         id="g3574-9"
         style="fill:#1c9712;fill-opacity:1"><g
           id="g3572-9"
           style="fill:#1c9712;fill-opacity:1"><path
             d="m 17.734375,0 h -7.5 l -0.4375,-5.09375 H 3.875 L 1.59375,0 H -1.5 l 9.4375,-20.3125 h 7.578125 z M 4.921875,-7.421875 H 9.5625 L 8.828125,-16.125 Z m 0,0"
             id="path3570-8"
             style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
       fill="#18b400"
       fill-opacity="1"
       id="g3584-4"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#1c9712;fill-opacity:1"><g
         transform="translate(345.16725,113.31288)"
         id="g3582-4"
         style="fill:#1c9712;fill-opacity:1"><g
           id="g3580-3"
           style="fill:#1c9712;fill-opacity:1"><path
             d="m 19.9375,-15.484375 c 0,1.261719 -0.355469,2.421875 -1.0625,3.484375 -0.699219,1.0625 -1.859375,1.875 -3.484375,2.4375 L 19.109375,0 H 11.96875 L 9.15625,-8.859375 H 8.796875 L 6.90625,0 H 0 l 4.3125,-20.3125 h 8.421875 c 0.976563,0 1.90625,0.05859 2.78125,0.171875 0.875,0.117187 1.632813,0.351563 2.28125,0.703125 0.65625,0.355469 1.175781,0.84375 1.5625,1.46875 0.382813,0.625 0.578125,1.453125 0.578125,2.484375 z m -9.21875,4.578125 c 0.550781,0 1.023438,-0.1875 1.421875,-0.5625 0.394531,-0.375 0.710937,-0.828125 0.953125,-1.359375 0.25,-0.53125 0.425781,-1.097656 0.53125,-1.703125 0.113281,-0.613281 0.171875,-1.144531 0.171875,-1.59375 0,-0.550781 -0.101563,-1.023438 -0.296875,-1.421875 -0.1875,-0.394531 -0.605469,-0.59375 -1.25,-0.59375 h -1.4375 l -1.59375,7.234375 z m 0,0"
             id="path3578-5"
             style="fill:#1c9712;fill-opacity:1" /></g></g></g><g
       fill="#18b400"
       fill-opacity="1"
       id="g3592-0"
       transform="matrix(0.23459994,0,0,0.23459994,42.513973,268.69774)"
       style="fill:#1c9712;fill-opacity:1"><g
         transform="translate(365.41827,113.31288)"
         id="g3590-5"
         style="fill:#1c9712;fill-opacity:1"><g
           id="g3588-7"
           style="fill:#1c9712;fill-opacity:1"><path
             d="M 19.484375,-17.890625 H 14.34375 L 10.53125,0 H 3.609375 l 3.8125,-17.890625 H 2.34375 l 0.5625,-2.421875 h 17.125 z m 0,0"
             id="path3586-5"
             style="fill:#1c9712;fill-opacity:1" /></g></g></g></g></svg>
